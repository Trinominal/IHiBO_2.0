{
  "contractName": "Argumentation",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "args",
          "type": "uint256[]"
        }
      ],
      "name": "PreferredExtensions",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "insertArgument",
      "outputs": [
        {
          "name": "argId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "argId",
          "type": "uint256"
        }
      ],
      "name": "supportArgument",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sourceId",
          "type": "uint256"
        },
        {
          "name": "targetId",
          "type": "uint256"
        },
        {
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "insertAttack",
      "outputs": [
        {
          "name": "edgeId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pafReductionToAfPr1",
      "outputs": [
        {
          "name": "graphId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pafReductionToAfPr3",
      "outputs": [
        {
          "name": "graphId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "graphId",
          "type": "uint256"
        }
      ],
      "name": "getGraph",
      "outputs": [
        {
          "name": "nodes",
          "type": "uint256[]"
        },
        {
          "name": "edgesSource",
          "type": "uint256[]"
        },
        {
          "name": "edgesTarget",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "graphId",
          "type": "uint256"
        }
      ],
      "name": "enumeratingPreferredExtensions",
      "outputs": [
        {
          "name": "args",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"pafReductionToAfPr1\",\"outputs\":[{\"name\":\"graphId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"graphId\",\"type\":\"uint256\"}],\"name\":\"getGraph\",\"outputs\":[{\"name\":\"nodes\",\"type\":\"uint256[]\"},{\"name\":\"edgesSource\",\"type\":\"uint256[]\"},{\"name\":\"edgesTarget\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"graphId\",\"type\":\"uint256\"}],\"name\":\"enumeratingPreferredExtensions\",\"outputs\":[{\"name\":\"args\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sourceId\",\"type\":\"uint256\"},{\"name\":\"targetId\",\"type\":\"uint256\"},{\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"insertAttack\",\"outputs\":[{\"name\":\"edgeId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"argId\",\"type\":\"uint256\"}],\"name\":\"supportArgument\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pafReductionToAfPr3\",\"outputs\":[{\"name\":\"graphId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"insertArgument\",\"outputs\":[{\"name\":\"argId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"args\",\"type\":\"uint256[]\"}],\"name\":\"PreferredExtensions\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Argumentation.sol\":\"Argumentation\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Argumentation.sol\":{\"keccak256\":\"0x161efa0e6e3c2c3ad49e6d61534bd13682e749444a698bea2557d36c997ab102\",\"urls\":[\"bzzr://5ca7e1af12baff1cd8e607d9cd861c8577440a2245a3b508151b97fabf2e4f4f\"]},\"project:/contracts/DirectedGraph.sol\":{\"keccak256\":\"0x7dc19f63bc0363bc43ba9b0cd6ffcb7968d4598c6c324de6d3c66c64bc394813\",\"urls\":[\"bzzr://cd9260a4ac73931c8fe50ec24e73d814e76582403411813304f155b95e97d1e8\"]},\"project:/contracts/EnumerableMap.sol\":{\"keccak256\":\"0x74fd7595fc911ada4066dec427c782fac28d8c461414befd63e2a22cedb32dd2\",\"urls\":[\"bzzr://3e1e062ee965444361d8edbafee5341ed886bc8d6c26003e5fb1c5459fde403a\"]},\"project:/contracts/HitchensUnorderedKeySet.sol\":{\"keccak256\":\"0x1d89d65d6bcd10583a78907243251c589f6fc00ee3ca8446e9ff68f3f16f3036\",\"urls\":[\"bzzr://5c0c4e6a568c852c2e38bdbe0ac8efbdff17277547fc16d37b210c06c66a1427\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200002e6000600164010000000062000aa26200003482021704565b620001e9565b801515620000c957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f7420626520307830000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b620000de82826401000000006200019b810204565b156200017157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e0000000000000000000000606482015290519081900360840190fd5b60018281018054918201815560009081526020808220830184905592815292909152604090912055565b60018201546000901515620001b357506000620001e3565b6000828152602084905260409020546001840180548492908110620001d457fe5b90600052602060002001541490505b92915050565b611cc280620001f96000396000f3fe60806040526004361061007c577c010000000000000000000000000000000000000000000000000000000060003504632defc54e811461008157806334142746146100a85780636f14487a146101b057806399e3afe81461022a578063a02e5110146102e9578063df3e140614610315578063fcc910601461032a575b600080fd5b34801561008d57600080fd5b506100966103dd565b60408051918252519081900360200190f35b3480156100b457600080fd5b506100d2600480360360208110156100cb57600080fd5b5035610529565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561011a578181015183820152602001610102565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015610159578181015183820152602001610141565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610198578181015183820152602001610180565b50505050905001965050505050505060405180910390f35b3480156101bc57600080fd5b506101da600480360360208110156101d357600080fd5b50356106b0565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102165781810151838201526020016101fe565b505050509050019250505060405180910390f35b34801561023657600080fd5b506100966004803603606081101561024d57600080fd5b81359160208101359181019060608101604082013564010000000081111561027457600080fd5b82018360208201111561028657600080fd5b803590602001918460018302840111640100000000831117156102a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610832945050505050565b3480156102f557600080fd5b506103136004803603602081101561030c57600080fd5b5035610868565b005b34801561032157600080fd5b506100966108b5565b34801561033657600080fd5b506100966004803603602081101561034d57600080fd5b81019060208101813564010000000081111561036857600080fd5b82018360208201111561037a57600080fd5b8035906020019184600183028401116401000000008311171561039c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a47945050505050565b60006103e96000610a9b565b60010190506103ff60008263ffffffff610aa216565b6002602052600081815260408120600080516020611c77833981519152915b61042a83600301610a9b565b811015610523576000610446600385018363ffffffff610bce16565b60008181526005860160209081526040808320805484526002890190925280832060018301548452922060048084015490820154949550919390911080159061051257835461049c90889063ffffffff610bf516565b15156104b55783546104b590889063ffffffff610c3f16565b60018401546104cb90889063ffffffff610bf516565b15156104e75760018401546104e790889063ffffffff610c3f16565b83546001850154604080516020810190915260008152610510928a92909163ffffffff610cb816565b505b50506001909301925061041e915050565b50505090565b60008181526002602052604081206060918291829161054782610a9b565b9050600061055783600301610a9b565b905081604051908082528060200260200182016040528015610583578160200160208202803883390190505b509550806040519080825280602002602001820160405280156105b0578160200160208202803883390190505b509450806040519080825280602002602001820160405280156105dd578160200160208202803883390190505b50935060005b6105ec84610a9b565b81101561062357610603848263ffffffff610bce16565b875188908390811061061157fe5b602090810290910101526001016105e3565b5060005b61063384600301610a9b565b8110156106a557600061064f600386018363ffffffff610bce16565b6000818152600587016020526040902080548951929350909189908590811061067457fe5b602090810290910101526001810154875188908590811061069157fe5b602090810290910101525050600101610627565b505050509193909250565b6000818152600260209081526040808320600654845260078352818420600454855260059093529083206060939192915b6106ea84610a9b565b81101561071c57610713610704858363ffffffff610bce16565b8390600363ffffffff610e1d16565b506001016106e1565b5060048054600180820190925560068054928301905561073c9187610e3f565b61074582610a9b565b60405190808252806020026020018201604052801561076e578160200160208202803883390190505b50935060005b61077d83610a9b565b8110156107b457610794838263ffffffff610bce16565b85518690839081106107a257fe5b60209081029091010152600101610774565b507f300a3be7ae677594a5a86baad0f39c1cab903a393d44e74e6c26578339f21e94846040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108175781810151838201526020016107ff565b505050509050019250505060405180910390a1505050919050565b600160009081526002602052600080516020611c7783398151915261085f8186868663ffffffff610cb816565b95945050505050565b60016000526002602052600080516020611c77833981519152610891818363ffffffff6116ab16565b3360009081526003602052604090206108b0818463ffffffff610aa216565b505050565b60006108c16000610a9b565b60010190506108d760008263ffffffff610aa216565b6002602052600081815260408120600080516020611c77833981519152915b61090283600301610a9b565b81101561052357600061091e600385018363ffffffff610bce16565b60008181526005860160208181526040808420805480865260028b0190935281852060018201548087529286206004808301549082015498995092979196909592909111159390928391610972919061172e565b81526020019081526020016000209050600080826000015411801561099b575060008260010154115b905082806109a65750805b15610a345785546109be908a9063ffffffff610bf516565b15156109d75785546109d7908a9063ffffffff610c3f16565b60018601546109ed908a9063ffffffff610bf516565b1515610a09576001860154610a09908a9063ffffffff610c3f16565b85546001870154604080516020810190915260008152610a32928c92909163ffffffff610cb816565b505b5050600190950194506108f69350505050565b600160009081526002602052600080516020611c77833981519152610a72818463ffffffff61173d16565b336000908152600360205260409020909250610a94818463ffffffff610aa216565b5050919050565b6001015490565b801515610b1f576040805160e560020a62461bcd02815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f7420626520307830000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610b298282610bf5565b15610ba4576040805160e560020a62461bcd02815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e0000000000000000000000606482015290519081900360840190fd5b60018281018054918201815560009081526020808220830184905592815292909152604090912055565b60008260010182815481101515610be157fe5b906000526020600020015490505b92915050565b60018201546000901515610c0b57506000610bef565b6000828152602084905260409020546001840180548492908110610c2b57fe5b906000526020600020015414905092915050565b610c4f828263ffffffff610bf516565b15610ca4576040805160e560020a62461bcd02815260206004820152601460248201527f4e6f646520616c7265616479206578697374732e000000000000000000000000604482015290519081900360640190fd5b610cb4828263ffffffff610aa216565b5050565b6000610cca858563ffffffff610bf516565b1515610d20576040805160e560020a62461bcd02815260206004820152601160248201527f556e6b6e6f776e20736f7572636549642e000000000000000000000000000000604482015290519081900360640190fd5b610d30858463ffffffff610bf516565b1515610d86576040805160e560020a62461bcd02815260206004820152601160248201527f556e6b6e6f776e2074617267657449642e000000000000000000000000000000604482015290519081900360640190fd5b610d90848461172e565b9050610da5600386018263ffffffff610aa216565b6000818152600586016020908152604090912083519091610dcd916002840191860190611bdb565b5084815560018101849055600085815260028088016020526040808320878452922090610e029083018563ffffffff610aa216565b610e12818563ffffffff610aa216565b505050949350505050565b6000610e358484846004811115610e3057fe5b611796565b90505b9392505050565b600081815260026020908152604080832086845260059283905292819020815183815260c0810190925291606091908160200160208202803883390190505090505b806000815181101515610e9057fe5b9060200190602002015115156115ff5760606000610ead88611830565b909250905060008111610edf576001836000815181101515610ecb57fe5b9115156020928302909101909101526115f8565b8251600090819085906001908110610ef357fe5b91151560209283029091019091015260005b8281108015610f2a5750846001815181101515610f1e57fe5b90602001906020020151155b15611096578381815181101515610f3d57fe5b602090810290910181015160008181526002808b019093526040812088519295509290918891908110610f6c57fe5b91151560209283029091019091015260005b610f8782610a9b565b81108015610fab5750866002815181101515610f9f57fe5b90602001906020020151155b1561105457600060058a0181610fc7858563ffffffff610bce16565b81526020810191909152604001600020905060018154610fee908b9063ffffffff6118e216565b6004811115610ff957fe5b14158015611025575060048154611017908b9063ffffffff6118e216565b600481111561102257fe5b14155b1561104b57600188600281518110151561103b57fe5b9115156020928302909101909101525b50600101610f7e565b5085600281518110151561106457fe5b906020019060200201511586600181518110151561107e57fe5b91151560209283029091019091015250600101610f05565b508360018151811015156110a657fe5b9060200190602002015115156111a1576000805b8381101561119e57600088600201600087848151811015156110d857fe5b6020908102909101810151825281019190915260400160009081209150805b61110383600201610a9b565b81101561116d57600060058c0181611124600287018563ffffffff610bce16565b81526020810191909152604001600020905060018082015461114d908d9063ffffffff6118e216565b600481111561115857fe5b14611164576001909201915b506001016110f7565b508381111561119457809350868381518110151561118757fe5b9060200190602002015194505b50506001016110ba565b50505b60048054600181019091556000818152600560205260408120905b6111c5886118f9565b811015611200576000806111df8a8463ffffffff61190416565b90925090506111f584838363ffffffff610e1d16565b5050506001016111bc565b506112138184600063ffffffff610e1d16565b5060008381526002890160205260408120905b61123282600201610a9b565b81101561128757600060058b0181611253600286018563ffffffff610bce16565b8152602081019190915260400160002060018181015491925061127d91869163ffffffff610e1d16565b5050600101611226565b50600087600381518110151561129957fe5b91151560209283029091019091015260005b6112b482610a9b565b811080156112d857508760038151811015156112cc57fe5b90602001906020020151155b1561148857600060058b01816112f4858563ffffffff610bce16565b8152602081019190915260400160002090506002815461131b90869063ffffffff6118e216565b600481111561132657fe5b148061134f57506003815461134290869063ffffffff6118e216565b600481111561134d57fe5b145b1561147f578054611369908590600463ffffffff610e1d16565b508054600090815260028c016020526040902089516001908b90600390811061138e57fe5b91151560209283029091019091015260005b6113a982610a9b565b811080156113cc57508a60038151811015156113c157fe5b906020019060200201515b1561144a57600060058e01816113e8858563ffffffff610bce16565b8152602081019190915260400160002090506003815461140f90899063ffffffff6118e216565b600481111561141a57fe5b14156114415760008c600381518110151561143157fe5b9115156020928302909101909101525b506001016113a0565b5089600381518110151561145a57fe5b906020019060200201511561147d5761147b8b88600263ffffffff610e1d16565b505b505b506001016112ab565b5086600381518110151561149857fe5b9060200190602002015115156115f3576114b3838c8c610e3f565b60008760048151811015156114c457fe5b91151560209283029091019091015260005b6114df82610a9b565b8110801561150357508760048151811015156114f757fe5b90602001906020020151155b156115bc57600060058b018161151f858563ffffffff610bce16565b81526020810191909152604001600020905060028154611546908c9063ffffffff6118e216565b600481111561155157fe5b148061157a57506003815461156d908c9063ffffffff6118e216565b600481111561157857fe5b145b156115b3576115918a87600463ffffffff610e1d16565b5060018960048151811015156115a357fe5b9115156020928302909101909101525b506001016114d6565b508660048151811015156115cc57fe5b9060200190602002015115156115f3576000838152600560205260409020929b509196508a915b505050505b5050610e81565b600061160a87611932565b915050600081116116a25760606000611622896119dd565b60008a81526007602052604081209294509092505b8281101561169d57611667848281518110151561165057fe5b60209081029091010151839063ffffffff610bf516565b151561169557611695848281518110151561167e57fe5b60209081029091010151839063ffffffff610aa216565b600101611637565b505050505b50505050505050565b6116bb828263ffffffff610bf516565b1515611711576040805160e560020a62461bcd02815260206004820152600f60248201527f556e6b6e6f776e206e6f646549642e0000000000000000000000000000000000604482015290519081900360640190fd5b600090815260029091016020526040902060040180546001019055565b60029082016001810102040190565b600061174883610a9b565b600101905061175d838263ffffffff610aa216565b6000818152600284016020908152604090912083519091611785916005840191860190611bdb565b506004018054600101905592915050565b60008281526001840160205260408120548015156117fd575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610e38565b845483908690600019840190811061181157fe5b9060005260206000209060020201600101819055506000915050610e38565b60008181526005602052604081206060919061184b816118f9565b604051908082528060200260200182016040528015611874578160200160208202803883390190505b50925060009150815b83518110156118db57600080611899848463ffffffff61190416565b909250905060038160048111156118ac57fe5b14156118d15785516001860195839188919081106118c657fe5b602090810290910101525b505060010161187d565b5050915091565b60006118ee8383611a88565b6004811115610e3857fe5b6000610bef82611b1d565b60008080806119138686611b21565b90925090508181600481111561192557fe5b9350935050509250929050565b60008181526005602052604081206060919061194d816118f9565b604051908082528060200260200182016040528015611976578160200160208202803883390190505b50925060009150815b83518110156118db5760008061199b848463ffffffff61190416565b909250905060048160048111156119ae57fe5b14156119d35785516001860195839188919081106119c857fe5b602090810290910101525b505060010161197f565b6000818152600560205260408120606091906119f8816118f9565b604051908082528060200260200182016040528015611a21578160200160208202803883390190505b50925060009150815b83518110156118db57600080611a46848463ffffffff61190416565b90925090506000816004811115611a5957fe5b1415611a7e578551600186019583918891908110611a7357fe5b602090810290910101525b5050600101611a2a565b6000818152600183016020526040812054801515611af0576040805160e560020a62461bcd02815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604482015290519081900360640190fd5b835484906000198301908110611b0257fe5b90600052602060002090600202016001015491505092915050565b5490565b815460009081908310611ba4576040805160e560020a62461bcd02815260206004820152602260248201527f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60448201527f6473000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b8354600090859085908110611bb557fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c1c57805160ff1916838001178555611c49565b82800160010185558215611c49579182015b82811115611c49578251825591602001919060010190611c2e565b50611c55929150611c59565b5090565b611c7391905b80821115611c555760008155600101611c5f565b9056fee90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0a165627a7a72305820d8cb36808246cc277d4aedc91de8a6c32dc85842367912a4cd8727db085df8ac0029",
  "deployedBytecode": "0x60806040526004361061007c577c010000000000000000000000000000000000000000000000000000000060003504632defc54e811461008157806334142746146100a85780636f14487a146101b057806399e3afe81461022a578063a02e5110146102e9578063df3e140614610315578063fcc910601461032a575b600080fd5b34801561008d57600080fd5b506100966103dd565b60408051918252519081900360200190f35b3480156100b457600080fd5b506100d2600480360360208110156100cb57600080fd5b5035610529565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561011a578181015183820152602001610102565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015610159578181015183820152602001610141565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610198578181015183820152602001610180565b50505050905001965050505050505060405180910390f35b3480156101bc57600080fd5b506101da600480360360208110156101d357600080fd5b50356106b0565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102165781810151838201526020016101fe565b505050509050019250505060405180910390f35b34801561023657600080fd5b506100966004803603606081101561024d57600080fd5b81359160208101359181019060608101604082013564010000000081111561027457600080fd5b82018360208201111561028657600080fd5b803590602001918460018302840111640100000000831117156102a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610832945050505050565b3480156102f557600080fd5b506103136004803603602081101561030c57600080fd5b5035610868565b005b34801561032157600080fd5b506100966108b5565b34801561033657600080fd5b506100966004803603602081101561034d57600080fd5b81019060208101813564010000000081111561036857600080fd5b82018360208201111561037a57600080fd5b8035906020019184600183028401116401000000008311171561039c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a47945050505050565b60006103e96000610a9b565b60010190506103ff60008263ffffffff610aa216565b6002602052600081815260408120600080516020611c77833981519152915b61042a83600301610a9b565b811015610523576000610446600385018363ffffffff610bce16565b60008181526005860160209081526040808320805484526002890190925280832060018301548452922060048084015490820154949550919390911080159061051257835461049c90889063ffffffff610bf516565b15156104b55783546104b590889063ffffffff610c3f16565b60018401546104cb90889063ffffffff610bf516565b15156104e75760018401546104e790889063ffffffff610c3f16565b83546001850154604080516020810190915260008152610510928a92909163ffffffff610cb816565b505b50506001909301925061041e915050565b50505090565b60008181526002602052604081206060918291829161054782610a9b565b9050600061055783600301610a9b565b905081604051908082528060200260200182016040528015610583578160200160208202803883390190505b509550806040519080825280602002602001820160405280156105b0578160200160208202803883390190505b509450806040519080825280602002602001820160405280156105dd578160200160208202803883390190505b50935060005b6105ec84610a9b565b81101561062357610603848263ffffffff610bce16565b875188908390811061061157fe5b602090810290910101526001016105e3565b5060005b61063384600301610a9b565b8110156106a557600061064f600386018363ffffffff610bce16565b6000818152600587016020526040902080548951929350909189908590811061067457fe5b602090810290910101526001810154875188908590811061069157fe5b602090810290910101525050600101610627565b505050509193909250565b6000818152600260209081526040808320600654845260078352818420600454855260059093529083206060939192915b6106ea84610a9b565b81101561071c57610713610704858363ffffffff610bce16565b8390600363ffffffff610e1d16565b506001016106e1565b5060048054600180820190925560068054928301905561073c9187610e3f565b61074582610a9b565b60405190808252806020026020018201604052801561076e578160200160208202803883390190505b50935060005b61077d83610a9b565b8110156107b457610794838263ffffffff610bce16565b85518690839081106107a257fe5b60209081029091010152600101610774565b507f300a3be7ae677594a5a86baad0f39c1cab903a393d44e74e6c26578339f21e94846040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108175781810151838201526020016107ff565b505050509050019250505060405180910390a1505050919050565b600160009081526002602052600080516020611c7783398151915261085f8186868663ffffffff610cb816565b95945050505050565b60016000526002602052600080516020611c77833981519152610891818363ffffffff6116ab16565b3360009081526003602052604090206108b0818463ffffffff610aa216565b505050565b60006108c16000610a9b565b60010190506108d760008263ffffffff610aa216565b6002602052600081815260408120600080516020611c77833981519152915b61090283600301610a9b565b81101561052357600061091e600385018363ffffffff610bce16565b60008181526005860160208181526040808420805480865260028b0190935281852060018201548087529286206004808301549082015498995092979196909592909111159390928391610972919061172e565b81526020019081526020016000209050600080826000015411801561099b575060008260010154115b905082806109a65750805b15610a345785546109be908a9063ffffffff610bf516565b15156109d75785546109d7908a9063ffffffff610c3f16565b60018601546109ed908a9063ffffffff610bf516565b1515610a09576001860154610a09908a9063ffffffff610c3f16565b85546001870154604080516020810190915260008152610a32928c92909163ffffffff610cb816565b505b5050600190950194506108f69350505050565b600160009081526002602052600080516020611c77833981519152610a72818463ffffffff61173d16565b336000908152600360205260409020909250610a94818463ffffffff610aa216565b5050919050565b6001015490565b801515610b1f576040805160e560020a62461bcd02815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f7420626520307830000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610b298282610bf5565b15610ba4576040805160e560020a62461bcd02815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e0000000000000000000000606482015290519081900360840190fd5b60018281018054918201815560009081526020808220830184905592815292909152604090912055565b60008260010182815481101515610be157fe5b906000526020600020015490505b92915050565b60018201546000901515610c0b57506000610bef565b6000828152602084905260409020546001840180548492908110610c2b57fe5b906000526020600020015414905092915050565b610c4f828263ffffffff610bf516565b15610ca4576040805160e560020a62461bcd02815260206004820152601460248201527f4e6f646520616c7265616479206578697374732e000000000000000000000000604482015290519081900360640190fd5b610cb4828263ffffffff610aa216565b5050565b6000610cca858563ffffffff610bf516565b1515610d20576040805160e560020a62461bcd02815260206004820152601160248201527f556e6b6e6f776e20736f7572636549642e000000000000000000000000000000604482015290519081900360640190fd5b610d30858463ffffffff610bf516565b1515610d86576040805160e560020a62461bcd02815260206004820152601160248201527f556e6b6e6f776e2074617267657449642e000000000000000000000000000000604482015290519081900360640190fd5b610d90848461172e565b9050610da5600386018263ffffffff610aa216565b6000818152600586016020908152604090912083519091610dcd916002840191860190611bdb565b5084815560018101849055600085815260028088016020526040808320878452922090610e029083018563ffffffff610aa216565b610e12818563ffffffff610aa216565b505050949350505050565b6000610e358484846004811115610e3057fe5b611796565b90505b9392505050565b600081815260026020908152604080832086845260059283905292819020815183815260c0810190925291606091908160200160208202803883390190505090505b806000815181101515610e9057fe5b9060200190602002015115156115ff5760606000610ead88611830565b909250905060008111610edf576001836000815181101515610ecb57fe5b9115156020928302909101909101526115f8565b8251600090819085906001908110610ef357fe5b91151560209283029091019091015260005b8281108015610f2a5750846001815181101515610f1e57fe5b90602001906020020151155b15611096578381815181101515610f3d57fe5b602090810290910181015160008181526002808b019093526040812088519295509290918891908110610f6c57fe5b91151560209283029091019091015260005b610f8782610a9b565b81108015610fab5750866002815181101515610f9f57fe5b90602001906020020151155b1561105457600060058a0181610fc7858563ffffffff610bce16565b81526020810191909152604001600020905060018154610fee908b9063ffffffff6118e216565b6004811115610ff957fe5b14158015611025575060048154611017908b9063ffffffff6118e216565b600481111561102257fe5b14155b1561104b57600188600281518110151561103b57fe5b9115156020928302909101909101525b50600101610f7e565b5085600281518110151561106457fe5b906020019060200201511586600181518110151561107e57fe5b91151560209283029091019091015250600101610f05565b508360018151811015156110a657fe5b9060200190602002015115156111a1576000805b8381101561119e57600088600201600087848151811015156110d857fe5b6020908102909101810151825281019190915260400160009081209150805b61110383600201610a9b565b81101561116d57600060058c0181611124600287018563ffffffff610bce16565b81526020810191909152604001600020905060018082015461114d908d9063ffffffff6118e216565b600481111561115857fe5b14611164576001909201915b506001016110f7565b508381111561119457809350868381518110151561118757fe5b9060200190602002015194505b50506001016110ba565b50505b60048054600181019091556000818152600560205260408120905b6111c5886118f9565b811015611200576000806111df8a8463ffffffff61190416565b90925090506111f584838363ffffffff610e1d16565b5050506001016111bc565b506112138184600063ffffffff610e1d16565b5060008381526002890160205260408120905b61123282600201610a9b565b81101561128757600060058b0181611253600286018563ffffffff610bce16565b8152602081019190915260400160002060018181015491925061127d91869163ffffffff610e1d16565b5050600101611226565b50600087600381518110151561129957fe5b91151560209283029091019091015260005b6112b482610a9b565b811080156112d857508760038151811015156112cc57fe5b90602001906020020151155b1561148857600060058b01816112f4858563ffffffff610bce16565b8152602081019190915260400160002090506002815461131b90869063ffffffff6118e216565b600481111561132657fe5b148061134f57506003815461134290869063ffffffff6118e216565b600481111561134d57fe5b145b1561147f578054611369908590600463ffffffff610e1d16565b508054600090815260028c016020526040902089516001908b90600390811061138e57fe5b91151560209283029091019091015260005b6113a982610a9b565b811080156113cc57508a60038151811015156113c157fe5b906020019060200201515b1561144a57600060058e01816113e8858563ffffffff610bce16565b8152602081019190915260400160002090506003815461140f90899063ffffffff6118e216565b600481111561141a57fe5b14156114415760008c600381518110151561143157fe5b9115156020928302909101909101525b506001016113a0565b5089600381518110151561145a57fe5b906020019060200201511561147d5761147b8b88600263ffffffff610e1d16565b505b505b506001016112ab565b5086600381518110151561149857fe5b9060200190602002015115156115f3576114b3838c8c610e3f565b60008760048151811015156114c457fe5b91151560209283029091019091015260005b6114df82610a9b565b8110801561150357508760048151811015156114f757fe5b90602001906020020151155b156115bc57600060058b018161151f858563ffffffff610bce16565b81526020810191909152604001600020905060028154611546908c9063ffffffff6118e216565b600481111561155157fe5b148061157a57506003815461156d908c9063ffffffff6118e216565b600481111561157857fe5b145b156115b3576115918a87600463ffffffff610e1d16565b5060018960048151811015156115a357fe5b9115156020928302909101909101525b506001016114d6565b508660048151811015156115cc57fe5b9060200190602002015115156115f3576000838152600560205260409020929b509196508a915b505050505b5050610e81565b600061160a87611932565b915050600081116116a25760606000611622896119dd565b60008a81526007602052604081209294509092505b8281101561169d57611667848281518110151561165057fe5b60209081029091010151839063ffffffff610bf516565b151561169557611695848281518110151561167e57fe5b60209081029091010151839063ffffffff610aa216565b600101611637565b505050505b50505050505050565b6116bb828263ffffffff610bf516565b1515611711576040805160e560020a62461bcd02815260206004820152600f60248201527f556e6b6e6f776e206e6f646549642e0000000000000000000000000000000000604482015290519081900360640190fd5b600090815260029091016020526040902060040180546001019055565b60029082016001810102040190565b600061174883610a9b565b600101905061175d838263ffffffff610aa216565b6000818152600284016020908152604090912083519091611785916005840191860190611bdb565b506004018054600101905592915050565b60008281526001840160205260408120548015156117fd575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610e38565b845483908690600019840190811061181157fe5b9060005260206000209060020201600101819055506000915050610e38565b60008181526005602052604081206060919061184b816118f9565b604051908082528060200260200182016040528015611874578160200160208202803883390190505b50925060009150815b83518110156118db57600080611899848463ffffffff61190416565b909250905060038160048111156118ac57fe5b14156118d15785516001860195839188919081106118c657fe5b602090810290910101525b505060010161187d565b5050915091565b60006118ee8383611a88565b6004811115610e3857fe5b6000610bef82611b1d565b60008080806119138686611b21565b90925090508181600481111561192557fe5b9350935050509250929050565b60008181526005602052604081206060919061194d816118f9565b604051908082528060200260200182016040528015611976578160200160208202803883390190505b50925060009150815b83518110156118db5760008061199b848463ffffffff61190416565b909250905060048160048111156119ae57fe5b14156119d35785516001860195839188919081106119c857fe5b602090810290910101525b505060010161197f565b6000818152600560205260408120606091906119f8816118f9565b604051908082528060200260200182016040528015611a21578160200160208202803883390190505b50925060009150815b83518110156118db57600080611a46848463ffffffff61190416565b90925090506000816004811115611a5957fe5b1415611a7e578551600186019583918891908110611a7357fe5b602090810290910101525b5050600101611a2a565b6000818152600183016020526040812054801515611af0576040805160e560020a62461bcd02815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604482015290519081900360640190fd5b835484906000198301908110611b0257fe5b90600052602060002090600202016001015491505092915050565b5490565b815460009081908310611ba4576040805160e560020a62461bcd02815260206004820152602260248201527f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60448201527f6473000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b8354600090859085908110611bb557fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c1c57805160ff1916838001178555611c49565b82800160010185558215611c49579182015b82811115611c49578251825591602001919060010190611c2e565b50611c55929150611c59565b5090565b611c7391905b80821115611c555760008155600101611c5f565b9056fee90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0a165627a7a72305820d8cb36808246cc277d4aedc91de8a6c32dc85842367912a4cd8727db085df8ac0029",
  "sourceMap": "126:15462:0:-;;;740:77;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;772:37:0;:9;805:1;772:16;;;;;;:37;:::i;:::-;126:15462;;1495:331:5;1570:10;;;1562:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1659:17;1666:4;1672:3;1659:6;;;;:17;:::i;:::-;1658:18;1636:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1817:1;1792:12;;;27:10:-1;;23:18;;;45:23;;-1:-1;1792:22:5;;;;;;;;;;;;1768:21;;;;;;;;;;;:50;1495:331::o;2445:229::-;2568:12;;;:19;2542:4;;2568:24;2564:42;;;-1:-1:-1;2601:5:5;2594:12;;2564:42;2637:16;:21;;;;;;;;;;;2624:12;;;:35;;2663:3;;2637:21;2624:35;;;;;;;;;;;;;;:42;2617:49;;2445:229;;;;;:::o;126:15462:0:-;;;;;;;",
  "deployedSourceMap": "126:15462:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1803:1287;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1803:1287:0;;;:::i;:::-;;;;;;;;;;;;;;;;4666:986;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4666:986:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4666:986:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4666:986:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4666:986:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4666:986:0;;;;;;;;;;;;;;;;;;;;;5660:788;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5660:788:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5660:788:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5660:788:0;;;;;;;;;;;;;;;;;1517:278;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1517:278:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1517:278:0;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1517:278:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1517:278:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1517:278:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1517:278:0;;-1:-1:-1;1517:278:0;;-1:-1:-1;;;;;1517:278:0:i;1202:307::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1202:307:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1202:307:0;;:::i;:::-;;3098:1560;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3098:1560:0;;;:::i;825:369::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;825:369:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;825:369:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;825:369:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;825:369:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;825:369:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;825:369:0;;-1:-1:-1;825:369:0;;-1:-1:-1;;;;;825:369:0:i;1803:1287::-;1850:15;1888:17;:9;:15;:17::i;:::-;1908:1;1888:21;;-1:-1:-1;1920:34:0;:9;1888:21;1920:34;:16;:34;:::i;:::-;2001:6;:9;;1967:31;2054:15;;;2001:9;2054:15;;-1:-1:-1;;;;;;;;;;;2001:9:0;2082:1001;2106:20;:3;:12;;:18;:20::i;:::-;2102:1;:24;2082:1001;;;2148:14;2173:26;:12;;;2197:1;2173:26;:23;:26;:::i;:::-;2215:31;2249:17;;;:9;;;:17;;;;;;;;2324:11;;2314:22;;:9;;;:22;;;;;;2165:35;2392:11;;;2382:22;;;;2455:7;;;;;2445;;;;2165:35;;-1:-1:-1;2249:17:0;;2382:22;;-1:-1:-1;2443:20:0;;;2615:457;;2765:11;;2738:40;;:2;;:40;:18;:40;:::i;:::-;2737:41;2733:122;;;2823:11;;2803:32;;:2;;:32;:19;:32;:::i;:::-;2905:11;;;;2878:40;;:2;;:40;:18;:40;:::i;:::-;2877:41;2873:122;;;2963:11;;;;2943:32;;:2;;:32;:19;:32;:::i;:::-;3027:11;;3040;;;;3013:43;;;;;;;;;3027:11;3013:43;;;;:2;;3027:11;;3013:43;:13;:43;:::i;:::-;;2615:457;-1:-1:-1;;2128:3:0;;;;;-1:-1:-1;2082:1001:0;;-1:-1:-1;;2082:1001:0;;;1803:1287;;;:::o;4666:986::-;4899:33;4935:15;;;:6;:15;;;;;4763:22;;;;;;4982;4935:15;4982:20;:22::i;:::-;4961:43;;5015:18;5036:22;:5;:14;;:20;:22::i;:::-;5015:43;;5093:10;5079:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5079:25:0;;5071:33;;5143:10;5129:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5129:25:0;;5115:39;;5193:10;5179:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5179:25:0;-1:-1:-1;5165:39:0;-1:-1:-1;5222:9:0;5217:128;5241:22;:5;:20;:22::i;:::-;5237:1;:26;5217:128;;;5304:28;:5;5330:1;5304:28;:25;:28;:::i;:::-;5285:8;;:5;;5291:1;;5285:8;;;;;;;;;;;;;;:48;5265:3;;5217:128;;;-1:-1:-1;5362:9:0;5357:288;5381:22;:5;:14;;:20;:22::i;:::-;5377:1;:26;5357:288;;;5425:14;5450:28;:14;;;5476:1;5450:28;:25;:28;:::i;:::-;5494:31;5528:19;;;:11;;;:19;;;;;5579:11;;5562:14;;5442:37;;-1:-1:-1;5528:19:0;;5562:11;;5574:1;;5562:14;;;;;;;;;;;;;;:28;5622:11;;;;5605:14;;:11;;5617:1;;5605:14;;;;;;;;;;;;;;:28;-1:-1:-1;;5405:3:0;;5357:288;;;;4666:986;;;;;;;;:::o;5660:788::-;5790:33;5826:15;;;:6;:15;;;;;;;;5926:17;;5897:57;;:14;:57;;;;;5998:7;;5993:13;;:4;:13;;;;;;5751:21;;5826:15;;5897:57;6017:144;6041:22;:5;:20;:22::i;:::-;6037:1;:26;6017:144;;;6085:64;6101:28;:5;6127:1;6101:28;:25;:28;:::i;:::-;6085:3;;6132:16;6085:64;:7;:64;:::i;:::-;-1:-1:-1;6065:3:0;;6017:144;;;-1:-1:-1;6196:7:0;:9;;;;;;;;;6207:17;:19;;;;;;;6171:65;;6228:7;6171:24;:65::i;:::-;6270:11;:3;:9;:11::i;:::-;6256:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6256:26:0;-1:-1:-1;6249:33:0;-1:-1:-1;6298:9:0;6293:105;6317:11;:3;:9;:11::i;:::-;6313:1;:15;6293:105;;;6368:17;:3;6383:1;6368:17;:14;:17;:::i;:::-;6350:7;;:4;;6355:1;;6350:7;;;;;;;;;;;;;;:36;6330:3;;6293:105;;;;6415:25;6435:4;6415:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6415:25:0;;;;;;;;;;;;;;;;;5660:788;;;;;;:::o;1517:278::-;1719:1;1649:14;1712:9;;;:6;:9;;-1:-1:-1;;;;;;;;;;;1741:46:0;1712:9;1758:8;1768;1778;1741:46;:16;:46;:::i;:::-;1732:55;1517:278;-1:-1:-1;;;;;1517:278:0:o;1202:307::-;1303:1;1260:33;1296:9;:6;:9;;-1:-1:-1;;;;;;;;;;;1316:27:0;1296:9;1337:5;1316:27;:20;:27;:::i;:::-;1437:10;1356:48;1407:51;;;:15;:51;;;;;1469:32;1407:51;1494:5;1469:32;:16;:32;:::i;:::-;1202:307;;;:::o;3098:1560::-;3145:15;3183:17;:9;:15;:17::i;:::-;3203:1;3183:21;;-1:-1:-1;3215:34:0;:9;3183:21;3215:34;:16;:34;:::i;:::-;3296:6;:9;;3262:31;3349:15;;;3296:9;3349:15;;-1:-1:-1;;;;;;;;;;;3296:9:0;3377:1274;3401:20;:3;:12;;:18;:20::i;:::-;3397:1;:24;3377:1274;;;3443:14;3468:26;:12;;;3492:1;3468:26;:23;:26;:::i;:::-;3510:31;3544:17;;;:9;;;:17;;;;;;;;3619:11;;3609:22;;;:9;;;:22;;;;;;3460:35;3687:11;;;3677:22;;;;;;3750:7;;;;;3740;;;;3460:35;;-1:-1:-1;3544:17:0;;3609:22;;3677;;3740:17;;;;3738:20;;3510:31;;;;3844:53;;3687:11;3844:27;:53::i;:::-;3816:96;;;;;;;;;;;3775:137;;3927:12;3963:1;3942:11;:18;;;:22;:48;;;;;3989:1;3968:11;:18;;;:22;3942:48;3927:63;;4146:16;:27;;;;4166:7;4146:27;4142:498;;;4333:11;;4306:40;;:2;;:40;:18;:40;:::i;:::-;4305:41;4301:122;;;4391:11;;4371:32;;:2;;:32;:19;:32;:::i;:::-;4473:11;;;;4446:40;;:2;;:40;:18;:40;:::i;:::-;4445:41;4441:122;;;4531:11;;;;4511:32;;:2;;:32;:19;:32;:::i;:::-;4595:11;;4608;;;;4581:43;;;;;;;;;4595:11;4581:43;;;;:2;;4595:11;;4581:43;:13;:43;:::i;:::-;;4142:498;-1:-1:-1;;3423:3:0;;;;;-1:-1:-1;3377:1274:0;;-1:-1:-1;;;;3377:1274:0;825:369;981:1;907:13;974:9;;;:6;:9;;-1:-1:-1;;;;;;;;;;;1002:26:0;974:9;1019:8;1002:26;:16;:26;:::i;:::-;1122:10;1041:48;1092:51;;;:15;:51;;;;;994:34;;-1:-1:-1;1154:32:0;1092:51;994:34;1154:32;:16;:32;:::i;:::-;825:369;;;;;:::o;2325:112:5:-;2409:12;;:19;;2325:112::o;1495:331::-;1570:10;;;1562:63;;;;;-1:-1:-1;;;;;1562:63:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1659:17;1666:4;1672:3;1659:6;:17::i;:::-;1658:18;1636:121;;;;;-1:-1:-1;;;;;1636:121:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1817:1;1792:12;;;27:10:-1;;23:18;;;45:23;;-1:-1;1792:22:5;;;;;;;;;;;;1768:21;;;;;;;;;;;:50;1495:331::o;2682:162::-;2785:7;2817:4;:12;;2830:5;2817:19;;;;;;;;;;;;;;;;;;2810:26;;2682:162;;;;;:::o;2445:229::-;2568:12;;;:19;2542:4;;2568:24;2564:42;;;-1:-1:-1;2601:5:5;2594:12;;2564:42;2637:16;:21;;;;;;;;;;;2624:12;;;:35;;2663:3;;2637:21;2624:35;;;;;;;;;;;;;;:42;2617:49;;2445:229;;;;:::o;1271:200:3:-;1359:34;:1;1385:6;1359:34;:17;:34;:::i;:::-;1358:35;1350:68;;;;;-1:-1:-1;;;;;1350:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1429:34;:1;1455:6;1429:34;:17;:34;:::i;:::-;1271:200;;:::o;1703:768::-;1861:14;1896:36;:1;1922:8;1896:36;:17;:36;:::i;:::-;1888:66;;;;;;;-1:-1:-1;;;;;1888:66:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:36;:1;1999:8;1973:36;:17;:36;:::i;:::-;1965:66;;;;;;;-1:-1:-1;;;;;1965:66:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;2053:33;2067:8;2077;2053:13;:33::i;:::-;2044:42;-1:-1:-1;2099:34:3;:10;;;2044:42;2099:34;:17;:34;:::i;:::-;2146:17;2166:15;;;:7;;;:15;;;;;;;;2192:24;;2166:15;;2192:24;;:13;;;;:24;;;;:::i;:::-;-1:-1:-1;2227:22:3;;;2260:11;;;:22;;;2227:11;2312:17;;;:7;;;;:17;;;;;;2357;;;;;;2385:34;;:10;;2411:6;2385:34;:17;:34;:::i;:::-;2430:33;:1;2455:6;2430:33;:16;:33;:::i;:::-;1703:768;;;;;;;;;:::o;7478:200:4:-;7591:4;7615:55;7620:3;7640;7662:5;7654:14;;;;;;;;7615:4;:55::i;:::-;7608:62;;7478:200;;;;;;:::o;6456:7534:0:-;6600:33;6636:15;;;:6;:15;;;;;;;;6690:11;;;:4;:11;;;;;;;;6734:13;;;;;;;;;;;6690:11;6712:19;;6734:13;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6734:13:0;6712:35;;6809:6481;6817:5;6823:1;6817:8;;;;;;;;;;;;;;;;;;6816:9;6809:6481;;;6843:23;6868:17;6889:16;6899:5;6889:9;:16::i;:::-;6842:63;;-1:-1:-1;6842:63:0;-1:-1:-1;6937:1:0;6924:14;;6920:6359;;6970:4;6959:5;6965:1;6959:8;;;;;;;;;;:15;;;:8;;;;;;;;;;:15;6920:6359;;;7143:8;;7015:9;;;;7143:5;;7149:1;;7143:8;;;;;;:16;;;:8;;;;;;;;;;:16;7183:9;7178:917;7202:9;7198:1;:13;:26;;;;;7216:5;7222:1;7216:8;;;;;;;;;;;;;;;;;;7215:9;7198:26;7178:917;;;7258:6;7265:1;7258:9;;;;;;;;;;;;;;;;;;;;7290:33;7326:14;;;:11;;;;:14;;;;;;7363:8;;7258:9;;-1:-1:-1;7326:14:0;7290:33;;7363:5;;7326:11;7363:8;;;;;;:16;;;:8;;;;;;;;;;:16;7433:9;7402:631;7477:22;:6;:20;:22::i;:::-;7473:1;:26;:39;;;;;7504:5;7510:1;7504:8;;;;;;;;;;;;;;;;;;7503:9;7473:39;7402:631;;;7593:31;7627:11;;;7593:31;7677:28;:6;7703:1;7677:28;:25;:28;:::i;:::-;7627:106;;;;;;;;;;;-1:-1:-1;7627:106:0;;-1:-1:-1;7669:37:0;7802:11;;7794:20;;:3;;:20;:7;:20;:::i;:::-;:38;;;;;;;;;;:114;;;;-1:-1:-1;7889:19:0;7873:11;;7865:20;;:3;;:20;:7;:20;:::i;:::-;:43;;;;;;;;;;7794:114;7760:250;;;7978:4;7967:5;7973:1;7967:8;;;;;;;;;;:15;;;:8;;;;;;;;;;:15;7760:250;-1:-1:-1;7539:3:0;;7402:631;;;;8067:5;8073:1;8067:8;;;;;;;;;;;;;;;;;;8066:9;8055:5;8061:1;8055:8;;;;;;;;;;:20;;;:8;;;;;;;;;;:20;-1:-1:-1;7226:3:0;;7178:917;;;;8312:5;8318:1;8312:8;;;;;;;;;;;;;;;;;;8311:9;8307:957;;;8345:11;;8383:862;8407:9;8403:1;:13;8383:862;;;8450:33;8486:5;:11;;:78;8528:6;8535:1;8528:9;;;;;;;;;;;;;;;;;;;;8486:78;;;;;;;;;;-1:-1:-1;8486:78:0;;;;-1:-1:-1;;8640:415:0;8664:23;:6;:15;;:21;:23::i;:::-;8660:1;:27;8640:415;;;8725:31;8759:11;;;8725:31;8813:29;:15;;;8840:1;8813:29;:26;:29;:::i;:::-;8759:115;;;;;;;;;;;-1:-1:-1;8759:115:0;;-1:-1:-1;8805:38:0;8917:11;;;;8909:20;;:3;;:20;:7;:20;:::i;:::-;:38;;;;;;;;;8905:123;;8984:12;;;;;8905:123;-1:-1:-1;8689:3:0;;8640:415;;;;9098:3;9085:10;:16;9081:141;;;9140:10;9134:16;;9185:6;9192:1;9185:9;;;;;;;;;;;;;;;;;;9181:13;;9081:141;-1:-1:-1;;8418:3:0;;8383:862;;;;8307:957;;9335:7;:9;;;;;;;;9318:14;9392:12;;;:4;:12;;;;;;9423:178;9447:12;:3;:10;:12::i;:::-;9443:1;:16;9423:178;;;9490:11;;9526:9;:3;9533:1;9526:9;:6;:9;:::i;:::-;9489:46;;-1:-1:-1;9489:46:0;-1:-1:-1;9558:23:0;:4;9489:46;;9558:23;:8;:23;:::i;:::-;-1:-1:-1;;;9461:3:0;;9423:178;;;-1:-1:-1;9658:26:0;:4;9667:1;9670:13;9658:26;:8;:26;:::i;:::-;-1:-1:-1;9765:33:0;9801:14;;;:11;;;:14;;;;;;9834:290;9858:23;:6;:15;;:21;:23::i;:::-;9854:1;:27;9834:290;;;9911:31;9945:11;;;9911:31;9991:29;:15;;;10018:1;9991:29;:26;:29;:::i;:::-;9945:99;;;;;;;;;;;-1:-1:-1;9945:99:0;9983:38;10076:11;;;;9945:99;;-1:-1:-1;10067:37:0;;:4;;:37;:8;:37;:::i;:::-;-1:-1:-1;;9883:3:0;;9834:290;;;;10197:5;10186;10192:1;10186:8;;;;;;;;;;:16;;;:8;;;;;;;;;;:16;10248:9;10221:1714;10288:22;:6;:20;:22::i;:::-;10284:1;:26;:39;;;;;10315:5;10321:1;10315:8;;;;;;;;;;;;;;;;;;10314:9;10284:39;10221:1714;;;10392:31;10426:11;;;10392:31;10472:28;:6;10498:1;10472:28;:25;:28;:::i;:::-;10426:98;;;;;;;;;;;-1:-1:-1;10426:98:0;;-1:-1:-1;10690:16:0;10674:11;;10665:21;;:4;;:21;:8;:21;:::i;:::-;:41;;;;;;;;;:111;;;-1:-1:-1;10760:16:0;10744:11;;10735:21;;:4;;:21;:8;:21;:::i;:::-;:41;;;;;;;;;10665:111;10635:1281;;;10836:11;;10827:42;;:4;;10849:19;10827:42;:8;:42;:::i;:::-;-1:-1:-1;11066:11:0;;10988:33;11024:80;;;:11;;;:80;;;;;11131:8;;11142:4;;11131:5;;11137:1;;11131:8;;;;;;:15;;;:8;;;;;;;;;;:15;11208:9;11173:548;11256:22;:6;:20;:22::i;:::-;11252:1;:26;:38;;;;;11282:5;11288:1;11282:8;;;;;;;;;;;;;;;;;;11252:38;11173:548;;;11383:32;11418:11;;;11383:32;11472:28;:6;11498:1;11472:28;:25;:28;:::i;:::-;11418:114;;;;;;;;;;;-1:-1:-1;11418:114:0;;-1:-1:-1;11593:16:0;11576:12;;11567:22;;:4;;:22;:8;:22;:::i;:::-;:42;;;;;;;;;11563:131;;;11657:5;11646;11652:1;11646:8;;;;;;;;;;:16;;;:8;;;;;;;;;;:16;11563:131;-1:-1:-1;11321:3:0;;11173:548;;;;11751:5;11757:1;11751:8;;;;;;;;;;;;;;;;;;11747:146;;;11792:28;:3;11800:1;11803:16;11792:28;:7;:28;:::i;:::-;;11747:146;10635:1281;;-1:-1:-1;10346:3:0;;10221:1714;;;;11958:5;11964:1;11958:8;;;;;;;;;;;;;;;;;;11957:9;11953:1311;;;12056:58;12081:6;12089:15;12106:7;12056:24;:58::i;:::-;12240:5;12229;12235:1;12229:8;;;;;;;;;;:16;;;:8;;;;;;;;;;:16;12299:9;12268:784;12343:22;:6;:20;:22::i;:::-;12339:1;:26;:39;;;;;12370:5;12376:1;12370:8;;;;;;;;;;;;;;;;;;12369:9;12339:39;12268:784;;;12459:31;12493:11;;;12459:31;12543:28;:6;12569:1;12543:28;:25;:28;:::i;:::-;12493:106;;;;;;;;;;;-1:-1:-1;12493:106:0;;-1:-1:-1;12776:16:0;12760:11;;12752:20;;:3;;:20;:7;:20;:::i;:::-;:40;;;;;;;;;:113;;;-1:-1:-1;12849:16:0;12833:11;;12825:20;;:3;;:20;:7;:20;:::i;:::-;:40;;;;;;;;;12752:113;12718:311;;;12924:31;:3;12932:1;12935:19;12924:31;:7;:31;:::i;:::-;;12997:4;12986:5;12992:1;12986:8;;;;;;;;;;:15;;;:8;;;;;;;;;;:15;12718:311;-1:-1:-1;12405:3:0;;12268:784;;;;13125:5;13131:1;13125:8;;;;;;;;;;;;;;;;;;13124:9;13120:125;;;13168:12;;;;:4;:12;;;;;13173:6;;-1:-1:-1;13168:12:0;;-1:-1:-1;13173:6:0;;13120:125;6920:6359;;;;;6809:6481;;;;;13350:24;13378:18;13390:5;13378:11;:18::i;:::-;13347:49;-1:-1:-1;;13431:1:0;13411:21;;13407:576;;13491:25;13518:19;13541:13;13548:5;13541:6;:13::i;:::-;13659:42;13704:63;;;:14;:63;;;;;13490:64;;-1:-1:-1;13490:64:0;;-1:-1:-1;13782:190:0;13806:11;13802:1;:15;13782:190;;;13848:32;13867:8;13876:1;13867:11;;;;;;;;;;;;;;;;;;;13848:3;;:32;:10;:32;:::i;:::-;13847:33;13843:114;;;13905:32;13924:8;13933:1;13924:11;;;;;;;;;;;;;;;;;;;13905:3;;:32;:10;:32;:::i;:::-;13819:3;;13782:190;;;;13407:576;;;;6456:7534;;;;;;;:::o;1479:216:3:-;1564:34;:1;1590:6;1564:34;:17;:34;:::i;:::-;1556:62;;;;;;;-1:-1:-1;;;;;1556:62:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1631:16;1650:15;;;:7;;;;:15;;;;;1676:9;;:11;;;;;;1479:216::o;2537:166::-;2690:1;2676:5;;;2684:1;2676:9;;2665:21;2664:27;:31;;2537:166::o;702:318::-;799:14;840:18;:1;:16;:18::i;:::-;861:1;840:22;;-1:-1:-1;875:34:3;:1;840:22;875:34;:17;:34;:::i;:::-;922:16;941:15;;;:7;;;:15;;;;;;;;967:23;;941:15;;967:23;;:12;;;;:23;;;;:::i;:::-;-1:-1:-1;1001:9:3;;:11;;;;;;702:318;;-1:-1:-1;;702:318:3:o;1882:737:4:-;1992:4;2127:17;;;:12;;;:17;;;;;;2161:13;;2157:455;;;-1:-1:-1;;2259:36:4;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;2241:12:4;:55;;;;;;;;;;;;;;;;;;;;;;;;2454:19;;2434:17;;;:12;;;:17;;;;;;;:39;2488:11;;2157:455;2532:26;;2568:5;;2532:3;;-1:-1:-1;;2545:12:4;;;2532:26;;;;;;;;;;;;;;;;:33;;:41;;;;2595:5;2588:12;;;;;13998:524:0;14110:21;14177:11;;;:4;:11;;;;;14081:27;;14110:21;14226:12;14177:11;14226:10;:12::i;:::-;14212:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;14212:27:0;-1:-1:-1;14199:40:0;-1:-1:-1;14266:1:0;;-1:-1:-1;14266:1:0;14278:237;14302:10;:17;14298:1;:21;14278:237;;;14342:11;;14378:9;:3;14385:1;14378:9;:6;:9;:::i;:::-;14341:46;;-1:-1:-1;14341:46:0;-1:-1:-1;14418:16:0;14406:8;:28;;;;;;;;;14402:102;;;14455:27;;14466:15;;;;14485:3;;14455:10;;14466:15;14455:27;;;;;;;;;;;;;;:33;14402:102;-1:-1:-1;;14321:3:0;;14278:237;;;;13998:524;;;;:::o;9637:182:4:-;9735:5;9779:30;9784:3;9804;9779:4;:30::i;:::-;9765:46;;;;;;;8325:115;8386:7;8413:19;8421:3;8413:7;:19::i;8788:247::-;8887:7;;;;8950:22;8954:3;8966:5;8950:3;:22::i;:::-;8919:53;;-1:-1:-1;8919:53:4;-1:-1:-1;8919:53:4;;9005:21;;;;;;;;8983:44;;;;;;8788:247;;;;;:::o;14530:529:0:-;14644:21;14711:11;;;:4;:11;;;;;14615:27;;14644:21;14760:12;14711:11;14760:10;:12::i;:::-;14746:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;14746:27:0;-1:-1:-1;14733:40:0;-1:-1:-1;14800:1:0;;-1:-1:-1;14800:1:0;14812:240;14836:10;:17;14832:1;:21;14812:240;;;14876:11;;14912:9;:3;14919:1;14912:9;:6;:9;:::i;:::-;14875:46;;-1:-1:-1;14875:46:0;-1:-1:-1;14952:19:0;14940:8;:31;;;;;;;;;14936:105;;;14992:27;;15003:15;;;;15022:3;;14992:10;;15003:15;14992:27;;;;;;;;;;;;;;:33;14936:105;-1:-1:-1;;14855:3:0;;14812:240;;15067:518;15176:21;15243:11;;;:4;:11;;;;;15147:27;;15176:21;15292:12;15243:11;15292:10;:12::i;:::-;15278:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15278:27:0;-1:-1:-1;15265:40:0;-1:-1:-1;15332:1:0;;-1:-1:-1;15332:1:0;15344:234;15368:10;:17;15364:1;:21;15344:234;;;15408:11;;15444:9;:3;15451:1;15444:9;:6;:9;:::i;:::-;15407:46;;-1:-1:-1;15407:46:0;-1:-1:-1;15484:13:0;15472:8;:25;;;;;;;;;15468:99;;;15518:27;;15529:15;;;;15548:3;;15518:10;;15529:15;15518:27;;;;;;;;;;;;;;:33;15468:99;-1:-1:-1;;15387:3:0;;15344:234;;6164:311:4;6230:7;6269:17;;;:12;;;:17;;;;;;6305:13;;;6297:56;;;;;-1:-1:-1;;;;;6297:56:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;6407:26;;:3;;-1:-1:-1;;6420:12:4;;;6407:26;;;;;;;;;;;;;;;;:33;;;6400:40;;;6164:311;;;;:::o;4692:110::-;4775:19;;4692:110::o;5167:348::-;5317:19;;5261:7;;;;5317:27;-1:-1:-1;5295:111:4;;;;;-1:-1:-1;;;;;5295:111:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5444:19;;5419:22;;5444:3;;5457:5;;5444:19;;;;;;;;;;;;;;;;5419:44;;5482:5;:10;;;5494:5;:12;;;5474:33;;;;;5167:348;;;;;:::o;126:15462:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;126:15462:0;;;-1:-1:-1;126:15462:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.5.1;\r\n\r\nimport \"./DirectedGraph.sol\";\r\nimport \"./EnumerableMap.sol\";\r\n\r\ncontract Argumentation {\r\n    using DirectedGraph for DirectedGraph.Graph;\r\n    using HitchensUnorderedKeySetLib for HitchensUnorderedKeySetLib.Set;\r\n    using EMap for EMap.LabelMap;\r\n\r\n    HitchensUnorderedKeySetLib.Set graphsIds;\r\n    mapping(uint256 => DirectedGraph.Graph) graphs;\r\n\r\n    // Arguments Sets\r\n    mapping(address => HitchensUnorderedKeySetLib.Set) agentsArguments;\r\n\r\n    uint256 labsNum;\r\n    mapping(uint256 => EMap.LabelMap) labs;\r\n    uint256 prefExtensionsNum;\r\n    mapping(uint256 => HitchensUnorderedKeySetLib.Set) prefExtensions;\r\n\r\n    event PreferredExtensions(uint256[] args);\r\n\r\n    constructor() public {\r\n        graphsIds.insert(bytes32(uint256(1)));\r\n    }\r\n\r\n    function insertArgument(string memory metadata)\r\n        public\r\n        returns (uint256 argId)\r\n    {\r\n        DirectedGraph.Graph storage graph = graphs[1];\r\n        argId = graph.insertNode(metadata);\r\n\r\n        HitchensUnorderedKeySetLib.Set storage agentArgs = agentsArguments[\r\n            msg.sender\r\n        ];\r\n        agentArgs.insert(bytes32(argId));\r\n    }\r\n\r\n    function supportArgument(uint256 argId) public {\r\n        DirectedGraph.Graph storage graph = graphs[1];\r\n        graph.incrementValue(argId);\r\n\r\n        HitchensUnorderedKeySetLib.Set storage agentArgs = agentsArguments[\r\n            msg.sender\r\n        ];\r\n        agentArgs.insert(bytes32(argId));\r\n    }\r\n\r\n    function insertAttack(\r\n        uint256 sourceId,\r\n        uint256 targetId,\r\n        string memory metadata\r\n    ) public returns (uint256 edgeId) {\r\n        DirectedGraph.Graph storage graph = graphs[1];\r\n        edgeId = graph.insertEdge(sourceId, targetId, metadata);\r\n    }\r\n\r\n    function pafReductionToAfPr1() public returns (uint256 graphId) {\r\n        graphId = graphsIds.count() + 1;\r\n        graphsIds.insert(bytes32(graphId));\r\n\r\n        DirectedGraph.Graph storage paf = graphs[1];\r\n        DirectedGraph.Graph storage af = graphs[graphId];\r\n\r\n        for (uint256 i = 0; i < paf.edgesIds.count(); i++) {\r\n            uint256 edgeId = uint256(paf.edgesIds.keyAtIndex(i));\r\n            DirectedGraph.Edge storage edge = paf.edges[edgeId];\r\n\r\n            DirectedGraph.Node storage s = paf.nodes[edge.source];\r\n            DirectedGraph.Node storage t = paf.nodes[edge.target];\r\n            bool notBpreferredToA = !(t.value > s.value);\r\n\r\n            // for (uint256 j = 0; j < paf.nodesIds.count(); j++) {\r\n            //     af.insertNodeWithId(j+1);\r\n            // }\r\n\r\n            if (notBpreferredToA) { // [Vincent: all args should be ported over.\r\n                //insert to af\r\n                if (!af.nodesIds.exists(bytes32(edge.source))) {\r\n                    af.insertNodeWithId(edge.source);\r\n                }\r\n                if (!af.nodesIds.exists(bytes32(edge.target))) {\r\n                    af.insertNodeWithId(edge.target);\r\n                }\r\n                af.insertEdge(edge.source, edge.target, \"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function pafReductionToAfPr3() public returns (uint256 graphId) {\r\n        graphId = graphsIds.count() + 1;\r\n        graphsIds.insert(bytes32(graphId));\r\n\r\n        DirectedGraph.Graph storage paf = graphs[1];\r\n        DirectedGraph.Graph storage af = graphs[graphId];\r\n\r\n        for (uint256 i = 0; i < paf.edgesIds.count(); i++) {\r\n            uint256 edgeId = uint256(paf.edgesIds.keyAtIndex(i));\r\n            DirectedGraph.Edge storage edge = paf.edges[edgeId];\r\n\r\n            DirectedGraph.Node storage s = paf.nodes[edge.source];\r\n            DirectedGraph.Node storage t = paf.nodes[edge.target];\r\n            bool notBpreferredToA = !(t.value > s.value);\r\n\r\n            DirectedGraph.Edge storage edgeReverse = paf.edges[\r\n                DirectedGraph.cantorPairing(edge.target, edge.source)\r\n            ];\r\n            bool notBtoA = edgeReverse.source > 0 && edgeReverse.target > 0;\r\n\r\n            // for (uint256 j = 0; j < paf.nodesIds.count(); j++) {\r\n            //     af.insertNodeWithId(j+1);\r\n            // }\r\n\r\n            if (notBpreferredToA || notBtoA) { // [Vincent: node should be considered to be added regardless of this if]\r\n                // insert to af\r\n                if (!af.nodesIds.exists(bytes32(edge.source))) {\r\n                    af.insertNodeWithId(edge.source);\r\n                }\r\n                if (!af.nodesIds.exists(bytes32(edge.target))) {\r\n                    af.insertNodeWithId(edge.target);\r\n                }\r\n                af.insertEdge(edge.source, edge.target, \"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function getGraph(uint256 graphId)\r\n        public\r\n        view\r\n        returns (\r\n            uint256[] memory nodes,\r\n            uint256[] memory edgesSource,\r\n            uint256[] memory edgesTarget\r\n        )\r\n    {\r\n        DirectedGraph.Graph storage graph = graphs[graphId];\r\n        uint256 nodesCount = graph.nodesIds.count();\r\n        uint256 edgesCount = graph.edgesIds.count();\r\n\r\n        nodes = new uint256[](nodesCount);\r\n        edgesSource = new uint256[](edgesCount);\r\n        edgesTarget = new uint256[](edgesCount);\r\n\r\n        for (uint256 i = 0; i < graph.nodesIds.count(); i++) {\r\n            nodes[i] = uint256(graph.nodesIds.keyAtIndex(i));\r\n        }\r\n\r\n        for (uint256 i = 0; i < graph.edgesIds.count(); i++) {\r\n            uint256 edgeId = uint256(graph.edgesIds.keyAtIndex(i));\r\n            DirectedGraph.Edge storage edge = graph.edges[edgeId];\r\n            edgesSource[i] = edge.source;\r\n            edgesTarget[i] = edge.target;\r\n        }\r\n    }\r\n\r\n    function enumeratingPreferredExtensions(uint256 graphId)\r\n        public\r\n        returns (uint256[] memory args)\r\n    {\r\n        DirectedGraph.Graph storage graph = graphs[graphId];\r\n        HitchensUnorderedKeySetLib.Set storage ext = prefExtensions[\r\n            prefExtensionsNum\r\n        ];\r\n        EMap.LabelMap storage lab = labs[labsNum];\r\n        for (uint256 i = 0; i < graph.nodesIds.count(); i++) {\r\n            lab.set(uint256(graph.nodesIds.keyAtIndex(i)), EMap.Label.BLANK);\r\n        }\r\n        _findPreferredExtensions(labsNum++, prefExtensionsNum++, graphId);\r\n\r\n        args = new uint256[](ext.count());\r\n        for (uint256 i = 0; i < ext.count(); i++) {\r\n            args[i] = uint256(ext.keyAtIndex(i));\r\n        }\r\n\r\n        emit PreferredExtensions(args);\r\n    }\r\n\r\n    function _findPreferredExtensions(\r\n        uint256 labId,\r\n        uint256 prefExtensionId,\r\n        uint256 graphId\r\n    ) private {\r\n        DirectedGraph.Graph storage graph = graphs[graphId];\r\n        EMap.LabelMap storage lab = labs[labId];\r\n        bool[] memory flags = new bool[](5);\r\n\r\n        // while ∃y ∈ A : Lab(y) = BLANK do\r\n        while (!flags[0]) {\r\n            (uint256[] memory argIds, uint256 argIdsLen) = _getBlank(labId);\r\n            if (argIdsLen <= 0) {\r\n                flags[0] = true;\r\n            } else {\r\n                uint256 y = 0;\r\n                // select y with Lab(y) = BLANK and ∀z ∈ {y}− Lab(z) ∈ {OUT, MUST_OUT}\r\n                flags[1] = false;\r\n                for (uint256 i = 0; i < argIdsLen && !flags[1]; i++) {\r\n                    y = argIds[i];\r\n                    DirectedGraph.Node storage y_temp = graph.nodes[y];\r\n                    flags[2] = false;\r\n                    for (\r\n                        uint256 j = 0;\r\n                        j < y_temp.edgesIn.count() && !flags[2];\r\n                        j++\r\n                    ) {\r\n                        DirectedGraph.Edge storage edge = graph.edges[\r\n                            uint256(y_temp.edgesIn.keyAtIndex(j))\r\n                        ];\r\n                        if (\r\n                            lab.get(edge.source) != EMap.Label.OUT &&\r\n                            lab.get(edge.source) != EMap.Label.MUST_OUT\r\n                        ) {\r\n                            flags[2] = true;\r\n                        }\r\n                    }\r\n                    flags[1] = !flags[2];\r\n                }\r\n\r\n                // otherwise select y with Lab(y) = BLANK s.t. ∀z ∈ A : Lab(z) = BLANK,\r\n                //|{x : x ∈ {y}+ ∧ Lab(x)!= OUT }| ≥ |{x : x ∈ {z}+ ∧ Lab(x) != OUT }|;\r\n                if (!flags[1]) {\r\n                    uint256 max = 0;\r\n                    for (uint256 i = 0; i < argIdsLen; i++) {\r\n                        DirectedGraph.Node storage y_temp = graph.nodes[\r\n                            argIds[i]\r\n                        ];\r\n                        uint256 y_temp_num = 0;\r\n                        for (uint256 j = 0; j < y_temp.edgesOut.count(); j++) {\r\n                            DirectedGraph.Edge storage edge = graph.edges[\r\n                                uint256(y_temp.edgesOut.keyAtIndex(j))\r\n                            ];\r\n                            if (lab.get(edge.target) != EMap.Label.OUT) {\r\n                                y_temp_num++;\r\n                            }\r\n                        }\r\n                        if (y_temp_num > max) {\r\n                            max = y_temp_num;\r\n                            y = argIds[i];\r\n                        }\r\n                    }\r\n                }\r\n                // Lab′ ← Lab;\r\n                uint256 lab1Id = labsNum++;\r\n                EMap.LabelMap storage lab1 = labs[lab1Id];\r\n                for (uint256 i = 0; i < lab.length(); i++) {\r\n                    (uint256 arg, EMap.Label argLabel) = lab.at(i);\r\n                    lab1.set(arg, argLabel);\r\n                }\r\n                // Lab′ (y) ← IN;\r\n                lab1.set(y, EMap.Label.IN);\r\n                // foreach z ∈ {y}+ do Lab′(z) ← OUT ;\r\n                DirectedGraph.Node storage y_node = graph.nodes[y];\r\n                for (uint256 j = 0; j < y_node.edgesOut.count(); j++) {\r\n                    DirectedGraph.Edge storage edge = graph.edges[\r\n                        uint256(y_node.edgesOut.keyAtIndex(j))\r\n                    ];\r\n                    lab1.set(edge.target, EMap.Label.OUT);\r\n                }\r\n                // foreach z ∈ {y}− do\r\n                flags[3] = false;\r\n                for (\r\n                    uint256 j = 0;\r\n                    j < y_node.edgesIn.count() && !flags[3];\r\n                    j++\r\n                ) {\r\n                    DirectedGraph.Edge storage edge = graph.edges[\r\n                        uint256(y_node.edgesIn.keyAtIndex(j))\r\n                    ];\r\n                    // if Lab′ (z) ∈ {UNDEC, BLANK} then Lab′ (z) ← MUST OUT ;\r\n                    if (\r\n                        lab1.get(edge.source) == EMap.Label.UNDEC ||\r\n                        lab1.get(edge.source) == EMap.Label.BLANK\r\n                    ) {\r\n                        lab1.set(edge.source, EMap.Label.MUST_OUT);\r\n                        // if !∃w ∈ {z}− : Lab′ (w) = BLANK then Lab(y) ← UNDEC;\r\n                        DirectedGraph.Node storage z_node = graph.nodes[\r\n                            edge.source\r\n                        ];\r\n                        flags[3] = true;\r\n                        for (\r\n                            uint256 k = 0;\r\n                            k < z_node.edgesIn.count() && flags[3];\r\n                            k++\r\n                        ) {\r\n                            DirectedGraph.Edge storage edgeZ = graph.edges[\r\n                                uint256(z_node.edgesIn.keyAtIndex(k))\r\n                            ];\r\n                            if (lab1.get(edgeZ.source) == EMap.Label.BLANK) {\r\n                                flags[3] = false;\r\n                            }\r\n                        }\r\n                        if (flags[3]) {\r\n                            lab.set(y, EMap.Label.UNDEC);\r\n                            // goto line 7;\r\n                        }\r\n                    }\r\n                }\r\n                if (!flags[3]) {\r\n                    // call find-preferred-extensions(Lab′ );\r\n                    _findPreferredExtensions(lab1Id, prefExtensionId, graphId);\r\n                    //if ∃z ∈ {y}− : Lab(z) ∈ {BLANK,UNDEC} then Lab(y) ← UNDEC;\r\n                    flags[4] = false;\r\n                    for (\r\n                        uint256 j = 0;\r\n                        j < y_node.edgesIn.count() && !flags[4];\r\n                        j++\r\n                    ) {\r\n                        DirectedGraph.Edge storage edge = graph.edges[\r\n                            uint256(y_node.edgesIn.keyAtIndex(j))\r\n                        ];\r\n                        // if Lab′ (z) ∈ {UNDEC, BLANK} then Lab′ (z) ← MUST OUT ;\r\n                        if (\r\n                            lab.get(edge.source) == EMap.Label.UNDEC ||\r\n                            lab.get(edge.source) == EMap.Label.BLANK\r\n                        ) {\r\n                            lab.set(y, EMap.Label.MUST_OUT);\r\n                            flags[4] = true;\r\n                        }\r\n                    }\r\n                    // else Lab ← Lab′ ;\r\n                    if (!flags[4]) {\r\n                        lab = labs[lab1Id];\r\n                        labId = lab1Id;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // if  !∃x : Lab(x) = MUST OUT then\r\n        (, uint256 argMustOutIdsLen) = _getMustOut(labId);\r\n        if (argMustOutIdsLen <= 0) {\r\n            // S ← {x | Lab(x) = IN};\r\n            (uint256[] memory argInIds, uint256 argINIdsLen) = _getIn(labId);\r\n            // if !∃T ∈ Epreferred : S ⊆ T then Epreferred ← Epreferred ∪ {S};\r\n            HitchensUnorderedKeySetLib.Set storage ext = prefExtensions[\r\n                prefExtensionId\r\n            ];\r\n            for (uint256 i = 0; i < argINIdsLen; i++) {\r\n                if (!ext.exists(bytes32(argInIds[i]))) {\r\n                    ext.insert(bytes32(argInIds[i]));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function _getBlank(uint256 labId)\r\n        private\r\n        view\r\n        returns (uint256[] memory argIdsTemp, uint256 argIdsLenTemp)\r\n    {\r\n        EMap.LabelMap storage lab = labs[labId];\r\n        argIdsTemp = new uint256[](lab.length());\r\n        argIdsLenTemp = 0;\r\n        for (uint256 i = 0; i < argIdsTemp.length; i++) {\r\n            (uint256 arg, EMap.Label argLabel) = lab.at(i);\r\n            if (argLabel == EMap.Label.BLANK) {\r\n                argIdsTemp[argIdsLenTemp++] = arg;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _getMustOut(uint256 labId)\r\n        private\r\n        view\r\n        returns (uint256[] memory argIdsTemp, uint256 argIdsLenTemp)\r\n    {\r\n        EMap.LabelMap storage lab = labs[labId];\r\n        argIdsTemp = new uint256[](lab.length());\r\n        argIdsLenTemp = 0;\r\n        for (uint256 i = 0; i < argIdsTemp.length; i++) {\r\n            (uint256 arg, EMap.Label argLabel) = lab.at(i);\r\n            if (argLabel == EMap.Label.MUST_OUT) {\r\n                argIdsTemp[argIdsLenTemp++] = arg;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _getIn(uint256 labId)\r\n        private\r\n        view\r\n        returns (uint256[] memory argIdsTemp, uint256 argIdsLenTemp)\r\n    {\r\n        EMap.LabelMap storage lab = labs[labId];\r\n        argIdsTemp = new uint256[](lab.length());\r\n        argIdsLenTemp = 0;\r\n        for (uint256 i = 0; i < argIdsTemp.length; i++) {\r\n            (uint256 arg, EMap.Label argLabel) = lab.at(i);\r\n            if (argLabel == EMap.Label.IN) {\r\n                argIdsTemp[argIdsLenTemp++] = arg;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\vincent.dewit\\Documents\\Code\\IHiBO_2.0\\contracts\\Argumentation.sol",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"pafReductionToAfPr1\",\"outputs\":[{\"name\":\"graphId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"graphId\",\"type\":\"uint256\"}],\"name\":\"getGraph\",\"outputs\":[{\"name\":\"nodes\",\"type\":\"uint256[]\"},{\"name\":\"edgesSource\",\"type\":\"uint256[]\"},{\"name\":\"edgesTarget\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"graphId\",\"type\":\"uint256\"}],\"name\":\"enumeratingPreferredExtensions\",\"outputs\":[{\"name\":\"args\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sourceId\",\"type\":\"uint256\"},{\"name\":\"targetId\",\"type\":\"uint256\"},{\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"insertAttack\",\"outputs\":[{\"name\":\"edgeId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"argId\",\"type\":\"uint256\"}],\"name\":\"supportArgument\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pafReductionToAfPr3\",\"outputs\":[{\"name\":\"graphId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"insertArgument\",\"outputs\":[{\"name\":\"argId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"args\",\"type\":\"uint256[]\"}],\"name\":\"PreferredExtensions\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Argumentation.sol\":\"Argumentation\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Argumentation.sol\":{\"keccak256\":\"0x4df3c148105d6a754c33f87d20c0bcfe29754613508e9a92969817131e8233cc\",\"urls\":[\"bzzr://f67e7c5692062b7f8197c89f512a704f57263d863897bbeb717b5405c81efb46\"]},\"project:/contracts/DirectedGraph.sol\":{\"keccak256\":\"0xfe65d0d4f282169218c78135f317ac9b15625910678a12191a20b99beaf8b88d\",\"urls\":[\"bzzr://abf3d66025395d1eff3f0cda66c0b13339fa78e8966a3bf326ccedd8c1874056\"]},\"project:/contracts/EnumerableMap.sol\":{\"keccak256\":\"0xc43fb31d0a61e882876e5bd15019dc34bd7b4c47f5aa33ef389ac9ce08c27bde\",\"urls\":[\"bzzr://4130027171be2c0c414ce4294e4e9a466ed54d00ef9b4d90aa2d565e4264dd98\"]},\"project:/contracts/HitchensUnorderedKeySet.sol\":{\"keccak256\":\"0xa663da0ffb9e86382c1c0419d57de7270de36e79155940c228050874643c9630\",\"urls\":[\"bzzr://56821364f5ddfb6a744b8ee686bb564bc6615ab06a46a6a0d438ac1d49ba8ef0\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200002e6000600164010000000062000aa26200003482021704565b620001e9565b801515620000c957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f7420626520307830000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b620000de82826401000000006200019b810204565b156200017157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e0000000000000000000000606482015290519081900360840190fd5b60018281018054918201815560009081526020808220830184905592815292909152604090912055565b60018201546000901515620001b357506000620001e3565b6000828152602084905260409020546001840180548492908110620001d457fe5b90600052602060002001541490505b92915050565b611cc280620001f96000396000f3fe60806040526004361061007c577c010000000000000000000000000000000000000000000000000000000060003504632defc54e811461008157806334142746146100a85780636f14487a146101b057806399e3afe81461022a578063a02e5110146102e9578063df3e140614610315578063fcc910601461032a575b600080fd5b34801561008d57600080fd5b506100966103dd565b60408051918252519081900360200190f35b3480156100b457600080fd5b506100d2600480360360208110156100cb57600080fd5b5035610529565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561011a578181015183820152602001610102565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015610159578181015183820152602001610141565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610198578181015183820152602001610180565b50505050905001965050505050505060405180910390f35b3480156101bc57600080fd5b506101da600480360360208110156101d357600080fd5b50356106b0565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102165781810151838201526020016101fe565b505050509050019250505060405180910390f35b34801561023657600080fd5b506100966004803603606081101561024d57600080fd5b81359160208101359181019060608101604082013564010000000081111561027457600080fd5b82018360208201111561028657600080fd5b803590602001918460018302840111640100000000831117156102a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610832945050505050565b3480156102f557600080fd5b506103136004803603602081101561030c57600080fd5b5035610868565b005b34801561032157600080fd5b506100966108b5565b34801561033657600080fd5b506100966004803603602081101561034d57600080fd5b81019060208101813564010000000081111561036857600080fd5b82018360208201111561037a57600080fd5b8035906020019184600183028401116401000000008311171561039c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a47945050505050565b60006103e96000610a9b565b60010190506103ff60008263ffffffff610aa216565b6002602052600081815260408120600080516020611c77833981519152915b61042a83600301610a9b565b811015610523576000610446600385018363ffffffff610bce16565b60008181526005860160209081526040808320805484526002890190925280832060018301548452922060048084015490820154949550919390911080159061051257835461049c90889063ffffffff610bf516565b15156104b55783546104b590889063ffffffff610c3f16565b60018401546104cb90889063ffffffff610bf516565b15156104e75760018401546104e790889063ffffffff610c3f16565b83546001850154604080516020810190915260008152610510928a92909163ffffffff610cb816565b505b50506001909301925061041e915050565b50505090565b60008181526002602052604081206060918291829161054782610a9b565b9050600061055783600301610a9b565b905081604051908082528060200260200182016040528015610583578160200160208202803883390190505b509550806040519080825280602002602001820160405280156105b0578160200160208202803883390190505b509450806040519080825280602002602001820160405280156105dd578160200160208202803883390190505b50935060005b6105ec84610a9b565b81101561062357610603848263ffffffff610bce16565b875188908390811061061157fe5b602090810290910101526001016105e3565b5060005b61063384600301610a9b565b8110156106a557600061064f600386018363ffffffff610bce16565b6000818152600587016020526040902080548951929350909189908590811061067457fe5b602090810290910101526001810154875188908590811061069157fe5b602090810290910101525050600101610627565b505050509193909250565b6000818152600260209081526040808320600654845260078352818420600454855260059093529083206060939192915b6106ea84610a9b565b81101561071c57610713610704858363ffffffff610bce16565b8390600363ffffffff610e1d16565b506001016106e1565b5060048054600180820190925560068054928301905561073c9187610e3f565b61074582610a9b565b60405190808252806020026020018201604052801561076e578160200160208202803883390190505b50935060005b61077d83610a9b565b8110156107b457610794838263ffffffff610bce16565b85518690839081106107a257fe5b60209081029091010152600101610774565b507f300a3be7ae677594a5a86baad0f39c1cab903a393d44e74e6c26578339f21e94846040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108175781810151838201526020016107ff565b505050509050019250505060405180910390a1505050919050565b600160009081526002602052600080516020611c7783398151915261085f8186868663ffffffff610cb816565b95945050505050565b60016000526002602052600080516020611c77833981519152610891818363ffffffff6116ab16565b3360009081526003602052604090206108b0818463ffffffff610aa216565b505050565b60006108c16000610a9b565b60010190506108d760008263ffffffff610aa216565b6002602052600081815260408120600080516020611c77833981519152915b61090283600301610a9b565b81101561052357600061091e600385018363ffffffff610bce16565b60008181526005860160208181526040808420805480865260028b0190935281852060018201548087529286206004808301549082015498995092979196909592909111159390928391610972919061172e565b81526020019081526020016000209050600080826000015411801561099b575060008260010154115b905082806109a65750805b15610a345785546109be908a9063ffffffff610bf516565b15156109d75785546109d7908a9063ffffffff610c3f16565b60018601546109ed908a9063ffffffff610bf516565b1515610a09576001860154610a09908a9063ffffffff610c3f16565b85546001870154604080516020810190915260008152610a32928c92909163ffffffff610cb816565b505b5050600190950194506108f69350505050565b600160009081526002602052600080516020611c77833981519152610a72818463ffffffff61173d16565b336000908152600360205260409020909250610a94818463ffffffff610aa216565b5050919050565b6001015490565b801515610b1f576040805160e560020a62461bcd02815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f7420626520307830000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610b298282610bf5565b15610ba4576040805160e560020a62461bcd02815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e0000000000000000000000606482015290519081900360840190fd5b60018281018054918201815560009081526020808220830184905592815292909152604090912055565b60008260010182815481101515610be157fe5b906000526020600020015490505b92915050565b60018201546000901515610c0b57506000610bef565b6000828152602084905260409020546001840180548492908110610c2b57fe5b906000526020600020015414905092915050565b610c4f828263ffffffff610bf516565b15610ca4576040805160e560020a62461bcd02815260206004820152601460248201527f4e6f646520616c7265616479206578697374732e000000000000000000000000604482015290519081900360640190fd5b610cb4828263ffffffff610aa216565b5050565b6000610cca858563ffffffff610bf516565b1515610d20576040805160e560020a62461bcd02815260206004820152601160248201527f556e6b6e6f776e20736f7572636549642e000000000000000000000000000000604482015290519081900360640190fd5b610d30858463ffffffff610bf516565b1515610d86576040805160e560020a62461bcd02815260206004820152601160248201527f556e6b6e6f776e2074617267657449642e000000000000000000000000000000604482015290519081900360640190fd5b610d90848461172e565b9050610da5600386018263ffffffff610aa216565b6000818152600586016020908152604090912083519091610dcd916002840191860190611bdb565b5084815560018101849055600085815260028088016020526040808320878452922090610e029083018563ffffffff610aa216565b610e12818563ffffffff610aa216565b505050949350505050565b6000610e358484846004811115610e3057fe5b611796565b90505b9392505050565b600081815260026020908152604080832086845260059283905292819020815183815260c0810190925291606091908160200160208202803883390190505090505b806000815181101515610e9057fe5b9060200190602002015115156115ff5760606000610ead88611830565b909250905060008111610edf576001836000815181101515610ecb57fe5b9115156020928302909101909101526115f8565b8251600090819085906001908110610ef357fe5b91151560209283029091019091015260005b8281108015610f2a5750846001815181101515610f1e57fe5b90602001906020020151155b15611096578381815181101515610f3d57fe5b602090810290910181015160008181526002808b019093526040812088519295509290918891908110610f6c57fe5b91151560209283029091019091015260005b610f8782610a9b565b81108015610fab5750866002815181101515610f9f57fe5b90602001906020020151155b1561105457600060058a0181610fc7858563ffffffff610bce16565b81526020810191909152604001600020905060018154610fee908b9063ffffffff6118e216565b6004811115610ff957fe5b14158015611025575060048154611017908b9063ffffffff6118e216565b600481111561102257fe5b14155b1561104b57600188600281518110151561103b57fe5b9115156020928302909101909101525b50600101610f7e565b5085600281518110151561106457fe5b906020019060200201511586600181518110151561107e57fe5b91151560209283029091019091015250600101610f05565b508360018151811015156110a657fe5b9060200190602002015115156111a1576000805b8381101561119e57600088600201600087848151811015156110d857fe5b6020908102909101810151825281019190915260400160009081209150805b61110383600201610a9b565b81101561116d57600060058c0181611124600287018563ffffffff610bce16565b81526020810191909152604001600020905060018082015461114d908d9063ffffffff6118e216565b600481111561115857fe5b14611164576001909201915b506001016110f7565b508381111561119457809350868381518110151561118757fe5b9060200190602002015194505b50506001016110ba565b50505b60048054600181019091556000818152600560205260408120905b6111c5886118f9565b811015611200576000806111df8a8463ffffffff61190416565b90925090506111f584838363ffffffff610e1d16565b5050506001016111bc565b506112138184600063ffffffff610e1d16565b5060008381526002890160205260408120905b61123282600201610a9b565b81101561128757600060058b0181611253600286018563ffffffff610bce16565b8152602081019190915260400160002060018181015491925061127d91869163ffffffff610e1d16565b5050600101611226565b50600087600381518110151561129957fe5b91151560209283029091019091015260005b6112b482610a9b565b811080156112d857508760038151811015156112cc57fe5b90602001906020020151155b1561148857600060058b01816112f4858563ffffffff610bce16565b8152602081019190915260400160002090506002815461131b90869063ffffffff6118e216565b600481111561132657fe5b148061134f57506003815461134290869063ffffffff6118e216565b600481111561134d57fe5b145b1561147f578054611369908590600463ffffffff610e1d16565b508054600090815260028c016020526040902089516001908b90600390811061138e57fe5b91151560209283029091019091015260005b6113a982610a9b565b811080156113cc57508a60038151811015156113c157fe5b906020019060200201515b1561144a57600060058e01816113e8858563ffffffff610bce16565b8152602081019190915260400160002090506003815461140f90899063ffffffff6118e216565b600481111561141a57fe5b14156114415760008c600381518110151561143157fe5b9115156020928302909101909101525b506001016113a0565b5089600381518110151561145a57fe5b906020019060200201511561147d5761147b8b88600263ffffffff610e1d16565b505b505b506001016112ab565b5086600381518110151561149857fe5b9060200190602002015115156115f3576114b3838c8c610e3f565b60008760048151811015156114c457fe5b91151560209283029091019091015260005b6114df82610a9b565b8110801561150357508760048151811015156114f757fe5b90602001906020020151155b156115bc57600060058b018161151f858563ffffffff610bce16565b81526020810191909152604001600020905060028154611546908c9063ffffffff6118e216565b600481111561155157fe5b148061157a57506003815461156d908c9063ffffffff6118e216565b600481111561157857fe5b145b156115b3576115918a87600463ffffffff610e1d16565b5060018960048151811015156115a357fe5b9115156020928302909101909101525b506001016114d6565b508660048151811015156115cc57fe5b9060200190602002015115156115f3576000838152600560205260409020929b509196508a915b505050505b5050610e81565b600061160a87611932565b915050600081116116a25760606000611622896119dd565b60008a81526007602052604081209294509092505b8281101561169d57611667848281518110151561165057fe5b60209081029091010151839063ffffffff610bf516565b151561169557611695848281518110151561167e57fe5b60209081029091010151839063ffffffff610aa216565b600101611637565b505050505b50505050505050565b6116bb828263ffffffff610bf516565b1515611711576040805160e560020a62461bcd02815260206004820152600f60248201527f556e6b6e6f776e206e6f646549642e0000000000000000000000000000000000604482015290519081900360640190fd5b600090815260029091016020526040902060040180546001019055565b60029082016001810102040190565b600061174883610a9b565b600101905061175d838263ffffffff610aa216565b6000818152600284016020908152604090912083519091611785916005840191860190611bdb565b506004018054600101905592915050565b60008281526001840160205260408120548015156117fd575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610e38565b845483908690600019840190811061181157fe5b9060005260206000209060020201600101819055506000915050610e38565b60008181526005602052604081206060919061184b816118f9565b604051908082528060200260200182016040528015611874578160200160208202803883390190505b50925060009150815b83518110156118db57600080611899848463ffffffff61190416565b909250905060038160048111156118ac57fe5b14156118d15785516001860195839188919081106118c657fe5b602090810290910101525b505060010161187d565b5050915091565b60006118ee8383611a88565b6004811115610e3857fe5b6000610bef82611b1d565b60008080806119138686611b21565b90925090508181600481111561192557fe5b9350935050509250929050565b60008181526005602052604081206060919061194d816118f9565b604051908082528060200260200182016040528015611976578160200160208202803883390190505b50925060009150815b83518110156118db5760008061199b848463ffffffff61190416565b909250905060048160048111156119ae57fe5b14156119d35785516001860195839188919081106119c857fe5b602090810290910101525b505060010161197f565b6000818152600560205260408120606091906119f8816118f9565b604051908082528060200260200182016040528015611a21578160200160208202803883390190505b50925060009150815b83518110156118db57600080611a46848463ffffffff61190416565b90925090506000816004811115611a5957fe5b1415611a7e578551600186019583918891908110611a7357fe5b602090810290910101525b5050600101611a2a565b6000818152600183016020526040812054801515611af0576040805160e560020a62461bcd02815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604482015290519081900360640190fd5b835484906000198301908110611b0257fe5b90600052602060002090600202016001015491505092915050565b5490565b815460009081908310611ba4576040805160e560020a62461bcd02815260206004820152602260248201527f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60448201527f6473000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b8354600090859085908110611bb557fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c1c57805160ff1916838001178555611c49565b82800160010185558215611c49579182015b82811115611c49578251825591602001919060010190611c2e565b50611c55929150611c59565b5090565b611c7391905b80821115611c555760008155600101611c5f565b9056fee90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0a165627a7a723058204a65f7a8e908ddb24d08f99514eb832df735804c234a3d162434fb099aec71440029",
  "deployedBytecode": "0x60806040526004361061007c577c010000000000000000000000000000000000000000000000000000000060003504632defc54e811461008157806334142746146100a85780636f14487a146101b057806399e3afe81461022a578063a02e5110146102e9578063df3e140614610315578063fcc910601461032a575b600080fd5b34801561008d57600080fd5b506100966103dd565b60408051918252519081900360200190f35b3480156100b457600080fd5b506100d2600480360360208110156100cb57600080fd5b5035610529565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561011a578181015183820152602001610102565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015610159578181015183820152602001610141565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610198578181015183820152602001610180565b50505050905001965050505050505060405180910390f35b3480156101bc57600080fd5b506101da600480360360208110156101d357600080fd5b50356106b0565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102165781810151838201526020016101fe565b505050509050019250505060405180910390f35b34801561023657600080fd5b506100966004803603606081101561024d57600080fd5b81359160208101359181019060608101604082013564010000000081111561027457600080fd5b82018360208201111561028657600080fd5b803590602001918460018302840111640100000000831117156102a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610832945050505050565b3480156102f557600080fd5b506103136004803603602081101561030c57600080fd5b5035610868565b005b34801561032157600080fd5b506100966108b5565b34801561033657600080fd5b506100966004803603602081101561034d57600080fd5b81019060208101813564010000000081111561036857600080fd5b82018360208201111561037a57600080fd5b8035906020019184600183028401116401000000008311171561039c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a47945050505050565b60006103e96000610a9b565b60010190506103ff60008263ffffffff610aa216565b6002602052600081815260408120600080516020611c77833981519152915b61042a83600301610a9b565b811015610523576000610446600385018363ffffffff610bce16565b60008181526005860160209081526040808320805484526002890190925280832060018301548452922060048084015490820154949550919390911080159061051257835461049c90889063ffffffff610bf516565b15156104b55783546104b590889063ffffffff610c3f16565b60018401546104cb90889063ffffffff610bf516565b15156104e75760018401546104e790889063ffffffff610c3f16565b83546001850154604080516020810190915260008152610510928a92909163ffffffff610cb816565b505b50506001909301925061041e915050565b50505090565b60008181526002602052604081206060918291829161054782610a9b565b9050600061055783600301610a9b565b905081604051908082528060200260200182016040528015610583578160200160208202803883390190505b509550806040519080825280602002602001820160405280156105b0578160200160208202803883390190505b509450806040519080825280602002602001820160405280156105dd578160200160208202803883390190505b50935060005b6105ec84610a9b565b81101561062357610603848263ffffffff610bce16565b875188908390811061061157fe5b602090810290910101526001016105e3565b5060005b61063384600301610a9b565b8110156106a557600061064f600386018363ffffffff610bce16565b6000818152600587016020526040902080548951929350909189908590811061067457fe5b602090810290910101526001810154875188908590811061069157fe5b602090810290910101525050600101610627565b505050509193909250565b6000818152600260209081526040808320600654845260078352818420600454855260059093529083206060939192915b6106ea84610a9b565b81101561071c57610713610704858363ffffffff610bce16565b8390600363ffffffff610e1d16565b506001016106e1565b5060048054600180820190925560068054928301905561073c9187610e3f565b61074582610a9b565b60405190808252806020026020018201604052801561076e578160200160208202803883390190505b50935060005b61077d83610a9b565b8110156107b457610794838263ffffffff610bce16565b85518690839081106107a257fe5b60209081029091010152600101610774565b507f300a3be7ae677594a5a86baad0f39c1cab903a393d44e74e6c26578339f21e94846040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108175781810151838201526020016107ff565b505050509050019250505060405180910390a1505050919050565b600160009081526002602052600080516020611c7783398151915261085f8186868663ffffffff610cb816565b95945050505050565b60016000526002602052600080516020611c77833981519152610891818363ffffffff6116ab16565b3360009081526003602052604090206108b0818463ffffffff610aa216565b505050565b60006108c16000610a9b565b60010190506108d760008263ffffffff610aa216565b6002602052600081815260408120600080516020611c77833981519152915b61090283600301610a9b565b81101561052357600061091e600385018363ffffffff610bce16565b60008181526005860160208181526040808420805480865260028b0190935281852060018201548087529286206004808301549082015498995092979196909592909111159390928391610972919061172e565b81526020019081526020016000209050600080826000015411801561099b575060008260010154115b905082806109a65750805b15610a345785546109be908a9063ffffffff610bf516565b15156109d75785546109d7908a9063ffffffff610c3f16565b60018601546109ed908a9063ffffffff610bf516565b1515610a09576001860154610a09908a9063ffffffff610c3f16565b85546001870154604080516020810190915260008152610a32928c92909163ffffffff610cb816565b505b5050600190950194506108f69350505050565b600160009081526002602052600080516020611c77833981519152610a72818463ffffffff61173d16565b336000908152600360205260409020909250610a94818463ffffffff610aa216565b5050919050565b6001015490565b801515610b1f576040805160e560020a62461bcd02815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f7420626520307830000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610b298282610bf5565b15610ba4576040805160e560020a62461bcd02815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e0000000000000000000000606482015290519081900360840190fd5b60018281018054918201815560009081526020808220830184905592815292909152604090912055565b60008260010182815481101515610be157fe5b906000526020600020015490505b92915050565b60018201546000901515610c0b57506000610bef565b6000828152602084905260409020546001840180548492908110610c2b57fe5b906000526020600020015414905092915050565b610c4f828263ffffffff610bf516565b15610ca4576040805160e560020a62461bcd02815260206004820152601460248201527f4e6f646520616c7265616479206578697374732e000000000000000000000000604482015290519081900360640190fd5b610cb4828263ffffffff610aa216565b5050565b6000610cca858563ffffffff610bf516565b1515610d20576040805160e560020a62461bcd02815260206004820152601160248201527f556e6b6e6f776e20736f7572636549642e000000000000000000000000000000604482015290519081900360640190fd5b610d30858463ffffffff610bf516565b1515610d86576040805160e560020a62461bcd02815260206004820152601160248201527f556e6b6e6f776e2074617267657449642e000000000000000000000000000000604482015290519081900360640190fd5b610d90848461172e565b9050610da5600386018263ffffffff610aa216565b6000818152600586016020908152604090912083519091610dcd916002840191860190611bdb565b5084815560018101849055600085815260028088016020526040808320878452922090610e029083018563ffffffff610aa216565b610e12818563ffffffff610aa216565b505050949350505050565b6000610e358484846004811115610e3057fe5b611796565b90505b9392505050565b600081815260026020908152604080832086845260059283905292819020815183815260c0810190925291606091908160200160208202803883390190505090505b806000815181101515610e9057fe5b9060200190602002015115156115ff5760606000610ead88611830565b909250905060008111610edf576001836000815181101515610ecb57fe5b9115156020928302909101909101526115f8565b8251600090819085906001908110610ef357fe5b91151560209283029091019091015260005b8281108015610f2a5750846001815181101515610f1e57fe5b90602001906020020151155b15611096578381815181101515610f3d57fe5b602090810290910181015160008181526002808b019093526040812088519295509290918891908110610f6c57fe5b91151560209283029091019091015260005b610f8782610a9b565b81108015610fab5750866002815181101515610f9f57fe5b90602001906020020151155b1561105457600060058a0181610fc7858563ffffffff610bce16565b81526020810191909152604001600020905060018154610fee908b9063ffffffff6118e216565b6004811115610ff957fe5b14158015611025575060048154611017908b9063ffffffff6118e216565b600481111561102257fe5b14155b1561104b57600188600281518110151561103b57fe5b9115156020928302909101909101525b50600101610f7e565b5085600281518110151561106457fe5b906020019060200201511586600181518110151561107e57fe5b91151560209283029091019091015250600101610f05565b508360018151811015156110a657fe5b9060200190602002015115156111a1576000805b8381101561119e57600088600201600087848151811015156110d857fe5b6020908102909101810151825281019190915260400160009081209150805b61110383600201610a9b565b81101561116d57600060058c0181611124600287018563ffffffff610bce16565b81526020810191909152604001600020905060018082015461114d908d9063ffffffff6118e216565b600481111561115857fe5b14611164576001909201915b506001016110f7565b508381111561119457809350868381518110151561118757fe5b9060200190602002015194505b50506001016110ba565b50505b60048054600181019091556000818152600560205260408120905b6111c5886118f9565b811015611200576000806111df8a8463ffffffff61190416565b90925090506111f584838363ffffffff610e1d16565b5050506001016111bc565b506112138184600063ffffffff610e1d16565b5060008381526002890160205260408120905b61123282600201610a9b565b81101561128757600060058b0181611253600286018563ffffffff610bce16565b8152602081019190915260400160002060018181015491925061127d91869163ffffffff610e1d16565b5050600101611226565b50600087600381518110151561129957fe5b91151560209283029091019091015260005b6112b482610a9b565b811080156112d857508760038151811015156112cc57fe5b90602001906020020151155b1561148857600060058b01816112f4858563ffffffff610bce16565b8152602081019190915260400160002090506002815461131b90869063ffffffff6118e216565b600481111561132657fe5b148061134f57506003815461134290869063ffffffff6118e216565b600481111561134d57fe5b145b1561147f578054611369908590600463ffffffff610e1d16565b508054600090815260028c016020526040902089516001908b90600390811061138e57fe5b91151560209283029091019091015260005b6113a982610a9b565b811080156113cc57508a60038151811015156113c157fe5b906020019060200201515b1561144a57600060058e01816113e8858563ffffffff610bce16565b8152602081019190915260400160002090506003815461140f90899063ffffffff6118e216565b600481111561141a57fe5b14156114415760008c600381518110151561143157fe5b9115156020928302909101909101525b506001016113a0565b5089600381518110151561145a57fe5b906020019060200201511561147d5761147b8b88600263ffffffff610e1d16565b505b505b506001016112ab565b5086600381518110151561149857fe5b9060200190602002015115156115f3576114b3838c8c610e3f565b60008760048151811015156114c457fe5b91151560209283029091019091015260005b6114df82610a9b565b8110801561150357508760048151811015156114f757fe5b90602001906020020151155b156115bc57600060058b018161151f858563ffffffff610bce16565b81526020810191909152604001600020905060028154611546908c9063ffffffff6118e216565b600481111561155157fe5b148061157a57506003815461156d908c9063ffffffff6118e216565b600481111561157857fe5b145b156115b3576115918a87600463ffffffff610e1d16565b5060018960048151811015156115a357fe5b9115156020928302909101909101525b506001016114d6565b508660048151811015156115cc57fe5b9060200190602002015115156115f3576000838152600560205260409020929b509196508a915b505050505b5050610e81565b600061160a87611932565b915050600081116116a25760606000611622896119dd565b60008a81526007602052604081209294509092505b8281101561169d57611667848281518110151561165057fe5b60209081029091010151839063ffffffff610bf516565b151561169557611695848281518110151561167e57fe5b60209081029091010151839063ffffffff610aa216565b600101611637565b505050505b50505050505050565b6116bb828263ffffffff610bf516565b1515611711576040805160e560020a62461bcd02815260206004820152600f60248201527f556e6b6e6f776e206e6f646549642e0000000000000000000000000000000000604482015290519081900360640190fd5b600090815260029091016020526040902060040180546001019055565b60029082016001810102040190565b600061174883610a9b565b600101905061175d838263ffffffff610aa216565b6000818152600284016020908152604090912083519091611785916005840191860190611bdb565b506004018054600101905592915050565b60008281526001840160205260408120548015156117fd575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610e38565b845483908690600019840190811061181157fe5b9060005260206000209060020201600101819055506000915050610e38565b60008181526005602052604081206060919061184b816118f9565b604051908082528060200260200182016040528015611874578160200160208202803883390190505b50925060009150815b83518110156118db57600080611899848463ffffffff61190416565b909250905060038160048111156118ac57fe5b14156118d15785516001860195839188919081106118c657fe5b602090810290910101525b505060010161187d565b5050915091565b60006118ee8383611a88565b6004811115610e3857fe5b6000610bef82611b1d565b60008080806119138686611b21565b90925090508181600481111561192557fe5b9350935050509250929050565b60008181526005602052604081206060919061194d816118f9565b604051908082528060200260200182016040528015611976578160200160208202803883390190505b50925060009150815b83518110156118db5760008061199b848463ffffffff61190416565b909250905060048160048111156119ae57fe5b14156119d35785516001860195839188919081106119c857fe5b602090810290910101525b505060010161197f565b6000818152600560205260408120606091906119f8816118f9565b604051908082528060200260200182016040528015611a21578160200160208202803883390190505b50925060009150815b83518110156118db57600080611a46848463ffffffff61190416565b90925090506000816004811115611a5957fe5b1415611a7e578551600186019583918891908110611a7357fe5b602090810290910101525b5050600101611a2a565b6000818152600183016020526040812054801515611af0576040805160e560020a62461bcd02815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b65790000604482015290519081900360640190fd5b835484906000198301908110611b0257fe5b90600052602060002090600202016001015491505092915050565b5490565b815460009081908310611ba4576040805160e560020a62461bcd02815260206004820152602260248201527f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60448201527f6473000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b8354600090859085908110611bb557fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c1c57805160ff1916838001178555611c49565b82800160010185558215611c49579182015b82811115611c49578251825591602001919060010190611c2e565b50611c55929150611c59565b5090565b611c7391905b80821115611c555760008155600101611c5f565b9056fee90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0a165627a7a723058204a65f7a8e908ddb24d08f99514eb832df735804c234a3d162434fb099aec71440029",
  "sourceMap": "119:14693:0:-;;;715:75;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;746:37:0;:9;779:1;746:16;;;;;;:37;:::i;:::-;119:14693;;1457:324:3;1531:10;;;1523:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1618:17;1625:4;1631:3;1618:6;;;;:17;:::i;:::-;1617:18;1596:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1773:1;1748:12;;;27:10:-1;;23:18;;;45:23;;-1:-1;1748:22:3;;;;;;;;;;;;1724:21;;;;;;;;;;;:50;1457:324::o;2381:222::-;2499:12;;;:19;2475:4;;2499:24;2495:42;;;-1:-1:-1;2532:5:3;2525:12;;2495:42;2567:16;:21;;;;;;;;;;;2554:12;;;:35;;2593:3;;2567:21;2554:35;;;;;;;;;;;;;;:42;2547:49;;2381:222;;;;;:::o;119:14693:0:-;;;;;;;",
  "deployedSourceMap": "119:14693:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1742:1081;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1742:1081:0;;;:::i;:::-;;;;;;;;;;;;;;;;4154:959;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4154:959:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4154:959:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4154:959:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4154:959:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4154:959:0;;;;;;;;;;;;;;;;;;;;;5119:768;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5119:768:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5119:768:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5119:768:0;;;;;;;;;;;;;;;;;1465:271;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1465:271:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1465:271:0;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1465:271:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1465:271:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1465:271:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1465:271:0;;-1:-1:-1;1465:271:0;;-1:-1:-1;;;;;1465:271:0:i;1160:299::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1160:299:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1160:299:0;;:::i;:::-;;2829:1319;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2829:1319:0;;;:::i;796:358::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;796:358:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;796:358:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;796:358:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;796:358:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;796:358:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;796:358:0;;-1:-1:-1;796:358:0;;-1:-1:-1;;;;;796:358:0:i;1742:1081::-;1789:15;1826:17;:9;:15;:17::i;:::-;1846:1;1826:21;;-1:-1:-1;1857:34:0;:9;1826:21;1857:34;:16;:34;:::i;:::-;1936:6;:9;;1902:31;1988:15;;;1936:9;1988:15;;-1:-1:-1;;;;;;;;;;;1936:9:0;2014:803;2038:20;:3;:12;;:18;:20::i;:::-;2034:1;:24;2014:803;;;2079:14;2104:26;:12;;;2128:1;2104:26;:23;:26;:::i;:::-;2145:31;2179:17;;;:9;;;:17;;;;;;;;2252:11;;2242:22;;:9;;;:22;;;;;;2096:35;2319:11;;;2309:22;;;;2381:7;;;;;2371;;;;2096:35;;-1:-1:-1;2179:17:0;;2309:22;;-1:-1:-1;2369:20:0;;;2404:403;;2507:11;;2480:40;;:2;;:40;:18;:40;:::i;:::-;2479:41;2475:120;;;2564:11;;2544:32;;:2;;:32;:19;:32;:::i;:::-;2644:11;;;;2617:40;;:2;;:40;:18;:40;:::i;:::-;2616:41;2612:120;;;2701:11;;;;2681:32;;:2;;:32;:19;:32;:::i;:::-;2763:11;;2776;;;;2749:43;;;;;;;;;2763:11;2749:43;;;;:2;;2763:11;;2749:43;:13;:43;:::i;:::-;;2404:403;-1:-1:-1;;2060:3:0;;;;;-1:-1:-1;2014:803:0;;-1:-1:-1;;2014:803:0;;;1742:1081;;;:::o;4154:959::-;4378:33;4414:15;;;:6;:15;;;;;4247:22;;;;;;4460;4414:15;4460:20;:22::i;:::-;4439:43;;4492:18;4513:22;:5;:14;;:20;:22::i;:::-;4492:43;;4568:10;4554:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4554:25:0;;4546:33;;4617:10;4603:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4603:25:0;;4589:39;;4666:10;4652:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4652:25:0;-1:-1:-1;4638:39:0;-1:-1:-1;4693:9:0;4688:126;4712:22;:5;:20;:22::i;:::-;4708:1;:26;4688:126;;;4774:28;:5;4800:1;4774:28;:25;:28;:::i;:::-;4755:8;;:5;;4761:1;;4755:8;;;;;;;;;;;;;;:48;4736:3;;4688:126;;;-1:-1:-1;4829:9:0;4824:283;4848:22;:5;:14;;:20;:22::i;:::-;4844:1;:26;4824:283;;;4891:14;4916:28;:14;;;4942:1;4916:28;:25;:28;:::i;:::-;4959:31;4993:19;;;:11;;;:19;;;;;5043:11;;5026:14;;4908:37;;-1:-1:-1;4993:19:0;;5026:11;;5038:1;;5026:14;;;;;;;;;;;;;;:28;5085:11;;;;5068:14;;:11;;5080:1;;5068:14;;;;;;;;;;;;;;:28;-1:-1:-1;;4872:3:0;;4824:283;;;;4154:959;;;;;;;;:::o;5119:768::-;5245:33;5281:15;;;:6;:15;;;;;;;;5379:17;;5351:55;;:14;:55;;;;;5449:7;;5444:13;;:4;:13;;;;;;5208:21;;5281:15;;5351:55;5467:142;5491:22;:5;:20;:22::i;:::-;5487:1;:26;5467:142;;;5534:64;5550:28;:5;5576:1;5550:28;:25;:28;:::i;:::-;5534:3;;5581:16;5534:64;:7;:64;:::i;:::-;-1:-1:-1;5515:3:0;;5467:142;;;-1:-1:-1;5643:7:0;:9;;;;;;;;;5654:17;:19;;;;;;;5618:65;;5675:7;5618:24;:65::i;:::-;5715:11;:3;:9;:11::i;:::-;5701:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5701:26:0;-1:-1:-1;5694:33:0;-1:-1:-1;5742:9:0;5737:103;5761:11;:3;:9;:11::i;:::-;5757:1;:15;5737:103;;;5811:17;:3;5826:1;5811:17;:14;:17;:::i;:::-;5793:7;;:4;;5798:1;;5793:7;;;;;;;;;;;;;;:36;5774:3;;5737:103;;;;5855:25;5875:4;5855:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5855:25:0;;;;;;;;;;;;;;;;;5119:768;;;;;;:::o;1465:271::-;1662:1;1593:14;1655:9;;;:6;:9;;-1:-1:-1;;;;;;;;;;;1683:46:0;1655:9;1700:8;1710;1720;1683:46;:16;:46;:::i;:::-;1674:55;1465:271;-1:-1:-1;;;;;1465:271:0:o;1160:299::-;1260:1;1217:33;1253:9;:6;:9;;-1:-1:-1;;;;;;;;;;;1272:27:0;1253:9;1293:5;1272:27;:20;:27;:::i;:::-;1390:10;1310:48;1361:49;;;:15;:49;;;;;1420:32;1361:49;1445:5;1420:32;:16;:32;:::i;:::-;1160:299;;;:::o;2829:1319::-;2876:15;2913:17;:9;:15;:17::i;:::-;2933:1;2913:21;;-1:-1:-1;2944:34:0;:9;2913:21;2944:34;:16;:34;:::i;:::-;3023:6;:9;;2989:31;3075:15;;;3023:9;3075:15;;-1:-1:-1;;;;;;;;;;;3023:9:0;3101:1041;3125:20;:3;:12;;:18;:20::i;:::-;3121:1;:24;3101:1041;;;3166:14;3191:26;:12;;;3215:1;3191:26;:23;:26;:::i;:::-;3232:31;3266:17;;;:9;;;:17;;;;;;;;3339:11;;3329:22;;;:9;;;:22;;;;;;3183:35;3406:11;;;3396:22;;;;;;3468:7;;;;;3458;;;;3183:35;;-1:-1:-1;3266:17:0;;3329:22;;3396;;3458:17;;;;3456:20;;3232:31;;;;3559:53;;3406:11;3559:27;:53::i;:::-;3532:94;;;;;;;;;;;3491:135;;3640:12;3676:1;3655:11;:18;;;:22;:48;;;;;3702:1;3681:11;:18;;;:22;3655:48;3640:63;;3722:16;:27;;;;3742:7;3722:27;3718:414;;;3832:11;;3805:40;;:2;;:40;:18;:40;:::i;:::-;3804:41;3800:120;;;3889:11;;3869:32;;:2;;:32;:19;:32;:::i;:::-;3969:11;;;;3942:40;;:2;;:40;:18;:40;:::i;:::-;3941:41;3937:120;;;4026:11;;;;4006:32;;:2;;:32;:19;:32;:::i;:::-;4088:11;;4101;;;;4074:43;;;;;;;;;4088:11;4074:43;;;;:2;;4088:11;;4074:43;:13;:43;:::i;:::-;;3718:414;-1:-1:-1;;3147:3:0;;;;;-1:-1:-1;3101:1041:0;;-1:-1:-1;;;;3101:1041:0;796:358;948:1;876:13;941:9;;;:6;:9;;-1:-1:-1;;;;;;;;;;;968:26:0;941:9;985:8;968:26;:16;:26;:::i;:::-;1085:10;1005:48;1056:49;;;:15;:49;;;;;960:34;;-1:-1:-1;1115:32:0;1056:49;960:34;1115:32;:16;:32;:::i;:::-;796:358;;;;;:::o;2265:110:3:-;2348:12;;:19;;2265:110::o;1457:324::-;1531:10;;;1523:63;;;;;-1:-1:-1;;;;;1523:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1618:17;1625:4;1631:3;1618:6;:17::i;:::-;1617:18;1596:118;;;;;-1:-1:-1;;;;;1596:118:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1773:1;1748:12;;;27:10:-1;;23:18;;;45:23;;-1:-1;1748:22:3;;;;;;;;;;;;1724:21;;;;;;;;;;;:50;1457:324::o;2609:156::-;2709:7;2739:4;:12;;2752:5;2739:19;;;;;;;;;;;;;;;;;;2732:26;;2609:156;;;;;:::o;2381:222::-;2499:12;;;:19;2475:4;;2499:24;2495:42;;;-1:-1:-1;2532:5:3;2525:12;;2495:42;2567:16;:21;;;;;;;;;;;2554:12;;;:35;;2593:3;;2567:21;2554:35;;;;;;;;;;;;;;:42;2547:49;;2381:222;;;;:::o;986:197:1:-;1073:34;:1;1099:6;1073:34;:17;:34;:::i;:::-;1072:35;1064:68;;;;;-1:-1:-1;;;;;1064:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1142:34;:1;1168:6;1142:34;:17;:34;:::i;:::-;986:197;;:::o;1406:746::-;1559:14;1593:36;:1;1619:8;1593:36;:17;:36;:::i;:::-;1585:66;;;;;;;-1:-1:-1;;;;;1585:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1669:36;:1;1695:8;1669:36;:17;:36;:::i;:::-;1661:66;;;;;;;-1:-1:-1;;;;;1661:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1747:33;1761:8;1771;1747:13;:33::i;:::-;1738:42;-1:-1:-1;1791:34:1;:10;;;1738:42;1791:34;:17;:34;:::i;:::-;1836:17;1856:15;;;:7;;;:15;;;;;;;;1881:24;;1856:15;;1881:24;;:13;;;;:24;;;;:::i;:::-;-1:-1:-1;1915:22:1;;;1947:11;;;:22;;;1915:11;1997:17;;;:7;;;;:17;;;;;;2041;;;;;;2068:34;;:10;;2094:6;2068:34;:17;:34;:::i;:::-;2112:33;:1;2137:6;2112:33;:16;:33;:::i;:::-;1406:746;;;;;;;;;:::o;7258:194:2:-;7367:4;7390:55;7395:3;7415;7437:5;7429:14;;;;;;;;7390:4;:55::i;:::-;7383:62;;7258:194;;;;;;:::o;5893:7370:0:-;6032:33;6068:15;;;:6;:15;;;;;;;;6121:11;;;:4;:11;;;;;;;;6164:13;;;;;;;;;;;6121:11;6142:19;;6164:13;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;6164:13:0;6142:35;;6236:6343;6244:5;6250:1;6244:8;;;;;;;;;;;;;;;;;;6243:9;6236:6343;;;6269:23;6294:17;6315:16;6325:5;6315:9;:16::i;:::-;6268:63;;-1:-1:-1;6268:63:0;-1:-1:-1;6362:1:0;6349:14;;6345:6224;;6394:4;6383:5;6389:1;6383:8;;;;;;;;;;:15;;;:8;;;;;;;;;;:15;6345:6224;;;6563:8;;6437:9;;;;6563:5;;6569:1;;6563:8;;;;;;:16;;;:8;;;;;;;;;;:16;6602:9;6597:897;6621:9;6617:1;:13;:26;;;;;6635:5;6641:1;6635:8;;;;;;;;;;;;;;;;;;6634:9;6617:26;6597:897;;;6676:6;6683:1;6676:9;;;;;;;;;;;;;;;;;;;;6707:33;6743:14;;;:11;;;;:14;;;;;;6779:8;;6676:9;;-1:-1:-1;6743:14:0;6707:33;;6779:5;;6743:11;6779:8;;;;;;:16;;;:8;;;;;;;;;;:16;6847:9;6817:617;6890:22;:6;:20;:22::i;:::-;6886:1;:26;:39;;;;;6917:5;6923:1;6917:8;;;;;;;;;;;;;;;;;;6916:9;6886:39;6817:617;;;7003:31;7037:11;;;7003:31;7086:28;:6;7112:1;7086:28;:25;:28;:::i;:::-;7037:104;;;;;;;;;;;-1:-1:-1;7037:104:0;;-1:-1:-1;7078:37:0;7208:11;;7200:20;;:3;;:20;:7;:20;:::i;:::-;:38;;;;;;;;;;:113;;;;-1:-1:-1;7294:19:0;7278:11;;7270:20;;:3;;:20;:7;:20;:::i;:::-;:43;;;;;;;;;;7200:113;7167:245;;;7381:4;7370:5;7376:1;7370:8;;;;;;;;;;:15;;;:8;;;;;;;;;;:15;7167:245;-1:-1:-1;6951:3:0;;6817:617;;;;7467:5;7473:1;7467:8;;;;;;;;;;;;;;;;;;7466:9;7455:5;7461:1;7455:8;;;;;;;;;;:20;;;:8;;;;;;;;;;:20;-1:-1:-1;6645:3:0;;6597:897;;;;7707:5;7713:1;7707:8;;;;;;;;;;;;;;;;;;7706:9;7702:937;;;7739:11;;7776:845;7800:9;7796:1;:13;7776:845;;;7842:33;7878:5;:11;;:76;7919:6;7926:1;7919:9;;;;;;;;;;;;;;;;;;;;7878:76;;;;;;;;;;-1:-1:-1;7878:76:0;;;;-1:-1:-1;;8028:408:0;8052:23;:6;:15;;:21;:23::i;:::-;8048:1;:27;8028:408;;;8112:31;8146:11;;;8112:31;8199:29;:15;;;8226:1;8199:29;:26;:29;:::i;:::-;8146:113;;;;;;;;;;;-1:-1:-1;8146:113:0;;-1:-1:-1;8191:38:0;8301:11;;;;8293:20;;:3;;:20;:7;:20;:::i;:::-;:38;;;;;;;;;8289:121;;8367:12;;;;;8289:121;-1:-1:-1;8077:3:0;;8028:408;;;;8478:3;8465:10;:16;8461:138;;;8519:10;8513:16;;8563:6;8570:1;8563:9;;;;;;;;;;;;;;;;;;8559:13;;8461:138;-1:-1:-1;;7811:3:0;;7776:845;;;;7702:937;;8708:7;:9;;;;;;;;8691:14;8764:12;;;:4;:12;;;;;;8794:175;8818:12;:3;:10;:12::i;:::-;8814:1;:16;8794:175;;;8860:11;;8896:9;:3;8903:1;8896:9;:6;:9;:::i;:::-;8859:46;;-1:-1:-1;8859:46:0;-1:-1:-1;8927:23:0;:4;8859:46;;8927:23;:8;:23;:::i;:::-;-1:-1:-1;;;8832:3:0;;8794:175;;;-1:-1:-1;9024:26:0;:4;9033:1;9036:13;9024:26;:8;:26;:::i;:::-;-1:-1:-1;9129:33:0;9165:14;;;:11;;;:14;;;;;;9197:285;9221:23;:6;:15;;:21;:23::i;:::-;9217:1;:27;9197:285;;;9273:31;9307:11;;;9273:31;9352:29;:15;;;9379:1;9352:29;:26;:29;:::i;:::-;9307:97;;;;;;;;;;;-1:-1:-1;9307:97:0;9344:38;9435:11;;;;9307:97;;-1:-1:-1;9426:37:0;;:4;;:37;:8;:37;:::i;:::-;-1:-1:-1;;9246:3:0;;9197:285;;;;9553:5;9542;9548:1;9542:8;;;;;;;;;;:16;;;:8;;;;;;;;;;:16;9602:9;9576:1678;9641:22;:6;:20;:22::i;:::-;9637:1;:26;:39;;;;;9668:5;9674:1;9668:8;;;;;;;;;;;;;;;;;;9667:9;9637:39;9576:1678;;;9742:31;9776:11;;;9742:31;9821:28;:6;9847:1;9821:28;:25;:28;:::i;:::-;9776:96;;;;;;;;;;;-1:-1:-1;9776:96:0;;-1:-1:-1;10035:16:0;10019:11;;10010:21;;:4;;:21;:8;:21;:::i;:::-;:41;;;;;;;;;:110;;;-1:-1:-1;10104:16:0;10088:11;;10079:21;;:4;;:21;:8;:21;:::i;:::-;:41;;;;;;;;;10010:110;9981:1255;;;10178:11;;10169:42;;:4;;10191:19;10169:42;:8;:42;:::i;:::-;-1:-1:-1;10405:11:0;;10328:33;10364:78;;;:11;;;:78;;;;;10468:8;;10479:4;;10468:5;;10474:1;;10468:8;;;;;;:15;;;:8;;;;;;;;;;:15;10543:9;10509:537;10590:22;:6;:20;:22::i;:::-;10586:1;:26;:38;;;;;10616:5;10622:1;10616:8;;;;;;;;;;;;;;;;;;10586:38;10509:537;;;10714:32;10749:11;;;10714:32;10802:28;:6;10828:1;10802:28;:25;:28;:::i;:::-;10749:112;;;;;;;;;;;-1:-1:-1;10749:112:0;;-1:-1:-1;10921:16:0;10904:12;;10895:22;;:4;;:22;:8;:22;:::i;:::-;:42;;;;;;;;;10891:129;;;10984:5;10973;10979:1;10973:8;;;;;;;;;;:16;;;:8;;;;;;;;;;:16;10891:129;-1:-1:-1;10654:3:0;;10509:537;;;;11075:5;11081:1;11075:8;;;;;;;;;;;;;;;;;;11071:143;;;11115:28;:3;11123:1;11126:16;11115:28;:7;:28;:::i;:::-;;11071:143;9981:1255;;-1:-1:-1;9698:3:0;;9576:1678;;;;11276:5;11282:1;11276:8;;;;;;;;;;;;;;;;;;11275:9;11271:1284;;;11372:58;11397:6;11405:15;11422:7;11372:24;:58::i;:::-;11554:5;11543;11549:1;11543:8;;;;;;;;;;:16;;;:8;;;;;;;;;;:16;11611:9;11581:768;11654:22;:6;:20;:22::i;:::-;11650:1;:26;:39;;;;;11681:5;11687:1;11681:8;;;;;;;;;;;;;;;;;;11680:9;11650:39;11581:768;;;11767:31;11801:11;;;11767:31;11850:28;:6;11876:1;11850:28;:25;:28;:::i;:::-;11801:104;;;;;;;;;;;-1:-1:-1;11801:104:0;;-1:-1:-1;12079:16:0;12063:11;;12055:20;;:3;;:20;:7;:20;:::i;:::-;:40;;;;;;;;;:112;;;-1:-1:-1;12151:16:0;12135:11;;12127:20;;:3;;:20;:7;:20;:::i;:::-;:40;;;;;;;;;12055:112;12022:305;;;12224:31;:3;12232:1;12235:19;12224:31;:7;:31;:::i;:::-;;12296:4;12285:5;12291:1;12285:8;;;;;;;;;;:15;;;:8;;;;;;;;;;:15;12022:305;-1:-1:-1;11715:3:0;;11581:768;;;;12420:5;12426:1;12420:8;;;;;;;;;;;;;;;;;;12419:9;12415:122;;;12462:12;;;;:4;:12;;;;;12467:6;;-1:-1:-1;12462:12:0;;-1:-1:-1;12467:6:0;;12415:122;6345:6224;;;;;6236:6343;;;;;12637:24;12665:18;12677:5;12665:11;:18::i;:::-;12634:49;-1:-1:-1;;12717:1:0;12697:21;;12693:564;;12775:25;12802:19;12825:13;12832:5;12825:6;:13::i;:::-;12941:42;12986:61;;;:14;:61;;;;;12774:64;;-1:-1:-1;12774:64:0;;-1:-1:-1;13061:186:0;13085:11;13081:1;:15;13061:186;;;13126:32;13145:8;13154:1;13145:11;;;;;;;;;;;;;;;;;;;13126:3;;:32;:10;:32;:::i;:::-;13125:33;13121:112;;;13182:32;13201:8;13210:1;13201:11;;;;;;;;;;;;;;;;;;;13182:3;;:32;:10;:32;:::i;:::-;13098:3;;13061:186;;;;12693:564;;;;5893:7370;;;;;;;:::o;1189:211:1:-;1273:34;:1;1299:6;1273:34;:17;:34;:::i;:::-;1265:62;;;;;;;-1:-1:-1;;;;;1265:62:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1338:16;1357:15;;;:7;;;;:15;;;;;1382:9;;:11;;;;;;1189:211::o;2215:160::-;2363:1;2349:5;;;2357:1;2349:9;;2338:21;2337:27;:31;;2215:160::o;673:307::-;768:14;807:18;:1;:16;:18::i;:::-;828:1;807:22;;-1:-1:-1;840:34:1;:1;807:22;840:34;:17;:34;:::i;:::-;885:16;904:15;;;:7;;;:15;;;;;;;;929:23;;904:15;;929:23;;:12;;;;:23;;;;:::i;:::-;-1:-1:-1;962:9:1;;:11;;;;;;673:307;;-1:-1:-1;;673:307:1:o;1823:718:2:-;1929:4;2062:17;;;:12;;;:17;;;;;;2094:13;;2090:445;;;-1:-1:-1;;2190:36:2;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;2172:12:2;:55;;;;;;;;;;;;;;;;;;;;;;;;2382:19;;2362:17;;;:12;;;:17;;;;;;;:39;2415:11;;2090:445;2457:26;;2493:5;;2457:3;;-1:-1:-1;;2470:12:2;;;2457:26;;;;;;;;;;;;;;;;:33;;:41;;;;2519:5;2512:12;;;;;13269:510:0;13378:21;13443:11;;;:4;:11;;;;;13349:27;;13378:21;13491:12;13443:11;13491:10;:12::i;:::-;13477:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;13477:27:0;-1:-1:-1;13464:40:0;-1:-1:-1;13530:1:0;;-1:-1:-1;13530:1:0;13541:232;13565:10;:17;13561:1;:21;13541:232;;;13604:11;;13640:9;:3;13647:1;13640:9;:6;:9;:::i;:::-;13603:46;;-1:-1:-1;13603:46:0;-1:-1:-1;13679:16:0;13667:8;:28;;;;;;;;;13663:100;;;13715:27;;13726:15;;;;13745:3;;13715:10;;13726:15;13715:27;;;;;;;;;;;;;;:33;13663:100;-1:-1:-1;;13584:3:0;;13541:232;;;;13269:510;;;;:::o;9342:176:2:-;9437:5;9479:30;9484:3;9504;9479:4;:30::i;:::-;9465:46;;;;;;;8074:113;8135:7;8161:19;8169:3;8161:7;:19::i;8524:240::-;8620:7;;;;8681:22;8685:3;8697:5;8681:3;:22::i;:::-;8650:53;;-1:-1:-1;8650:53:2;-1:-1:-1;8650:53:2;;8735:21;;;;;;;;8713:44;;;;;;8524:240;;;;;:::o;13785:515:0:-;13896:21;13961:11;;;:4;:11;;;;;13867:27;;13896:21;14009:12;13961:11;14009:10;:12::i;:::-;13995:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;13995:27:0;-1:-1:-1;13982:40:0;-1:-1:-1;14048:1:0;;-1:-1:-1;14048:1:0;14059:235;14083:10;:17;14079:1;:21;14059:235;;;14122:11;;14158:9;:3;14165:1;14158:9;:6;:9;:::i;:::-;14121:46;;-1:-1:-1;14121:46:0;-1:-1:-1;14197:19:0;14185:8;:31;;;;;;;;;14181:103;;;14236:27;;14247:15;;;;14266:3;;14236:10;;14247:15;14236:27;;;;;;;;;;;;;;:33;14181:103;-1:-1:-1;;14102:3:0;;14059:235;;14306:504;14412:21;14477:11;;;:4;:11;;;;;14383:27;;14412:21;14525:12;14477:11;14525:10;:12::i;:::-;14511:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;14511:27:0;-1:-1:-1;14498:40:0;-1:-1:-1;14564:1:0;;-1:-1:-1;14564:1:0;14575:229;14599:10;:17;14595:1;:21;14575:229;;;14638:11;;14674:9;:3;14681:1;14674:9;:6;:9;:::i;:::-;14637:46;;-1:-1:-1;14637:46:0;-1:-1:-1;14713:13:0;14701:8;:25;;;;;;;;;14697:97;;;14746:27;;14757:15;;;;14776:3;;14746:10;;14757:15;14746:27;;;;;;;;;;;;;;:33;14697:97;-1:-1:-1;;14618:3:0;;14575:229;;5981:307:2;6047:7;6085:17;;;:12;;;:17;;;;;;6120:13;;;6112:56;;;;;-1:-1:-1;;;;;6112:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;6221:26;;:3;;-1:-1:-1;;6234:12:2;;;6221:26;;;;;;;;;;;;;;;;:33;;;6214:40;;;5981:307;;;;:::o;4558:108::-;4640:19;;4558:108::o;5019:336::-;5163:19;;5110:7;;;;5163:27;-1:-1:-1;5142:108:2;;;;;-1:-1:-1;;;;;5142:108:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5286:19;;5261:22;;5286:3;;5299:5;;5286:19;;;;;;;;;;;;;;;;5261:44;;5323:5;:10;;;5335:5;:12;;;5315:33;;;;;5019:336;;;;;:::o;119:14693:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;119:14693:0;;;-1:-1:-1;119:14693:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.5.1;\n\nimport \"./DirectedGraph.sol\";\nimport \"./EnumerableMap.sol\";\n\ncontract Argumentation {\n    using DirectedGraph for DirectedGraph.Graph;\n    using HitchensUnorderedKeySetLib for HitchensUnorderedKeySetLib.Set;\n    using EMap for EMap.LabelMap;\n\n    HitchensUnorderedKeySetLib.Set graphsIds;\n    mapping(uint256 => DirectedGraph.Graph) graphs;\n\n    // Arguments Sets\n    mapping(address => HitchensUnorderedKeySetLib.Set) agentsArguments;\n\n    uint256 labsNum;\n    mapping(uint256 => EMap.LabelMap) labs;\n    uint256 prefExtensionsNum;\n    mapping(uint256 => HitchensUnorderedKeySetLib.Set) prefExtensions;\n\n    event PreferredExtensions(uint256[] args);\n\n    constructor() public {\n        graphsIds.insert(bytes32(uint256(1)));\n    }\n\n    function insertArgument(string memory metadata)\n        public\n        returns (uint256 argId)\n    {\n        DirectedGraph.Graph storage graph = graphs[1];\n        argId = graph.insertNode(metadata);\n\n        HitchensUnorderedKeySetLib.Set storage agentArgs = agentsArguments[\n            msg.sender\n        ];\n        agentArgs.insert(bytes32(argId));\n    }\n\n    function supportArgument(uint256 argId) public {\n        DirectedGraph.Graph storage graph = graphs[1];\n        graph.incrementValue(argId);\n\n        HitchensUnorderedKeySetLib.Set storage agentArgs = agentsArguments[\n            msg.sender\n        ];\n        agentArgs.insert(bytes32(argId));\n    }\n\n    function insertAttack(\n        uint256 sourceId,\n        uint256 targetId,\n        string memory metadata\n    ) public returns (uint256 edgeId) {\n        DirectedGraph.Graph storage graph = graphs[1];\n        edgeId = graph.insertEdge(sourceId, targetId, metadata);\n    }\n\n    function pafReductionToAfPr1() public returns (uint256 graphId) {\n        graphId = graphsIds.count() + 1;\n        graphsIds.insert(bytes32(graphId));\n\n        DirectedGraph.Graph storage paf = graphs[1];\n        DirectedGraph.Graph storage af = graphs[graphId];\n\n        for (uint256 i = 0; i < paf.edgesIds.count(); i++) {\n            uint256 edgeId = uint256(paf.edgesIds.keyAtIndex(i));\n            DirectedGraph.Edge storage edge = paf.edges[edgeId];\n\n            DirectedGraph.Node storage s = paf.nodes[edge.source];\n            DirectedGraph.Node storage t = paf.nodes[edge.target];\n            bool notBpreferredToA = !(t.value > s.value);\n\n            if (notBpreferredToA) {\n                //insert to af\n                if (!af.nodesIds.exists(bytes32(edge.source))) {\n                    af.insertNodeWithId(edge.source);\n                }\n                if (!af.nodesIds.exists(bytes32(edge.target))) {\n                    af.insertNodeWithId(edge.target);\n                }\n                af.insertEdge(edge.source, edge.target, \"\");\n            }\n        }\n    }\n\n    function pafReductionToAfPr3() public returns (uint256 graphId) {\n        graphId = graphsIds.count() + 1;\n        graphsIds.insert(bytes32(graphId));\n\n        DirectedGraph.Graph storage paf = graphs[1];\n        DirectedGraph.Graph storage af = graphs[graphId];\n\n        for (uint256 i = 0; i < paf.edgesIds.count(); i++) {\n            uint256 edgeId = uint256(paf.edgesIds.keyAtIndex(i));\n            DirectedGraph.Edge storage edge = paf.edges[edgeId];\n\n            DirectedGraph.Node storage s = paf.nodes[edge.source];\n            DirectedGraph.Node storage t = paf.nodes[edge.target];\n            bool notBpreferredToA = !(t.value > s.value);\n\n            DirectedGraph.Edge storage edgeReverse = paf.edges[\n                DirectedGraph.cantorPairing(edge.target, edge.source)\n            ];\n            bool notBtoA = edgeReverse.source > 0 && edgeReverse.target > 0;\n\n            if (notBpreferredToA || notBtoA) {\n                //insert to af\n                if (!af.nodesIds.exists(bytes32(edge.source))) {\n                    af.insertNodeWithId(edge.source);\n                }\n                if (!af.nodesIds.exists(bytes32(edge.target))) {\n                    af.insertNodeWithId(edge.target);\n                }\n                af.insertEdge(edge.source, edge.target, \"\");\n            }\n        }\n    }\n\n    function getGraph(uint256 graphId)\n        public\n        view\n        returns (\n            uint256[] memory nodes,\n            uint256[] memory edgesSource,\n            uint256[] memory edgesTarget\n        )\n    {\n        DirectedGraph.Graph storage graph = graphs[graphId];\n        uint256 nodesCount = graph.nodesIds.count();\n        uint256 edgesCount = graph.edgesIds.count();\n\n        nodes = new uint256[](nodesCount);\n        edgesSource = new uint256[](edgesCount);\n        edgesTarget = new uint256[](edgesCount);\n\n        for (uint256 i = 0; i < graph.nodesIds.count(); i++) {\n            nodes[i] = uint256(graph.nodesIds.keyAtIndex(i));\n        }\n\n        for (uint256 i = 0; i < graph.edgesIds.count(); i++) {\n            uint256 edgeId = uint256(graph.edgesIds.keyAtIndex(i));\n            DirectedGraph.Edge storage edge = graph.edges[edgeId];\n            edgesSource[i] = edge.source;\n            edgesTarget[i] = edge.target;\n        }\n    }\n\n    function enumeratingPreferredExtensions(uint256 graphId)\n        public\n        returns (uint256[] memory args)\n    {\n        DirectedGraph.Graph storage graph = graphs[graphId];\n        HitchensUnorderedKeySetLib.Set storage ext = prefExtensions[\n            prefExtensionsNum\n        ];\n        EMap.LabelMap storage lab = labs[labsNum];\n        for (uint256 i = 0; i < graph.nodesIds.count(); i++) {\n            lab.set(uint256(graph.nodesIds.keyAtIndex(i)), EMap.Label.BLANK);\n        }\n        _findPreferredExtensions(labsNum++, prefExtensionsNum++, graphId);\n\n        args = new uint256[](ext.count());\n        for (uint256 i = 0; i < ext.count(); i++) {\n            args[i] = uint256(ext.keyAtIndex(i));\n        }\n\n        emit PreferredExtensions(args);\n    }\n\n    function _findPreferredExtensions(\n        uint256 labId,\n        uint256 prefExtensionId,\n        uint256 graphId\n    ) private {\n        DirectedGraph.Graph storage graph = graphs[graphId];\n        EMap.LabelMap storage lab = labs[labId];\n        bool[] memory flags = new bool[](5);\n\n        // while ∃y ∈ A : Lab(y) = BLANK do\n        while (!flags[0]) {\n            (uint256[] memory argIds, uint256 argIdsLen) = _getBlank(labId);\n            if (argIdsLen <= 0) {\n                flags[0] = true;\n            } else {\n                uint256 y = 0;\n                // select y with Lab(y) = BLANK and ∀z ∈ {y}− Lab(z) ∈ {OUT, MUST_OUT}\n                flags[1] = false;\n                for (uint256 i = 0; i < argIdsLen && !flags[1]; i++) {\n                    y = argIds[i];\n                    DirectedGraph.Node storage y_temp = graph.nodes[y];\n                    flags[2] = false;\n                    for (\n                        uint256 j = 0;\n                        j < y_temp.edgesIn.count() && !flags[2];\n                        j++\n                    ) {\n                        DirectedGraph.Edge storage edge = graph.edges[\n                            uint256(y_temp.edgesIn.keyAtIndex(j))\n                        ];\n                        if (\n                            lab.get(edge.source) != EMap.Label.OUT &&\n                            lab.get(edge.source) != EMap.Label.MUST_OUT\n                        ) {\n                            flags[2] = true;\n                        }\n                    }\n                    flags[1] = !flags[2];\n                }\n\n                // otherwise select y with Lab(y) = BLANK s.t. ∀z ∈ A : Lab(z) = BLANK,\n                //|{x : x ∈ {y}+ ∧ Lab(x)!= OUT }| ≥ |{x : x ∈ {z}+ ∧ Lab(x) != OUT }|;\n                if (!flags[1]) {\n                    uint256 max = 0;\n                    for (uint256 i = 0; i < argIdsLen; i++) {\n                        DirectedGraph.Node storage y_temp = graph.nodes[\n                            argIds[i]\n                        ];\n                        uint256 y_temp_num = 0;\n                        for (uint256 j = 0; j < y_temp.edgesOut.count(); j++) {\n                            DirectedGraph.Edge storage edge = graph.edges[\n                                uint256(y_temp.edgesOut.keyAtIndex(j))\n                            ];\n                            if (lab.get(edge.target) != EMap.Label.OUT) {\n                                y_temp_num++;\n                            }\n                        }\n                        if (y_temp_num > max) {\n                            max = y_temp_num;\n                            y = argIds[i];\n                        }\n                    }\n                }\n                // Lab′ ← Lab;\n                uint256 lab1Id = labsNum++;\n                EMap.LabelMap storage lab1 = labs[lab1Id];\n                for (uint256 i = 0; i < lab.length(); i++) {\n                    (uint256 arg, EMap.Label argLabel) = lab.at(i);\n                    lab1.set(arg, argLabel);\n                }\n                // Lab′ (y) ← IN;\n                lab1.set(y, EMap.Label.IN);\n                // foreach z ∈ {y}+ do Lab′(z) ← OUT ;\n                DirectedGraph.Node storage y_node = graph.nodes[y];\n                for (uint256 j = 0; j < y_node.edgesOut.count(); j++) {\n                    DirectedGraph.Edge storage edge = graph.edges[\n                        uint256(y_node.edgesOut.keyAtIndex(j))\n                    ];\n                    lab1.set(edge.target, EMap.Label.OUT);\n                }\n                // foreach z ∈ {y}− do\n                flags[3] = false;\n                for (\n                    uint256 j = 0;\n                    j < y_node.edgesIn.count() && !flags[3];\n                    j++\n                ) {\n                    DirectedGraph.Edge storage edge = graph.edges[\n                        uint256(y_node.edgesIn.keyAtIndex(j))\n                    ];\n                    // if Lab′ (z) ∈ {UNDEC, BLANK} then Lab′ (z) ← MUST OUT ;\n                    if (\n                        lab1.get(edge.source) == EMap.Label.UNDEC ||\n                        lab1.get(edge.source) == EMap.Label.BLANK\n                    ) {\n                        lab1.set(edge.source, EMap.Label.MUST_OUT);\n                        // if !∃w ∈ {z}− : Lab′ (w) = BLANK then Lab(y) ← UNDEC;\n                        DirectedGraph.Node storage z_node = graph.nodes[\n                            edge.source\n                        ];\n                        flags[3] = true;\n                        for (\n                            uint256 k = 0;\n                            k < z_node.edgesIn.count() && flags[3];\n                            k++\n                        ) {\n                            DirectedGraph.Edge storage edgeZ = graph.edges[\n                                uint256(z_node.edgesIn.keyAtIndex(k))\n                            ];\n                            if (lab1.get(edgeZ.source) == EMap.Label.BLANK) {\n                                flags[3] = false;\n                            }\n                        }\n                        if (flags[3]) {\n                            lab.set(y, EMap.Label.UNDEC);\n                            // goto line 7;\n                        }\n                    }\n                }\n                if (!flags[3]) {\n                    // call find-preferred-extensions(Lab′ );\n                    _findPreferredExtensions(lab1Id, prefExtensionId, graphId);\n                    //if ∃z ∈ {y}− : Lab(z) ∈ {BLANK,UNDEC} then Lab(y) ← UNDEC;\n                    flags[4] = false;\n                    for (\n                        uint256 j = 0;\n                        j < y_node.edgesIn.count() && !flags[4];\n                        j++\n                    ) {\n                        DirectedGraph.Edge storage edge = graph.edges[\n                            uint256(y_node.edgesIn.keyAtIndex(j))\n                        ];\n                        // if Lab′ (z) ∈ {UNDEC, BLANK} then Lab′ (z) ← MUST OUT ;\n                        if (\n                            lab.get(edge.source) == EMap.Label.UNDEC ||\n                            lab.get(edge.source) == EMap.Label.BLANK\n                        ) {\n                            lab.set(y, EMap.Label.MUST_OUT);\n                            flags[4] = true;\n                        }\n                    }\n                    // else Lab ← Lab′ ;\n                    if (!flags[4]) {\n                        lab = labs[lab1Id];\n                        labId = lab1Id;\n                    }\n                }\n            }\n        }\n        // if  !∃x : Lab(x) = MUST OUT then\n        (, uint256 argMustOutIdsLen) = _getMustOut(labId);\n        if (argMustOutIdsLen <= 0) {\n            // S ← {x | Lab(x) = IN};\n            (uint256[] memory argInIds, uint256 argINIdsLen) = _getIn(labId);\n            // if !∃T ∈ Epreferred : S ⊆ T then Epreferred ← Epreferred ∪ {S};\n            HitchensUnorderedKeySetLib.Set storage ext = prefExtensions[\n                prefExtensionId\n            ];\n            for (uint256 i = 0; i < argINIdsLen; i++) {\n                if (!ext.exists(bytes32(argInIds[i]))) {\n                    ext.insert(bytes32(argInIds[i]));\n                }\n            }\n        }\n    }\n\n    function _getBlank(uint256 labId)\n        private\n        view\n        returns (uint256[] memory argIdsTemp, uint256 argIdsLenTemp)\n    {\n        EMap.LabelMap storage lab = labs[labId];\n        argIdsTemp = new uint256[](lab.length());\n        argIdsLenTemp = 0;\n        for (uint256 i = 0; i < argIdsTemp.length; i++) {\n            (uint256 arg, EMap.Label argLabel) = lab.at(i);\n            if (argLabel == EMap.Label.BLANK) {\n                argIdsTemp[argIdsLenTemp++] = arg;\n            }\n        }\n    }\n\n    function _getMustOut(uint256 labId)\n        private\n        view\n        returns (uint256[] memory argIdsTemp, uint256 argIdsLenTemp)\n    {\n        EMap.LabelMap storage lab = labs[labId];\n        argIdsTemp = new uint256[](lab.length());\n        argIdsLenTemp = 0;\n        for (uint256 i = 0; i < argIdsTemp.length; i++) {\n            (uint256 arg, EMap.Label argLabel) = lab.at(i);\n            if (argLabel == EMap.Label.MUST_OUT) {\n                argIdsTemp[argIdsLenTemp++] = arg;\n            }\n        }\n    }\n\n    function _getIn(uint256 labId)\n        private\n        view\n        returns (uint256[] memory argIdsTemp, uint256 argIdsLenTemp)\n    {\n        EMap.LabelMap storage lab = labs[labId];\n        argIdsTemp = new uint256[](lab.length());\n        argIdsLenTemp = 0;\n        for (uint256 i = 0; i < argIdsTemp.length; i++) {\n            (uint256 arg, EMap.Label argLabel) = lab.at(i);\n            if (argLabel == EMap.Label.IN) {\n                argIdsTemp[argIdsLenTemp++] = arg;\n            }\n        }\n    }\n}\n",
  "sourcePath": "/home/vincentdw/Documenten/Code/IHiBO_2.0/contracts/Argumentation.sol",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
  "ast": {
    "absolutePath": "project:/contracts/Argumentation.sol",
    "exportedSymbols": {
      "Argumentation": [
        1644
      ]
    },
    "id": 1645,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:0"
      },
      {
        "absolutePath": "project:/contracts/DirectedGraph.sol",
        "file": "./DirectedGraph.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 1645,
<<<<<<< HEAD
        "sourceUnit": 3396,
        "src": "62:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/EnumerableMap.sol",
        "file": "./EnumerableMap.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 3913,
        "src": "93:29:0",
=======
        "sourceUnit": 1928,
        "src": "58:29:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/EnumerableMap.sol",
        "file": "./EnumerableMap.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 1645,
        "sourceUnit": 2445,
        "src": "88:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1644,
        "linearizedBaseContracts": [
          1644
        ],
        "name": "Argumentation",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6,
            "libraryName": {
              "contractScope": null,
              "id": 4,
              "name": "DirectedGraph",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 3395,
              "src": "162:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DirectedGraph_$3395",
=======
              "referencedDeclaration": 1927,
              "src": "154:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DirectedGraph_$1927",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeString": "library DirectedGraph"
              }
            },
            "nodeType": "UsingForDirective",
<<<<<<< HEAD
            "src": "156:44:0",
=======
            "src": "148:44:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "typeName": {
              "contractScope": null,
              "id": 5,
              "name": "DirectedGraph.Graph",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 3147,
              "src": "180:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
              "referencedDeclaration": 1679,
              "src": "172:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeString": "struct DirectedGraph.Graph"
              }
            }
          },
          {
            "id": 9,
            "libraryName": {
              "contractScope": null,
              "id": 7,
              "name": "HitchensUnorderedKeySetLib",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 4090,
              "src": "212:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HitchensUnorderedKeySetLib_$4090",
=======
              "referencedDeclaration": 2622,
              "src": "203:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HitchensUnorderedKeySetLib_$2622",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeString": "library HitchensUnorderedKeySetLib"
              }
            },
            "nodeType": "UsingForDirective",
<<<<<<< HEAD
            "src": "206:68:0",
=======
            "src": "197:68:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "typeName": {
              "contractScope": null,
              "id": 8,
              "name": "HitchensUnorderedKeySetLib.Set",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 3922,
              "src": "243:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
              "referencedDeclaration": 2454,
              "src": "234:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeString": "struct HitchensUnorderedKeySetLib.Set"
              }
            }
          },
          {
            "id": 12,
            "libraryName": {
              "contractScope": null,
              "id": 10,
              "name": "EMap",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 3912,
              "src": "286:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EMap_$3912",
=======
              "referencedDeclaration": 2444,
              "src": "276:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EMap_$2444",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeString": "library EMap"
              }
            },
            "nodeType": "UsingForDirective",
<<<<<<< HEAD
            "src": "280:29:0",
=======
            "src": "270:29:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "typeName": {
              "contractScope": null,
              "id": 11,
              "name": "EMap.LabelMap",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 3726,
              "src": "295:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
              "referencedDeclaration": 2258,
              "src": "285:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeString": "struct EMap.LabelMap"
              }
            }
          },
          {
            "constant": false,
            "id": 14,
            "name": "graphsIds",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
<<<<<<< HEAD
            "src": "317:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
            "src": "305:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "typeString": "struct HitchensUnorderedKeySetLib.Set"
            },
            "typeName": {
              "contractScope": null,
              "id": 13,
              "name": "HitchensUnorderedKeySetLib.Set",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 3922,
              "src": "317:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
              "referencedDeclaration": 2454,
              "src": "305:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeString": "struct HitchensUnorderedKeySetLib.Set"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 18,
            "name": "graphs",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
<<<<<<< HEAD
            "src": "364:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
            "src": "351:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "typeString": "mapping(uint256 => struct DirectedGraph.Graph)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                "src": "372:7:0",
=======
                "src": "359:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "364:39:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
              "src": "351:39:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeString": "mapping(uint256 => struct DirectedGraph.Graph)"
              },
              "valueType": {
                "contractScope": null,
                "id": 16,
                "name": "DirectedGraph.Graph",
                "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                "referencedDeclaration": 3147,
                "src": "383:19:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                "referencedDeclaration": 1679,
                "src": "370:19:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "typeString": "struct DirectedGraph.Graph"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 22,
            "name": "agentsArguments",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
<<<<<<< HEAD
            "src": "442:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Set_$3922_storage_$",
=======
            "src": "426:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Set_$2454_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "typeString": "mapping(address => struct HitchensUnorderedKeySetLib.Set)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                "src": "450:7:0",
=======
                "src": "434:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "442:50:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Set_$3922_storage_$",
=======
              "src": "426:50:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Set_$2454_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeString": "mapping(address => struct HitchensUnorderedKeySetLib.Set)"
              },
              "valueType": {
                "contractScope": null,
                "id": 20,
                "name": "HitchensUnorderedKeySetLib.Set",
                "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                "referencedDeclaration": 3922,
                "src": "461:30:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                "referencedDeclaration": 2454,
                "src": "445:30:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "typeString": "struct HitchensUnorderedKeySetLib.Set"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24,
            "name": "labsNum",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
<<<<<<< HEAD
            "src": "517:15:0",
=======
            "src": "499:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "517:7:0",
=======
              "src": "499:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "name": "labs",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
<<<<<<< HEAD
            "src": "539:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$3726_storage_$",
=======
            "src": "520:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$2258_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "typeString": "mapping(uint256 => struct EMap.LabelMap)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                "src": "547:7:0",
=======
                "src": "528:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "539:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$3726_storage_$",
=======
              "src": "520:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$2258_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeString": "mapping(uint256 => struct EMap.LabelMap)"
              },
              "valueType": {
                "contractScope": null,
                "id": 26,
                "name": "EMap.LabelMap",
                "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                "referencedDeclaration": 3726,
                "src": "558:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                "referencedDeclaration": 2258,
                "src": "539:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "typeString": "struct EMap.LabelMap"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 30,
            "name": "prefExtensionsNum",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
<<<<<<< HEAD
            "src": "584:25:0",
=======
            "src": "564:25:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "584:7:0",
=======
              "src": "564:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 34,
            "name": "prefExtensions",
            "nodeType": "VariableDeclaration",
            "scope": 1644,
<<<<<<< HEAD
            "src": "616:65:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Set_$3922_storage_$",
=======
            "src": "595:65:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Set_$2454_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "typeString": "mapping(uint256 => struct HitchensUnorderedKeySetLib.Set)"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 31,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                "src": "624:7:0",
=======
                "src": "603:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "616:50:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Set_$3922_storage_$",
=======
              "src": "595:50:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Set_$2454_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "typeString": "mapping(uint256 => struct HitchensUnorderedKeySetLib.Set)"
              },
              "valueType": {
                "contractScope": null,
                "id": 32,
                "name": "HitchensUnorderedKeySetLib.Set",
                "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                "referencedDeclaration": 3922,
                "src": "635:30:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                "referencedDeclaration": 2454,
                "src": "614:30:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "typeString": "struct HitchensUnorderedKeySetLib.Set"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 39,
            "name": "PreferredExtensions",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "name": "args",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
<<<<<<< HEAD
                  "src": "716:14:0",
=======
                  "src": "693:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 35,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                      "src": "716:7:0",
=======
                      "src": "693:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 36,
                    "length": null,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                    "src": "716:9:0",
=======
                    "src": "693:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "715:16:0"
            },
            "src": "690:42:0"
=======
              "src": "692:16:0"
            },
            "src": "667:42:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "761:56:0",
=======
              "src": "736:54:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 47,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "805:1:0",
=======
                                "src": "779:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "797:7:0",
=======
                              "src": "771:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "797:10:0",
=======
                            "src": "771:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "789:7:0",
=======
                          "src": "763:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "789:19:0",
=======
                        "src": "763:19:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "graphsIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
<<<<<<< HEAD
                        "src": "772:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                        "src": "746:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "insert",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3960,
                      "src": "772:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3922_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                      "referencedDeclaration": 2492,
                      "src": "746:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2454_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "772:37:0",
=======
                    "src": "746:37:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "772:37:0"
=======
                  "src": "746:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                }
              ]
            },
            "documentation": null,
            "id": 53,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "751:2:0"
=======
              "src": "726:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "761:0:0"
            },
            "scope": 1644,
            "src": "740:77:0",
=======
              "src": "736:0:0"
            },
            "scope": 1644,
            "src": "715:75:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "927:267:0",
=======
              "src": "895:259:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "assignments": [
                    63
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63,
                      "name": "graph",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
<<<<<<< HEAD
                      "src": "938:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                      "src": "905:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct DirectedGraph.Graph"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 62,
                        "name": "DirectedGraph.Graph",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3147,
                        "src": "938:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                        "referencedDeclaration": 1679,
                        "src": "905:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct DirectedGraph.Graph"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 67,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 64,
                      "name": "graphs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
<<<<<<< HEAD
                      "src": "974:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
                      "src": "941:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct DirectedGraph.Graph storage ref)"
                      }
                    },
                    "id": 66,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "981:1:0",
=======
                      "src": "948:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "974:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$3147_storage",
=======
                    "src": "941:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$1679_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct DirectedGraph.Graph storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "938:45:0"
=======
                  "src": "905:45:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "argId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
<<<<<<< HEAD
                      "src": "994:5:0",
=======
                      "src": "960:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 71,
                          "name": "metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
<<<<<<< HEAD
                          "src": "1019:8:0",
=======
                          "src": "985:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "graph",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
<<<<<<< HEAD
                          "src": "1002:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                          "src": "968:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Graph storage pointer"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "insertNode",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3194,
                        "src": "1002:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$3147_storage_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Graph_$3147_storage_ptr_$",
=======
                        "referencedDeclaration": 1726,
                        "src": "968:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$1679_storage_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Graph_$1679_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "function (struct DirectedGraph.Graph storage pointer,string memory) returns (uint256)"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "1002:26:0",
=======
                      "src": "968:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "994:34:0",
=======
                    "src": "960:34:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "994:34:0"
=======
                  "src": "960:34:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    78
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78,
                      "name": "agentArgs",
                      "nodeType": "VariableDeclaration",
                      "scope": 92,
<<<<<<< HEAD
                      "src": "1041:48:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                      "src": "1005:48:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct HitchensUnorderedKeySetLib.Set"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 77,
                        "name": "HitchensUnorderedKeySetLib.Set",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3922,
                        "src": "1041:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                        "referencedDeclaration": 2454,
                        "src": "1005:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct HitchensUnorderedKeySetLib.Set"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 83,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "agentsArguments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
<<<<<<< HEAD
                      "src": "1092:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Set_$3922_storage_$",
=======
                      "src": "1056:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Set_$2454_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(address => struct HitchensUnorderedKeySetLib.Set storage ref)"
                      }
                    },
                    "id": 82,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 6542,
                        "src": "1122:3:0",
=======
                        "referencedDeclaration": 2919,
                        "src": "1085:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "1122:10:0",
=======
                      "src": "1085:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "1092:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                    "src": "1056:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "1041:102:0"
=======
                  "src": "1005:100:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 88,
                            "name": "argId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
<<<<<<< HEAD
                            "src": "1179:5:0",
=======
                            "src": "1140:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "1171:7:0",
=======
                          "src": "1132:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1171:14:0",
=======
                        "src": "1132:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "agentArgs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
<<<<<<< HEAD
                        "src": "1154:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                        "src": "1115:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct HitchensUnorderedKeySetLib.Set storage pointer"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "insert",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3960,
                      "src": "1154:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3922_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                      "referencedDeclaration": 2492,
                      "src": "1115:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2454_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1154:32:0",
=======
                    "src": "1115:32:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1154:32:0"
=======
                  "src": "1115:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                }
              ]
            },
            "documentation": null,
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insertArgument",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
<<<<<<< HEAD
                  "src": "849:22:0",
=======
                  "src": "820:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "849:6:0",
=======
                    "src": "820:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "848:24:0"
=======
              "src": "819:24:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "argId",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
<<<<<<< HEAD
                  "src": "907:13:0",
=======
                  "src": "876:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "907:7:0",
=======
                    "src": "876:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "906:15:0"
            },
            "scope": 1644,
            "src": "825:369:0",
=======
              "src": "875:15:0"
            },
            "scope": 1644,
            "src": "796:358:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1249:260:0",
=======
              "src": "1207:252:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "assignments": [
                    101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101,
                      "name": "graph",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
<<<<<<< HEAD
                      "src": "1260:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                      "src": "1217:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct DirectedGraph.Graph"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 100,
                        "name": "DirectedGraph.Graph",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3147,
                        "src": "1260:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                        "referencedDeclaration": 1679,
                        "src": "1217:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct DirectedGraph.Graph"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 105,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "graphs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
<<<<<<< HEAD
                      "src": "1296:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
                      "src": "1253:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct DirectedGraph.Graph storage ref)"
                      }
                    },
                    "id": 104,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "1303:1:0",
=======
                      "src": "1260:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "1296:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$3147_storage",
=======
                    "src": "1253:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$1679_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct DirectedGraph.Graph storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "1260:45:0"
=======
                  "src": "1217:45:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "argId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
<<<<<<< HEAD
                        "src": "1337:5:0",
=======
                        "src": "1293:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "graph",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
<<<<<<< HEAD
                        "src": "1316:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                        "src": "1272:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct DirectedGraph.Graph storage pointer"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "incrementValue",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3255,
                      "src": "1316:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$3147_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Graph_$3147_storage_ptr_$",
=======
                      "referencedDeclaration": 1787,
                      "src": "1272:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$1679_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Graph_$1679_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "function (struct DirectedGraph.Graph storage pointer,uint256)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1316:27:0",
=======
                    "src": "1272:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1316:27:0"
=======
                  "src": "1272:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 115,
                      "name": "agentArgs",
                      "nodeType": "VariableDeclaration",
                      "scope": 129,
<<<<<<< HEAD
                      "src": "1356:48:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                      "src": "1310:48:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct HitchensUnorderedKeySetLib.Set"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 114,
                        "name": "HitchensUnorderedKeySetLib.Set",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3922,
                        "src": "1356:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                        "referencedDeclaration": 2454,
                        "src": "1310:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct HitchensUnorderedKeySetLib.Set"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 120,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 116,
                      "name": "agentsArguments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
<<<<<<< HEAD
                      "src": "1407:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Set_$3922_storage_$",
=======
                      "src": "1361:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Set_$2454_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(address => struct HitchensUnorderedKeySetLib.Set storage ref)"
                      }
                    },
                    "id": 119,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 6542,
                        "src": "1437:3:0",
=======
                        "referencedDeclaration": 2919,
                        "src": "1390:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "1437:10:0",
=======
                      "src": "1390:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "1407:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                    "src": "1361:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "1356:102:0"
=======
                  "src": "1310:100:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "argId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
<<<<<<< HEAD
                            "src": "1494:5:0",
=======
                            "src": "1445:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "1486:7:0",
=======
                          "src": "1437:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1486:14:0",
=======
                        "src": "1437:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 121,
                        "name": "agentArgs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
<<<<<<< HEAD
                        "src": "1469:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                        "src": "1420:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct HitchensUnorderedKeySetLib.Set storage pointer"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "insert",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3960,
                      "src": "1469:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3922_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                      "referencedDeclaration": 2492,
                      "src": "1420:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2454_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1469:32:0",
=======
                    "src": "1420:32:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1469:32:0"
=======
                  "src": "1420:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                }
              ]
            },
            "documentation": null,
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportArgument",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "name": "argId",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
<<<<<<< HEAD
                  "src": "1227:13:0",
=======
                  "src": "1185:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1227:7:0",
=======
                    "src": "1185:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1226:15:0"
=======
              "src": "1184:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1249:0:0"
            },
            "scope": 1644,
            "src": "1202:307:0",
=======
              "src": "1207:0:0"
            },
            "scope": 1644,
            "src": "1160:299:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1665:130:0",
=======
              "src": "1609:127:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "assignments": [
                    144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 144,
                      "name": "graph",
                      "nodeType": "VariableDeclaration",
                      "scope": 158,
<<<<<<< HEAD
                      "src": "1676:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                      "src": "1619:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct DirectedGraph.Graph"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 143,
                        "name": "DirectedGraph.Graph",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3147,
                        "src": "1676:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                        "referencedDeclaration": 1679,
                        "src": "1619:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct DirectedGraph.Graph"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "graphs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
<<<<<<< HEAD
                      "src": "1712:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
                      "src": "1655:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct DirectedGraph.Graph storage ref)"
                      }
                    },
                    "id": 147,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "1719:1:0",
=======
                      "src": "1662:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "1712:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$3147_storage",
=======
                    "src": "1655:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$1679_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct DirectedGraph.Graph storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "1676:45:0"
=======
                  "src": "1619:45:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 149,
                      "name": "edgeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
<<<<<<< HEAD
                      "src": "1732:6:0",
=======
                      "src": "1674:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 152,
                          "name": "sourceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
<<<<<<< HEAD
                          "src": "1758:8:0",
=======
                          "src": "1700:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 153,
                          "name": "targetId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
<<<<<<< HEAD
                          "src": "1768:8:0",
=======
                          "src": "1710:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 154,
                          "name": "metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
<<<<<<< HEAD
                          "src": "1778:8:0",
=======
                          "src": "1720:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 150,
                          "name": "graph",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
<<<<<<< HEAD
                          "src": "1741:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                          "src": "1683:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Graph storage pointer"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "insertEdge",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3367,
                        "src": "1741:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$3147_storage_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Graph_$3147_storage_ptr_$",
=======
                        "referencedDeclaration": 1899,
                        "src": "1683:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$1679_storage_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Graph_$1679_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "function (struct DirectedGraph.Graph storage pointer,uint256,uint256,string memory) returns (uint256)"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "1741:46:0",
=======
                      "src": "1683:46:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "1732:55:0",
=======
                    "src": "1674:55:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1732:55:0"
=======
                  "src": "1674:55:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                }
              ]
            },
            "documentation": null,
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insertAttack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "name": "sourceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
<<<<<<< HEAD
                  "src": "1549:16:0",
=======
                  "src": "1496:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1549:7:0",
=======
                    "src": "1496:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "name": "targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
<<<<<<< HEAD
                  "src": "1576:16:0",
=======
                  "src": "1522:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1576:7:0",
=======
                    "src": "1522:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "name": "metadata",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
<<<<<<< HEAD
                  "src": "1603:22:0",
=======
                  "src": "1548:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1603:6:0",
=======
                    "src": "1548:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1538:94:0"
=======
              "src": "1486:90:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "edgeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
<<<<<<< HEAD
                  "src": "1649:14:0",
=======
                  "src": "1593:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1649:7:0",
=======
                    "src": "1593:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1648:16:0"
            },
            "scope": 1644,
            "src": "1517:278:0",
=======
              "src": "1592:16:0"
            },
            "scope": 1644,
            "src": "1465:271:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1867:1223:0",
=======
              "src": "1806:1017:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 164,
                      "name": "graphId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
<<<<<<< HEAD
                      "src": "1878:7:0",
=======
                      "src": "1816:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 165,
                            "name": "graphsIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
<<<<<<< HEAD
                            "src": "1888:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                            "src": "1826:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "count",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 4036,
                          "src": "1888:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                          "referencedDeclaration": 2568,
                          "src": "1826:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1888:17:0",
=======
                        "src": "1826:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1908:1:0",
=======
                        "src": "1846:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
<<<<<<< HEAD
                      "src": "1888:21:0",
=======
                      "src": "1826:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "1878:31:0",
=======
                    "src": "1816:31:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1878:31:0"
=======
                  "src": "1816:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 176,
                            "name": "graphId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
<<<<<<< HEAD
                            "src": "1945:7:0",
=======
                            "src": "1882:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "1937:7:0",
=======
                          "src": "1874:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1937:16:0",
=======
                        "src": "1874:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "graphsIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
<<<<<<< HEAD
                        "src": "1920:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                        "src": "1857:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "insert",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3960,
                      "src": "1920:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3922_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                      "referencedDeclaration": 2492,
                      "src": "1857:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2454_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1920:34:0",
=======
                    "src": "1857:34:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1920:34:0"
=======
                  "src": "1857:34:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 183,
                      "name": "paf",
                      "nodeType": "VariableDeclaration",
                      "scope": 309,
<<<<<<< HEAD
                      "src": "1967:31:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                      "src": "1902:31:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct DirectedGraph.Graph"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 182,
                        "name": "DirectedGraph.Graph",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3147,
                        "src": "1967:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                        "referencedDeclaration": 1679,
                        "src": "1902:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct DirectedGraph.Graph"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 187,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "graphs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
<<<<<<< HEAD
                      "src": "2001:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
                      "src": "1936:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct DirectedGraph.Graph storage ref)"
                      }
                    },
                    "id": 186,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "2008:1:0",
=======
                      "src": "1943:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "2001:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$3147_storage",
=======
                    "src": "1936:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$1679_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct DirectedGraph.Graph storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "1967:43:0"
=======
                  "src": "1902:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    191
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 191,
                      "name": "af",
                      "nodeType": "VariableDeclaration",
                      "scope": 309,
<<<<<<< HEAD
                      "src": "2021:30:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                      "src": "1955:30:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct DirectedGraph.Graph"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 190,
                        "name": "DirectedGraph.Graph",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3147,
                        "src": "2021:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                        "referencedDeclaration": 1679,
                        "src": "1955:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct DirectedGraph.Graph"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 192,
                      "name": "graphs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
<<<<<<< HEAD
                      "src": "2054:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
                      "src": "1988:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct DirectedGraph.Graph storage ref)"
                      }
                    },
                    "id": 194,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "graphId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
<<<<<<< HEAD
                      "src": "2061:7:0",
=======
                      "src": "1995:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "2054:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$3147_storage",
=======
                    "src": "1988:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$1679_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct DirectedGraph.Graph storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "2021:48:0"
=======
                  "src": "1955:48:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "body": {
                    "id": 307,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "2133:950:0",
=======
                    "src": "2065:752:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "assignments": [
                          210
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 210,
                            "name": "edgeId",
                            "nodeType": "VariableDeclaration",
                            "scope": 307,
<<<<<<< HEAD
                            "src": "2148:14:0",
=======
                            "src": "2079:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 209,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "2148:7:0",
=======
                              "src": "2079:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 218,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 215,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 197,
<<<<<<< HEAD
                                  "src": "2197:1:0",
=======
                                  "src": "2128:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 212,
                                    "name": "paf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 183,
<<<<<<< HEAD
                                    "src": "2173:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                    "src": "2104:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct DirectedGraph.Graph storage pointer"
                                    }
                                  },
                                  "id": 213,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "edgesIds",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 3142,
                                  "src": "2173:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                  "referencedDeclaration": 1674,
                                  "src": "2104:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                  }
                                },
                                "id": 214,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "keyAtIndex",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 4079,
                                "src": "2173:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                "referencedDeclaration": 2611,
                                "src": "2104:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                }
                              },
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "2173:26:0",
=======
                              "src": "2104:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "2165:7:0",
=======
                            "src": "2096:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2165:35:0",
=======
                          "src": "2096:35:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "2148:52:0"
=======
                        "src": "2079:52:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          222
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 222,
                            "name": "edge",
                            "nodeType": "VariableDeclaration",
                            "scope": 307,
<<<<<<< HEAD
                            "src": "2215:31:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                            "src": "2145:31:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Edge"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 221,
                              "name": "DirectedGraph.Edge",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3134,
                              "src": "2215:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                              "referencedDeclaration": 1666,
                              "src": "2145:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Edge"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 227,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 223,
                              "name": "paf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 183,
<<<<<<< HEAD
                              "src": "2249:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                              "src": "2179:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Graph storage pointer"
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "edges",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3146,
                            "src": "2249:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$3134_storage_$",
=======
                            "referencedDeclaration": 1678,
                            "src": "2179:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$1666_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                            }
                          },
                          "id": 226,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 225,
                            "name": "edgeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
<<<<<<< HEAD
                            "src": "2259:6:0",
=======
                            "src": "2189:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "2249:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Edge_$3134_storage",
=======
                          "src": "2179:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Edge_$1666_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Edge storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "2215:51:0"
=======
                        "src": "2145:51:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          231
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 231,
                            "name": "s",
                            "nodeType": "VariableDeclaration",
                            "scope": 307,
<<<<<<< HEAD
                            "src": "2283:28:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                            "src": "2211:28:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Node"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 230,
                              "name": "DirectedGraph.Node",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3127,
                              "src": "2283:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                              "referencedDeclaration": 1659,
                              "src": "2211:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Node"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 237,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 232,
                              "name": "paf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 183,
<<<<<<< HEAD
                              "src": "2314:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                              "src": "2242:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Graph storage pointer"
                              }
                            },
                            "id": 233,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nodes",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3140,
                            "src": "2314:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$3127_storage_$",
=======
                            "referencedDeclaration": 1672,
                            "src": "2242:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$1659_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                            }
                          },
                          "id": 236,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 234,
                              "name": "edge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
<<<<<<< HEAD
                              "src": "2324:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                              "src": "2252:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Edge storage pointer"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "source",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3129,
                            "src": "2324:11:0",
=======
                            "referencedDeclaration": 1661,
                            "src": "2252:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "2314:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Node_$3127_storage",
=======
                          "src": "2242:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Node_$1659_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Node storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "2283:53:0"
=======
                        "src": "2211:53:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          241
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 241,
                            "name": "t",
                            "nodeType": "VariableDeclaration",
                            "scope": 307,
<<<<<<< HEAD
                            "src": "2351:28:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                            "src": "2278:28:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Node"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 240,
                              "name": "DirectedGraph.Node",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3127,
                              "src": "2351:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                              "referencedDeclaration": 1659,
                              "src": "2278:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Node"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 247,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 242,
                              "name": "paf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 183,
<<<<<<< HEAD
                              "src": "2382:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                              "src": "2309:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Graph storage pointer"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nodes",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3140,
                            "src": "2382:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$3127_storage_$",
=======
                            "referencedDeclaration": 1672,
                            "src": "2309:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$1659_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                            }
                          },
                          "id": 246,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 244,
                              "name": "edge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
<<<<<<< HEAD
                              "src": "2392:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                              "src": "2319:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Edge storage pointer"
                              }
                            },
                            "id": 245,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "target",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3131,
                            "src": "2392:11:0",
=======
                            "referencedDeclaration": 1663,
                            "src": "2319:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "2382:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Node_$3127_storage",
=======
                          "src": "2309:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Node_$1659_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Node storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "2351:53:0"
=======
                        "src": "2278:53:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          249
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 249,
                            "name": "notBpreferredToA",
                            "nodeType": "VariableDeclaration",
                            "scope": 307,
<<<<<<< HEAD
                            "src": "2419:21:0",
=======
                            "src": "2345:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 248,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "2419:4:0",
=======
                              "src": "2345:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 257,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
<<<<<<< HEAD
                          "src": "2443:20:0",
=======
                          "src": "2369:20:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 250,
                                    "name": "t",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 241,
<<<<<<< HEAD
                                    "src": "2445:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                    "src": "2371:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct DirectedGraph.Node storage pointer"
                                    }
                                  },
                                  "id": 251,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 3124,
                                  "src": "2445:7:0",
=======
                                  "referencedDeclaration": 1656,
                                  "src": "2371:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 252,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 231,
<<<<<<< HEAD
                                    "src": "2455:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                    "src": "2381:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct DirectedGraph.Node storage pointer"
                                    }
                                  },
                                  "id": 253,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 3124,
                                  "src": "2455:7:0",
=======
                                  "referencedDeclaration": 1656,
                                  "src": "2381:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
<<<<<<< HEAD
                                "src": "2445:17:0",
=======
                                "src": "2371:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 255,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
<<<<<<< HEAD
                            "src": "2444:19:0",
=======
                            "src": "2370:19:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "2419:44:0"
=======
                        "src": "2345:44:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 258,
                          "name": "notBpreferredToA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
<<<<<<< HEAD
                          "src": "2619:16:0",
=======
                          "src": "2408:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 306,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "2615:457:0",
                        "trueBody": {
                          "id": 305,
                          "nodeType": "Block",
                          "src": "2637:435:0",
=======
                        "src": "2404:403:0",
                        "trueBody": {
                          "id": 305,
                          "nodeType": "Block",
                          "src": "2426:381:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "id": 267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
<<<<<<< HEAD
                                "src": "2737:41:0",
=======
                                "src": "2479:41:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "subExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 263,
                                            "name": "edge",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 222,
<<<<<<< HEAD
                                            "src": "2765:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                            "src": "2507:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Edge storage pointer"
                                            }
                                          },
                                          "id": 264,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "source",
                                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                                          "referencedDeclaration": 3129,
                                          "src": "2765:11:0",
=======
                                          "referencedDeclaration": 1661,
                                          "src": "2507:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 262,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                        "src": "2757:7:0",
=======
                                        "src": "2499:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes32_$",
                                          "typeString": "type(bytes32)"
                                        },
                                        "typeName": "bytes32"
                                      },
                                      "id": 265,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "2757:20:0",
=======
                                      "src": "2499:20:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 259,
                                        "name": "af",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 191,
<<<<<<< HEAD
                                        "src": "2738:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                        "src": "2480:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct DirectedGraph.Graph storage pointer"
                                        }
                                      },
                                      "id": 260,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nodesIds",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 3136,
                                      "src": "2738:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                      "referencedDeclaration": 1668,
                                      "src": "2480:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                      }
                                    },
                                    "id": 261,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "exists",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 4064,
                                    "src": "2738:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                    "referencedDeclaration": 2596,
                                    "src": "2480:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32) view returns (bool)"
                                    }
                                  },
                                  "id": 266,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "2738:40:0",
=======
                                  "src": "2480:40:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 276,
                              "nodeType": "IfStatement",
<<<<<<< HEAD
                              "src": "2733:122:0",
                              "trueBody": {
                                "id": 275,
                                "nodeType": "Block",
                                "src": "2780:75:0",
=======
                              "src": "2475:120:0",
                              "trueBody": {
                                "id": 275,
                                "nodeType": "Block",
                                "src": "2522:73:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 271,
                                            "name": "edge",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 222,
<<<<<<< HEAD
                                            "src": "2823:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                            "src": "2564:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Edge storage pointer"
                                            }
                                          },
                                          "id": 272,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "source",
                                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                                          "referencedDeclaration": 3129,
                                          "src": "2823:11:0",
=======
                                          "referencedDeclaration": 1661,
                                          "src": "2564:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 268,
                                          "name": "af",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 191,
<<<<<<< HEAD
                                          "src": "2803:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                          "src": "2544:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct DirectedGraph.Graph storage pointer"
                                          }
                                        },
                                        "id": 270,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "insertNodeWithId",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3224,
                                        "src": "2803:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$3147_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Graph_$3147_storage_ptr_$",
=======
                                        "referencedDeclaration": 1756,
                                        "src": "2544:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$1679_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Graph_$1679_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "function (struct DirectedGraph.Graph storage pointer,uint256)"
                                        }
                                      },
                                      "id": 273,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "2803:32:0",
=======
                                      "src": "2544:32:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 274,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "2803:32:0"
=======
                                    "src": "2544:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "id": 285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
<<<<<<< HEAD
                                "src": "2877:41:0",
=======
                                "src": "2616:41:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "subExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 281,
                                            "name": "edge",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 222,
<<<<<<< HEAD
                                            "src": "2905:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                            "src": "2644:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Edge storage pointer"
                                            }
                                          },
                                          "id": 282,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "target",
                                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                                          "referencedDeclaration": 3131,
                                          "src": "2905:11:0",
=======
                                          "referencedDeclaration": 1663,
                                          "src": "2644:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 280,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                        "src": "2897:7:0",
=======
                                        "src": "2636:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes32_$",
                                          "typeString": "type(bytes32)"
                                        },
                                        "typeName": "bytes32"
                                      },
                                      "id": 283,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "2897:20:0",
=======
                                      "src": "2636:20:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 277,
                                        "name": "af",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 191,
<<<<<<< HEAD
                                        "src": "2878:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                        "src": "2617:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct DirectedGraph.Graph storage pointer"
                                        }
                                      },
                                      "id": 278,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nodesIds",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 3136,
                                      "src": "2878:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                      "referencedDeclaration": 1668,
                                      "src": "2617:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                      }
                                    },
                                    "id": 279,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "exists",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 4064,
                                    "src": "2878:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                    "referencedDeclaration": 2596,
                                    "src": "2617:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32) view returns (bool)"
                                    }
                                  },
                                  "id": 284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "2878:40:0",
=======
                                  "src": "2617:40:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 294,
                              "nodeType": "IfStatement",
<<<<<<< HEAD
                              "src": "2873:122:0",
                              "trueBody": {
                                "id": 293,
                                "nodeType": "Block",
                                "src": "2920:75:0",
=======
                              "src": "2612:120:0",
                              "trueBody": {
                                "id": 293,
                                "nodeType": "Block",
                                "src": "2659:73:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 289,
                                            "name": "edge",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 222,
<<<<<<< HEAD
                                            "src": "2963:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                            "src": "2701:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Edge storage pointer"
                                            }
                                          },
                                          "id": 290,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "target",
                                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                                          "referencedDeclaration": 3131,
                                          "src": "2963:11:0",
=======
                                          "referencedDeclaration": 1663,
                                          "src": "2701:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 286,
                                          "name": "af",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 191,
<<<<<<< HEAD
                                          "src": "2943:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                          "src": "2681:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct DirectedGraph.Graph storage pointer"
                                          }
                                        },
                                        "id": 288,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "insertNodeWithId",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3224,
                                        "src": "2943:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$3147_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Graph_$3147_storage_ptr_$",
=======
                                        "referencedDeclaration": 1756,
                                        "src": "2681:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$1679_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Graph_$1679_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "function (struct DirectedGraph.Graph storage pointer,uint256)"
                                        }
                                      },
                                      "id": 291,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "2943:32:0",
=======
                                      "src": "2681:32:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 292,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "2943:32:0"
=======
                                    "src": "2681:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 298,
                                      "name": "edge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 222,
<<<<<<< HEAD
                                      "src": "3027:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                      "src": "2763:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct DirectedGraph.Edge storage pointer"
                                      }
                                    },
                                    "id": 299,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "source",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 3129,
                                    "src": "3027:11:0",
=======
                                    "referencedDeclaration": 1661,
                                    "src": "2763:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 300,
                                      "name": "edge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 222,
<<<<<<< HEAD
                                      "src": "3040:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                      "src": "2776:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct DirectedGraph.Edge storage pointer"
                                      }
                                    },
                                    "id": 301,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "target",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 3131,
                                    "src": "3040:11:0",
=======
                                    "referencedDeclaration": 1663,
                                    "src": "2776:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "",
                                    "id": 302,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "3053:2:0",
=======
                                    "src": "2789:2:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 295,
                                    "name": "af",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 191,
<<<<<<< HEAD
                                    "src": "3013:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                    "src": "2749:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct DirectedGraph.Graph storage pointer"
                                    }
                                  },
                                  "id": 297,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "insertEdge",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 3367,
                                  "src": "3013:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$3147_storage_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Graph_$3147_storage_ptr_$",
=======
                                  "referencedDeclaration": 1899,
                                  "src": "2749:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$1679_storage_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Graph_$1679_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "function (struct DirectedGraph.Graph storage pointer,uint256,uint256,string memory) returns (uint256)"
                                  }
                                },
                                "id": 303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "3013:43:0",
=======
                                "src": "2749:43:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 304,
                              "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                              "src": "3013:43:0"
=======
                              "src": "2749:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 200,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
<<<<<<< HEAD
                      "src": "2102:1:0",
=======
                      "src": "2034:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 201,
                            "name": "paf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
<<<<<<< HEAD
                            "src": "2106:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                            "src": "2038:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Graph storage pointer"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "edgesIds",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 3142,
                          "src": "2106:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                          "referencedDeclaration": 1674,
                          "src": "2038:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "count",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 4036,
                        "src": "2106:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                        "referencedDeclaration": 2568,
                        "src": "2038:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "2106:20:0",
=======
                      "src": "2038:20:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2102:24:0",
=======
                    "src": "2034:24:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 308,
                  "initializationExpression": {
                    "assignments": [
                      197
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 197,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 308,
<<<<<<< HEAD
                        "src": "2087:9:0",
=======
                        "src": "2019:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "2087:7:0",
=======
                          "src": "2019:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 199,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "2099:1:0",
=======
                      "src": "2031:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "2087:13:0"
=======
                    "src": "2019:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "2128:3:0",
=======
                      "src": "2060:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 206,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
<<<<<<< HEAD
                        "src": "2128:1:0",
=======
                        "src": "2060:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 208,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "2128:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2082:1001:0"
=======
                    "src": "2060:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2014:803:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                }
              ]
            },
            "documentation": null,
            "id": 310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pafReductionToAfPr1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1831:2:0"
=======
              "src": "1770:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "name": "graphId",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
<<<<<<< HEAD
                  "src": "1850:15:0",
=======
                  "src": "1789:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1850:7:0",
=======
                    "src": "1789:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1849:17:0"
            },
            "scope": 1644,
            "src": "1803:1287:0",
=======
              "src": "1788:17:0"
            },
            "scope": 1644,
            "src": "1742:1081:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 489,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "3162:1496:0",
=======
              "src": "2893:1255:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 315,
                      "name": "graphId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
<<<<<<< HEAD
                      "src": "3173:7:0",
=======
                      "src": "2903:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 316,
                            "name": "graphsIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
<<<<<<< HEAD
                            "src": "3183:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                            "src": "2913:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "count",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 4036,
                          "src": "3183:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                          "referencedDeclaration": 2568,
                          "src": "2913:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3183:17:0",
=======
                        "src": "2913:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3203:1:0",
=======
                        "src": "2933:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
<<<<<<< HEAD
                      "src": "3183:21:0",
=======
                      "src": "2913:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "3173:31:0",
=======
                    "src": "2903:31:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3173:31:0"
=======
                  "src": "2903:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 327,
                            "name": "graphId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
<<<<<<< HEAD
                            "src": "3240:7:0",
=======
                            "src": "2969:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "3232:7:0",
=======
                          "src": "2961:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3232:16:0",
=======
                        "src": "2961:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 323,
                        "name": "graphsIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
<<<<<<< HEAD
                        "src": "3215:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                        "src": "2944:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "insert",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3960,
                      "src": "3215:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3922_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                      "referencedDeclaration": 2492,
                      "src": "2944:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2454_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3215:34:0",
=======
                    "src": "2944:34:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3215:34:0"
=======
                  "src": "2944:34:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 334,
                      "name": "paf",
                      "nodeType": "VariableDeclaration",
                      "scope": 489,
<<<<<<< HEAD
                      "src": "3262:31:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                      "src": "2989:31:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct DirectedGraph.Graph"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 333,
                        "name": "DirectedGraph.Graph",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3147,
                        "src": "3262:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                        "referencedDeclaration": 1679,
                        "src": "2989:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct DirectedGraph.Graph"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 338,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 335,
                      "name": "graphs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
<<<<<<< HEAD
                      "src": "3296:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
                      "src": "3023:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct DirectedGraph.Graph storage ref)"
                      }
                    },
                    "id": 337,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3303:1:0",
=======
                      "src": "3030:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "3296:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$3147_storage",
=======
                    "src": "3023:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$1679_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct DirectedGraph.Graph storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3262:43:0"
=======
                  "src": "2989:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    342
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 342,
                      "name": "af",
                      "nodeType": "VariableDeclaration",
                      "scope": 489,
<<<<<<< HEAD
                      "src": "3316:30:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                      "src": "3042:30:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct DirectedGraph.Graph"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 341,
                        "name": "DirectedGraph.Graph",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3147,
                        "src": "3316:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                        "referencedDeclaration": 1679,
                        "src": "3042:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct DirectedGraph.Graph"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 346,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 343,
                      "name": "graphs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
<<<<<<< HEAD
                      "src": "3349:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
                      "src": "3075:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct DirectedGraph.Graph storage ref)"
                      }
                    },
                    "id": 345,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 344,
                      "name": "graphId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
<<<<<<< HEAD
                      "src": "3356:7:0",
=======
                      "src": "3082:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "3349:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$3147_storage",
=======
                    "src": "3075:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$1679_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct DirectedGraph.Graph storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3316:48:0"
=======
                  "src": "3042:48:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "body": {
                    "id": 487,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "3428:1223:0",
=======
                    "src": "3152:990:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "assignments": [
                          361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 361,
                            "name": "edgeId",
                            "nodeType": "VariableDeclaration",
                            "scope": 487,
<<<<<<< HEAD
                            "src": "3443:14:0",
=======
                            "src": "3166:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 360,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "3443:7:0",
=======
                              "src": "3166:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 369,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 366,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 348,
<<<<<<< HEAD
                                  "src": "3492:1:0",
=======
                                  "src": "3215:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 363,
                                    "name": "paf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 334,
<<<<<<< HEAD
                                    "src": "3468:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                    "src": "3191:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct DirectedGraph.Graph storage pointer"
                                    }
                                  },
                                  "id": 364,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "edgesIds",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 3142,
                                  "src": "3468:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                  "referencedDeclaration": 1674,
                                  "src": "3191:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                  }
                                },
                                "id": 365,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "keyAtIndex",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 4079,
                                "src": "3468:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                "referencedDeclaration": 2611,
                                "src": "3191:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                }
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "3468:26:0",
=======
                              "src": "3191:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "3460:7:0",
=======
                            "src": "3183:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "3460:35:0",
=======
                          "src": "3183:35:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "3443:52:0"
=======
                        "src": "3166:52:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          373
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 373,
                            "name": "edge",
                            "nodeType": "VariableDeclaration",
                            "scope": 487,
<<<<<<< HEAD
                            "src": "3510:31:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                            "src": "3232:31:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Edge"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 372,
                              "name": "DirectedGraph.Edge",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3134,
                              "src": "3510:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                              "referencedDeclaration": 1666,
                              "src": "3232:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Edge"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 378,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 374,
                              "name": "paf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
<<<<<<< HEAD
                              "src": "3544:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                              "src": "3266:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Graph storage pointer"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "edges",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3146,
                            "src": "3544:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$3134_storage_$",
=======
                            "referencedDeclaration": 1678,
                            "src": "3266:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$1666_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                            }
                          },
                          "id": 377,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 376,
                            "name": "edgeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
<<<<<<< HEAD
                            "src": "3554:6:0",
=======
                            "src": "3276:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "3544:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Edge_$3134_storage",
=======
                          "src": "3266:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Edge_$1666_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Edge storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "3510:51:0"
=======
                        "src": "3232:51:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          382
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 382,
                            "name": "s",
                            "nodeType": "VariableDeclaration",
                            "scope": 487,
<<<<<<< HEAD
                            "src": "3578:28:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                            "src": "3298:28:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Node"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 381,
                              "name": "DirectedGraph.Node",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3127,
                              "src": "3578:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                              "referencedDeclaration": 1659,
                              "src": "3298:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Node"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 388,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 383,
                              "name": "paf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
<<<<<<< HEAD
                              "src": "3609:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                              "src": "3329:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Graph storage pointer"
                              }
                            },
                            "id": 384,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nodes",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3140,
                            "src": "3609:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$3127_storage_$",
=======
                            "referencedDeclaration": 1672,
                            "src": "3329:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$1659_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                            }
                          },
                          "id": 387,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 385,
                              "name": "edge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
<<<<<<< HEAD
                              "src": "3619:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                              "src": "3339:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Edge storage pointer"
                              }
                            },
                            "id": 386,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "source",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3129,
                            "src": "3619:11:0",
=======
                            "referencedDeclaration": 1661,
                            "src": "3339:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "3609:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Node_$3127_storage",
=======
                          "src": "3329:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Node_$1659_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Node storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "3578:53:0"
=======
                        "src": "3298:53:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          392
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 392,
                            "name": "t",
                            "nodeType": "VariableDeclaration",
                            "scope": 487,
<<<<<<< HEAD
                            "src": "3646:28:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                            "src": "3365:28:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Node"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 391,
                              "name": "DirectedGraph.Node",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3127,
                              "src": "3646:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                              "referencedDeclaration": 1659,
                              "src": "3365:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Node"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 398,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 393,
                              "name": "paf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
<<<<<<< HEAD
                              "src": "3677:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                              "src": "3396:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Graph storage pointer"
                              }
                            },
                            "id": 394,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nodes",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3140,
                            "src": "3677:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$3127_storage_$",
=======
                            "referencedDeclaration": 1672,
                            "src": "3396:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$1659_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                            }
                          },
                          "id": 397,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 395,
                              "name": "edge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
<<<<<<< HEAD
                              "src": "3687:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                              "src": "3406:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Edge storage pointer"
                              }
                            },
                            "id": 396,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "target",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3131,
                            "src": "3687:11:0",
=======
                            "referencedDeclaration": 1663,
                            "src": "3406:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "3677:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Node_$3127_storage",
=======
                          "src": "3396:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Node_$1659_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Node storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "3646:53:0"
=======
                        "src": "3365:53:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          400
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 400,
                            "name": "notBpreferredToA",
                            "nodeType": "VariableDeclaration",
                            "scope": 487,
<<<<<<< HEAD
                            "src": "3714:21:0",
=======
                            "src": "3432:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 399,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "3714:4:0",
=======
                              "src": "3432:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 408,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
<<<<<<< HEAD
                          "src": "3738:20:0",
=======
                          "src": "3456:20:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 401,
                                    "name": "t",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 392,
<<<<<<< HEAD
                                    "src": "3740:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                    "src": "3458:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct DirectedGraph.Node storage pointer"
                                    }
                                  },
                                  "id": 402,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 3124,
                                  "src": "3740:7:0",
=======
                                  "referencedDeclaration": 1656,
                                  "src": "3458:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 403,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 382,
<<<<<<< HEAD
                                    "src": "3750:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                    "src": "3468:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct DirectedGraph.Node storage pointer"
                                    }
                                  },
                                  "id": 404,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 3124,
                                  "src": "3750:7:0",
=======
                                  "referencedDeclaration": 1656,
                                  "src": "3468:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
<<<<<<< HEAD
                                "src": "3740:17:0",
=======
                                "src": "3458:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 406,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
<<<<<<< HEAD
                            "src": "3739:19:0",
=======
                            "src": "3457:19:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "3714:44:0"
=======
                        "src": "3432:44:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          412
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 412,
                            "name": "edgeReverse",
                            "nodeType": "VariableDeclaration",
                            "scope": 487,
<<<<<<< HEAD
                            "src": "3775:38:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                            "src": "3491:38:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Edge"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 411,
                              "name": "DirectedGraph.Edge",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3134,
                              "src": "3775:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                              "referencedDeclaration": 1666,
                              "src": "3491:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Edge"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 423,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 413,
                              "name": "paf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
<<<<<<< HEAD
                              "src": "3816:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                              "src": "3532:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Graph storage pointer"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "edges",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3146,
                            "src": "3816:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$3134_storage_$",
=======
                            "referencedDeclaration": 1678,
                            "src": "3532:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$1666_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                            }
                          },
                          "id": 422,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 417,
                                  "name": "edge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 373,
<<<<<<< HEAD
                                  "src": "3872:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                  "src": "3587:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "struct DirectedGraph.Edge storage pointer"
                                  }
                                },
                                "id": 418,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "target",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 3131,
                                "src": "3872:11:0",
=======
                                "referencedDeclaration": 1663,
                                "src": "3587:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 419,
                                  "name": "edge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 373,
<<<<<<< HEAD
                                  "src": "3885:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                  "src": "3600:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "struct DirectedGraph.Edge storage pointer"
                                  }
                                },
                                "id": 420,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "source",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 3129,
                                "src": "3885:11:0",
=======
                                "referencedDeclaration": 1661,
                                "src": "3600:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 415,
                                "name": "DirectedGraph",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 3395,
                                "src": "3844:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DirectedGraph_$3395_$",
=======
                                "referencedDeclaration": 1927,
                                "src": "3559:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_DirectedGraph_$1927_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "type(library DirectedGraph)"
                                }
                              },
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cantorPairing",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3394,
                              "src": "3844:27:0",
=======
                              "referencedDeclaration": 1926,
                              "src": "3559:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3844:53:0",
=======
                            "src": "3559:53:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "3816:96:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Edge_$3134_storage",
=======
                          "src": "3532:94:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Edge_$1666_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Edge storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "3775:137:0"
=======
                        "src": "3491:135:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          425
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 425,
                            "name": "notBtoA",
                            "nodeType": "VariableDeclaration",
                            "scope": 487,
<<<<<<< HEAD
                            "src": "3927:12:0",
=======
                            "src": "3640:12:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 424,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "3927:4:0",
=======
                              "src": "3640:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 435,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 426,
                                "name": "edgeReverse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 412,
<<<<<<< HEAD
                                "src": "3942:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                "src": "3655:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct DirectedGraph.Edge storage pointer"
                                }
                              },
                              "id": 427,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "source",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3129,
                              "src": "3942:18:0",
=======
                              "referencedDeclaration": 1661,
                              "src": "3655:18:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "3963:1:0",
=======
                              "src": "3676:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
<<<<<<< HEAD
                            "src": "3942:22:0",
=======
                            "src": "3655:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 430,
                                "name": "edgeReverse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 412,
<<<<<<< HEAD
                                "src": "3968:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                "src": "3681:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct DirectedGraph.Edge storage pointer"
                                }
                              },
                              "id": 431,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3131,
                              "src": "3968:18:0",
=======
                              "referencedDeclaration": 1663,
                              "src": "3681:18:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "3989:1:0",
=======
                              "src": "3702:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
<<<<<<< HEAD
                            "src": "3968:22:0",
=======
                            "src": "3681:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
<<<<<<< HEAD
                          "src": "3942:48:0",
=======
                          "src": "3655:48:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "3927:63:0"
=======
                        "src": "3640:63:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 436,
                            "name": "notBpreferredToA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
<<<<<<< HEAD
                            "src": "4146:16:0",
=======
                            "src": "3722:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 437,
                            "name": "notBtoA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
<<<<<<< HEAD
                            "src": "4166:7:0",
=======
                            "src": "3742:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
<<<<<<< HEAD
                          "src": "4146:27:0",
=======
                          "src": "3722:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 486,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "4142:498:0",
                        "trueBody": {
                          "id": 485,
                          "nodeType": "Block",
                          "src": "4175:465:0",
=======
                        "src": "3718:414:0",
                        "trueBody": {
                          "id": 485,
                          "nodeType": "Block",
                          "src": "3751:381:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "id": 447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
<<<<<<< HEAD
                                "src": "4305:41:0",
=======
                                "src": "3804:41:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "subExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 443,
                                            "name": "edge",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 373,
<<<<<<< HEAD
                                            "src": "4333:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                            "src": "3832:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Edge storage pointer"
                                            }
                                          },
                                          "id": 444,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "source",
                                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                                          "referencedDeclaration": 3129,
                                          "src": "4333:11:0",
=======
                                          "referencedDeclaration": 1661,
                                          "src": "3832:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 442,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                        "src": "4325:7:0",
=======
                                        "src": "3824:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes32_$",
                                          "typeString": "type(bytes32)"
                                        },
                                        "typeName": "bytes32"
                                      },
                                      "id": 445,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "4325:20:0",
=======
                                      "src": "3824:20:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 439,
                                        "name": "af",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 342,
<<<<<<< HEAD
                                        "src": "4306:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                        "src": "3805:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct DirectedGraph.Graph storage pointer"
                                        }
                                      },
                                      "id": 440,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nodesIds",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 3136,
                                      "src": "4306:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                      "referencedDeclaration": 1668,
                                      "src": "3805:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                      }
                                    },
                                    "id": 441,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "exists",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 4064,
                                    "src": "4306:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                    "referencedDeclaration": 2596,
                                    "src": "3805:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32) view returns (bool)"
                                    }
                                  },
                                  "id": 446,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "4306:40:0",
=======
                                  "src": "3805:40:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 456,
                              "nodeType": "IfStatement",
<<<<<<< HEAD
                              "src": "4301:122:0",
                              "trueBody": {
                                "id": 455,
                                "nodeType": "Block",
                                "src": "4348:75:0",
=======
                              "src": "3800:120:0",
                              "trueBody": {
                                "id": 455,
                                "nodeType": "Block",
                                "src": "3847:73:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 451,
                                            "name": "edge",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 373,
<<<<<<< HEAD
                                            "src": "4391:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                            "src": "3889:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Edge storage pointer"
                                            }
                                          },
                                          "id": 452,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "source",
                                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                                          "referencedDeclaration": 3129,
                                          "src": "4391:11:0",
=======
                                          "referencedDeclaration": 1661,
                                          "src": "3889:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 448,
                                          "name": "af",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 342,
<<<<<<< HEAD
                                          "src": "4371:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                          "src": "3869:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct DirectedGraph.Graph storage pointer"
                                          }
                                        },
                                        "id": 450,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "insertNodeWithId",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3224,
                                        "src": "4371:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$3147_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Graph_$3147_storage_ptr_$",
=======
                                        "referencedDeclaration": 1756,
                                        "src": "3869:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$1679_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Graph_$1679_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "function (struct DirectedGraph.Graph storage pointer,uint256)"
                                        }
                                      },
                                      "id": 453,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "4371:32:0",
=======
                                      "src": "3869:32:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 454,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "4371:32:0"
=======
                                    "src": "3869:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "id": 465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
<<<<<<< HEAD
                                "src": "4445:41:0",
=======
                                "src": "3941:41:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "subExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 461,
                                            "name": "edge",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 373,
<<<<<<< HEAD
                                            "src": "4473:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                            "src": "3969:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Edge storage pointer"
                                            }
                                          },
                                          "id": 462,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "target",
                                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                                          "referencedDeclaration": 3131,
                                          "src": "4473:11:0",
=======
                                          "referencedDeclaration": 1663,
                                          "src": "3969:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 460,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                        "src": "4465:7:0",
=======
                                        "src": "3961:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes32_$",
                                          "typeString": "type(bytes32)"
                                        },
                                        "typeName": "bytes32"
                                      },
                                      "id": 463,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "4465:20:0",
=======
                                      "src": "3961:20:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 457,
                                        "name": "af",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 342,
<<<<<<< HEAD
                                        "src": "4446:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                        "src": "3942:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct DirectedGraph.Graph storage pointer"
                                        }
                                      },
                                      "id": 458,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nodesIds",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 3136,
                                      "src": "4446:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                      "referencedDeclaration": 1668,
                                      "src": "3942:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                      }
                                    },
                                    "id": 459,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "exists",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 4064,
                                    "src": "4446:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                    "referencedDeclaration": 2596,
                                    "src": "3942:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32) view returns (bool)"
                                    }
                                  },
                                  "id": 464,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "4446:40:0",
=======
                                  "src": "3942:40:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 474,
                              "nodeType": "IfStatement",
<<<<<<< HEAD
                              "src": "4441:122:0",
                              "trueBody": {
                                "id": 473,
                                "nodeType": "Block",
                                "src": "4488:75:0",
=======
                              "src": "3937:120:0",
                              "trueBody": {
                                "id": 473,
                                "nodeType": "Block",
                                "src": "3984:73:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 469,
                                            "name": "edge",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 373,
<<<<<<< HEAD
                                            "src": "4531:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                            "src": "4026:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Edge storage pointer"
                                            }
                                          },
                                          "id": 470,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "target",
                                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                                          "referencedDeclaration": 3131,
                                          "src": "4531:11:0",
=======
                                          "referencedDeclaration": 1663,
                                          "src": "4026:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 466,
                                          "name": "af",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 342,
<<<<<<< HEAD
                                          "src": "4511:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                          "src": "4006:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct DirectedGraph.Graph storage pointer"
                                          }
                                        },
                                        "id": 468,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "insertNodeWithId",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3224,
                                        "src": "4511:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$3147_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Graph_$3147_storage_ptr_$",
=======
                                        "referencedDeclaration": 1756,
                                        "src": "4006:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$1679_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_Graph_$1679_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "function (struct DirectedGraph.Graph storage pointer,uint256)"
                                        }
                                      },
                                      "id": 471,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "4511:32:0",
=======
                                      "src": "4006:32:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 472,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "4511:32:0"
=======
                                    "src": "4006:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 478,
                                      "name": "edge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 373,
<<<<<<< HEAD
                                      "src": "4595:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                      "src": "4088:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct DirectedGraph.Edge storage pointer"
                                      }
                                    },
                                    "id": 479,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "source",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 3129,
                                    "src": "4595:11:0",
=======
                                    "referencedDeclaration": 1661,
                                    "src": "4088:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 480,
                                      "name": "edge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 373,
<<<<<<< HEAD
                                      "src": "4608:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                      "src": "4101:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct DirectedGraph.Edge storage pointer"
                                      }
                                    },
                                    "id": 481,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "target",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 3131,
                                    "src": "4608:11:0",
=======
                                    "referencedDeclaration": 1663,
                                    "src": "4101:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "",
                                    "id": 482,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "4621:2:0",
=======
                                    "src": "4114:2:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 475,
                                    "name": "af",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 342,
<<<<<<< HEAD
                                    "src": "4581:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                    "src": "4074:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct DirectedGraph.Graph storage pointer"
                                    }
                                  },
                                  "id": 477,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "insertEdge",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 3367,
                                  "src": "4581:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$3147_storage_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Graph_$3147_storage_ptr_$",
=======
                                  "referencedDeclaration": 1899,
                                  "src": "4074:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Graph_$1679_storage_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Graph_$1679_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "function (struct DirectedGraph.Graph storage pointer,uint256,uint256,string memory) returns (uint256)"
                                  }
                                },
                                "id": 483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "4581:43:0",
=======
                                "src": "4074:43:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 484,
                              "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                              "src": "4581:43:0"
=======
                              "src": "4074:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
<<<<<<< HEAD
                      "src": "3397:1:0",
=======
                      "src": "3121:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 352,
                            "name": "paf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 334,
<<<<<<< HEAD
                            "src": "3401:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                            "src": "3125:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Graph storage pointer"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "edgesIds",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 3142,
                          "src": "3401:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                          "referencedDeclaration": 1674,
                          "src": "3125:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "count",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 4036,
                        "src": "3401:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                        "referencedDeclaration": 2568,
                        "src": "3125:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "3401:20:0",
=======
                      "src": "3125:20:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "3397:24:0",
=======
                    "src": "3121:24:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 488,
                  "initializationExpression": {
                    "assignments": [
                      348
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 348,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
<<<<<<< HEAD
                        "src": "3382:9:0",
=======
                        "src": "3106:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "3382:7:0",
=======
                          "src": "3106:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 350,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3394:1:0",
=======
                      "src": "3118:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "3382:13:0"
=======
                    "src": "3106:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "3423:3:0",
=======
                      "src": "3147:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 357,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
<<<<<<< HEAD
                        "src": "3423:1:0",
=======
                        "src": "3147:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 359,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "3423:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3377:1274:0"
=======
                    "src": "3147:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3101:1041:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                }
              ]
            },
            "documentation": null,
            "id": 490,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pafReductionToAfPr3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "3126:2:0"
=======
              "src": "2857:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "name": "graphId",
                  "nodeType": "VariableDeclaration",
                  "scope": 490,
<<<<<<< HEAD
                  "src": "3145:15:0",
=======
                  "src": "2876:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3145:7:0",
=======
                    "src": "2876:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3144:17:0"
            },
            "scope": 1644,
            "src": "3098:1560:0",
=======
              "src": "2875:17:0"
            },
            "scope": 1644,
            "src": "2829:1319:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "4888:764:0",
=======
              "src": "4368:745:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "assignments": [
                    507
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 507,
                      "name": "graph",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
<<<<<<< HEAD
                      "src": "4899:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                      "src": "4378:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct DirectedGraph.Graph"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 506,
                        "name": "DirectedGraph.Graph",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3147,
                        "src": "4899:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                        "referencedDeclaration": 1679,
                        "src": "4378:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct DirectedGraph.Graph"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 511,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 508,
                      "name": "graphs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
<<<<<<< HEAD
                      "src": "4935:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
                      "src": "4414:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct DirectedGraph.Graph storage ref)"
                      }
                    },
                    "id": 510,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 509,
                      "name": "graphId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
<<<<<<< HEAD
                      "src": "4942:7:0",
=======
                      "src": "4421:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "4935:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$3147_storage",
=======
                    "src": "4414:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$1679_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct DirectedGraph.Graph storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4899:51:0"
=======
                  "src": "4378:51:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 513,
                      "name": "nodesCount",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
<<<<<<< HEAD
                      "src": "4961:18:0",
=======
                      "src": "4439:18:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 512,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "4961:7:0",
=======
                        "src": "4439:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 518,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 514,
                          "name": "graph",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 507,
<<<<<<< HEAD
                          "src": "4982:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                          "src": "4460:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Graph storage pointer"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nodesIds",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3136,
                        "src": "4982:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                        "referencedDeclaration": 1668,
                        "src": "4460:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "count",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 4036,
                      "src": "4982:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                      "referencedDeclaration": 2568,
                      "src": "4460:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4982:22:0",
=======
                    "src": "4460:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4961:43:0"
=======
                  "src": "4439:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 520,
                      "name": "edgesCount",
                      "nodeType": "VariableDeclaration",
                      "scope": 625,
<<<<<<< HEAD
                      "src": "5015:18:0",
=======
                      "src": "4492:18:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 519,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "5015:7:0",
=======
                        "src": "4492:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 525,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 521,
                          "name": "graph",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 507,
<<<<<<< HEAD
                          "src": "5036:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                          "src": "4513:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Graph storage pointer"
                          }
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "edgesIds",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3142,
                        "src": "5036:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                        "referencedDeclaration": 1674,
                        "src": "4513:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                        }
                      },
                      "id": 523,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "count",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 4036,
                      "src": "5036:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                      "referencedDeclaration": 2568,
                      "src": "4513:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5036:22:0",
=======
                    "src": "4513:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5015:43:0"
=======
                  "src": "4492:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 526,
                      "name": "nodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
<<<<<<< HEAD
                      "src": "5071:5:0",
=======
                      "src": "4546:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 530,
                          "name": "nodesCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 513,
<<<<<<< HEAD
                          "src": "5093:10:0",
=======
                          "src": "4568:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
<<<<<<< HEAD
                        "src": "5079:13:0",
=======
                        "src": "4554:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 527,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "5083:7:0",
=======
                            "src": "4558:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 528,
                          "length": null,
                          "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                          "src": "5083:9:0",
=======
                          "src": "4558:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "5079:25:0",
=======
                      "src": "4554:25:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                        "typeString": "uint256[] memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5071:33:0",
=======
                    "src": "4546:33:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5071:33:0"
=======
                  "src": "4546:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 534,
                      "name": "edgesSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
<<<<<<< HEAD
                      "src": "5115:11:0",
=======
                      "src": "4589:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 538,
                          "name": "edgesCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
<<<<<<< HEAD
                          "src": "5143:10:0",
=======
                          "src": "4617:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
<<<<<<< HEAD
                        "src": "5129:13:0",
=======
                        "src": "4603:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 535,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "5133:7:0",
=======
                            "src": "4607:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 536,
                          "length": null,
                          "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                          "src": "5133:9:0",
=======
                          "src": "4607:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "5129:25:0",
=======
                      "src": "4603:25:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                        "typeString": "uint256[] memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5115:39:0",
=======
                    "src": "4589:39:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5115:39:0"
=======
                  "src": "4589:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 542,
                      "name": "edgesTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 502,
<<<<<<< HEAD
                      "src": "5165:11:0",
=======
                      "src": "4638:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 546,
                          "name": "edgesCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
<<<<<<< HEAD
                          "src": "5193:10:0",
=======
                          "src": "4666:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
<<<<<<< HEAD
                        "src": "5179:13:0",
=======
                        "src": "4652:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 543,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "5183:7:0",
=======
                            "src": "4656:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 544,
                          "length": null,
                          "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                          "src": "5183:9:0",
=======
                          "src": "4656:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "5179:25:0",
=======
                      "src": "4652:25:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                        "typeString": "uint256[] memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "5165:39:0",
=======
                    "src": "4638:39:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "5165:39:0"
=======
                  "src": "4638:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "body": {
                    "id": 575,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "5270:75:0",
=======
                    "src": "4741:73:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 563,
                              "name": "nodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
<<<<<<< HEAD
                              "src": "5285:5:0",
=======
                              "src": "4755:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 565,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 564,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 551,
<<<<<<< HEAD
                              "src": "5291:1:0",
=======
                              "src": "4761:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "5285:8:0",
=======
                            "src": "4755:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 570,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 551,
<<<<<<< HEAD
                                    "src": "5330:1:0",
=======
                                    "src": "4800:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 567,
                                      "name": "graph",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 507,
<<<<<<< HEAD
                                      "src": "5304:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                      "src": "4774:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct DirectedGraph.Graph storage pointer"
                                      }
                                    },
                                    "id": 568,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nodesIds",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 3136,
                                    "src": "5304:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                    "referencedDeclaration": 1668,
                                    "src": "4774:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                    }
                                  },
                                  "id": 569,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "keyAtIndex",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 4079,
                                  "src": "5304:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                  "referencedDeclaration": 2611,
                                  "src": "4774:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "5304:28:0",
=======
                                "src": "4774:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "5296:7:0",
=======
                              "src": "4766:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "5296:37:0",
=======
                            "src": "4766:37:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "5285:48:0",
=======
                          "src": "4755:48:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 574,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "5285:48:0"
=======
                        "src": "4755:48:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 554,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 551,
<<<<<<< HEAD
                      "src": "5237:1:0",
=======
                      "src": "4708:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 555,
                            "name": "graph",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 507,
<<<<<<< HEAD
                            "src": "5241:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                            "src": "4712:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Graph storage pointer"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nodesIds",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 3136,
                          "src": "5241:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                          "referencedDeclaration": 1668,
                          "src": "4712:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                          }
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "count",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 4036,
                        "src": "5241:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                        "referencedDeclaration": 2568,
                        "src": "4712:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "5241:22:0",
=======
                      "src": "4712:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "5237:26:0",
=======
                    "src": "4708:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 576,
                  "initializationExpression": {
                    "assignments": [
                      551
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 551,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
<<<<<<< HEAD
                        "src": "5222:9:0",
=======
                        "src": "4693:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "5222:7:0",
=======
                          "src": "4693:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 553,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "5234:1:0",
=======
                      "src": "4705:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "5222:13:0"
=======
                    "src": "4693:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "5265:3:0",
=======
                      "src": "4736:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 560,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
<<<<<<< HEAD
                        "src": "5265:1:0",
=======
                        "src": "4736:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 562,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "5265:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5217:128:0"
=======
                    "src": "4736:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4688:126:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "body": {
                    "id": 623,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "5410:235:0",
=======
                    "src": "4877:230:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "assignments": [
                          591
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 591,
                            "name": "edgeId",
                            "nodeType": "VariableDeclaration",
                            "scope": 623,
<<<<<<< HEAD
                            "src": "5425:14:0",
=======
                            "src": "4891:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 590,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "5425:7:0",
=======
                              "src": "4891:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 599,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 596,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 578,
<<<<<<< HEAD
                                  "src": "5476:1:0",
=======
                                  "src": "4942:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 593,
                                    "name": "graph",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 507,
<<<<<<< HEAD
                                    "src": "5450:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                    "src": "4916:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct DirectedGraph.Graph storage pointer"
                                    }
                                  },
                                  "id": 594,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "edgesIds",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 3142,
                                  "src": "5450:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                  "referencedDeclaration": 1674,
                                  "src": "4916:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                  }
                                },
                                "id": 595,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "keyAtIndex",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 4079,
                                "src": "5450:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                "referencedDeclaration": 2611,
                                "src": "4916:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                }
                              },
                              "id": 597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "5450:28:0",
=======
                              "src": "4916:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "5442:7:0",
=======
                            "src": "4908:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "5442:37:0",
=======
                          "src": "4908:37:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "5425:54:0"
=======
                        "src": "4891:54:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          603
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 603,
                            "name": "edge",
                            "nodeType": "VariableDeclaration",
                            "scope": 623,
<<<<<<< HEAD
                            "src": "5494:31:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                            "src": "4959:31:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Edge"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 602,
                              "name": "DirectedGraph.Edge",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3134,
                              "src": "5494:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                              "referencedDeclaration": 1666,
                              "src": "4959:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Edge"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 608,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 604,
                              "name": "graph",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 507,
<<<<<<< HEAD
                              "src": "5528:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                              "src": "4993:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Graph storage pointer"
                              }
                            },
                            "id": 605,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "edges",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3146,
                            "src": "5528:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$3134_storage_$",
=======
                            "referencedDeclaration": 1678,
                            "src": "4993:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$1666_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                            }
                          },
                          "id": 607,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 606,
                            "name": "edgeId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
<<<<<<< HEAD
                            "src": "5540:6:0",
=======
                            "src": "5005:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "5528:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Edge_$3134_storage",
=======
                          "src": "4993:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Edge_$1666_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct DirectedGraph.Edge storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "5494:53:0"
=======
                        "src": "4959:53:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 609,
                              "name": "edgesSource",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
<<<<<<< HEAD
                              "src": "5562:11:0",
=======
                              "src": "5026:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 611,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 610,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
<<<<<<< HEAD
                              "src": "5574:1:0",
=======
                              "src": "5038:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "5562:14:0",
=======
                            "src": "5026:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 612,
                              "name": "edge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
<<<<<<< HEAD
                              "src": "5579:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                              "src": "5043:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Edge storage pointer"
                              }
                            },
                            "id": 613,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "source",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3129,
                            "src": "5579:11:0",
=======
                            "referencedDeclaration": 1661,
                            "src": "5043:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "5562:28:0",
=======
                          "src": "5026:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 615,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "5562:28:0"
=======
                        "src": "5026:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 616,
                              "name": "edgesTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
<<<<<<< HEAD
                              "src": "5605:11:0",
=======
                              "src": "5068:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 618,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 617,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
<<<<<<< HEAD
                              "src": "5617:1:0",
=======
                              "src": "5080:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "5605:14:0",
=======
                            "src": "5068:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 619,
                              "name": "edge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
<<<<<<< HEAD
                              "src": "5622:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                              "src": "5085:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct DirectedGraph.Edge storage pointer"
                              }
                            },
                            "id": 620,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "target",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3131,
                            "src": "5622:11:0",
=======
                            "referencedDeclaration": 1663,
                            "src": "5085:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "5605:28:0",
=======
                          "src": "5068:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 622,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "5605:28:0"
=======
                        "src": "5068:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 581,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
<<<<<<< HEAD
                      "src": "5377:1:0",
=======
                      "src": "4844:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 582,
                            "name": "graph",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 507,
<<<<<<< HEAD
                            "src": "5381:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                            "src": "4848:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Graph storage pointer"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "edgesIds",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 3142,
                          "src": "5381:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                          "referencedDeclaration": 1674,
                          "src": "4848:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "count",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 4036,
                        "src": "5381:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                        "referencedDeclaration": 2568,
                        "src": "4848:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "5381:22:0",
=======
                      "src": "4848:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "5377:26:0",
=======
                    "src": "4844:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 624,
                  "initializationExpression": {
                    "assignments": [
                      578
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 578,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 624,
<<<<<<< HEAD
                        "src": "5362:9:0",
=======
                        "src": "4829:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 577,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "5362:7:0",
=======
                          "src": "4829:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 580,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "5374:1:0",
=======
                      "src": "4841:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "5362:13:0"
=======
                    "src": "4829:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "5405:3:0",
=======
                      "src": "4872:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 587,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
<<<<<<< HEAD
                        "src": "5405:1:0",
=======
                        "src": "4872:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 589,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "5405:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5357:288:0"
=======
                    "src": "4872:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4824:283:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                }
              ]
            },
            "documentation": null,
            "id": 626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGraph",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 492,
                  "name": "graphId",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
<<<<<<< HEAD
                  "src": "4684:15:0",
=======
                  "src": "4172:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "4684:7:0",
=======
                    "src": "4172:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4683:17:0"
=======
              "src": "4171:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 496,
                  "name": "nodes",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
<<<<<<< HEAD
                  "src": "4763:22:0",
=======
                  "src": "4247:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 494,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                      "src": "4763:7:0",
=======
                      "src": "4247:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 495,
                    "length": null,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                    "src": "4763:9:0",
=======
                    "src": "4247:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 499,
                  "name": "edgesSource",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
<<<<<<< HEAD
                  "src": "4800:28:0",
=======
                  "src": "4283:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 497,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                      "src": "4800:7:0",
=======
                      "src": "4283:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 498,
                    "length": null,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                    "src": "4800:9:0",
=======
                    "src": "4283:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 502,
                  "name": "edgesTarget",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
<<<<<<< HEAD
                  "src": "4843:28:0",
=======
                  "src": "4325:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 500,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                      "src": "4843:7:0",
=======
                      "src": "4325:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 501,
                    "length": null,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                    "src": "4843:9:0",
=======
                    "src": "4325:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4748:134:0"
            },
            "scope": 1644,
            "src": "4666:986:0",
=======
              "src": "4233:130:0"
            },
            "scope": 1644,
            "src": "4154:959:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 735,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "5779:669:0",
=======
              "src": "5235:652:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "assignments": [
                    637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 637,
                      "name": "graph",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
<<<<<<< HEAD
                      "src": "5790:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                      "src": "5245:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct DirectedGraph.Graph"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 636,
                        "name": "DirectedGraph.Graph",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3147,
                        "src": "5790:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                        "referencedDeclaration": 1679,
                        "src": "5245:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct DirectedGraph.Graph"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 641,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 638,
                      "name": "graphs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
<<<<<<< HEAD
                      "src": "5826:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
                      "src": "5281:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct DirectedGraph.Graph storage ref)"
                      }
                    },
                    "id": 640,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 639,
                      "name": "graphId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
<<<<<<< HEAD
                      "src": "5833:7:0",
=======
                      "src": "5288:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "5826:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$3147_storage",
=======
                    "src": "5281:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$1679_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct DirectedGraph.Graph storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5790:51:0"
=======
                  "src": "5245:51:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    645
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 645,
                      "name": "ext",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
<<<<<<< HEAD
                      "src": "5852:42:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                      "src": "5306:42:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct HitchensUnorderedKeySetLib.Set"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 644,
                        "name": "HitchensUnorderedKeySetLib.Set",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3922,
                        "src": "5852:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                        "referencedDeclaration": 2454,
                        "src": "5306:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct HitchensUnorderedKeySetLib.Set"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 646,
                      "name": "prefExtensions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
<<<<<<< HEAD
                      "src": "5897:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Set_$3922_storage_$",
=======
                      "src": "5351:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Set_$2454_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct HitchensUnorderedKeySetLib.Set storage ref)"
                      }
                    },
                    "id": 648,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 647,
                      "name": "prefExtensionsNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
<<<<<<< HEAD
                      "src": "5926:17:0",
=======
                      "src": "5379:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "5897:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                    "src": "5351:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5852:102:0"
=======
                  "src": "5306:100:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 653,
                      "name": "lab",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
<<<<<<< HEAD
                      "src": "5965:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                      "src": "5416:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct EMap.LabelMap"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 652,
                        "name": "EMap.LabelMap",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3726,
                        "src": "5965:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                        "referencedDeclaration": 2258,
                        "src": "5416:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.LabelMap"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 657,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 654,
                      "name": "labs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
<<<<<<< HEAD
                      "src": "5993:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$3726_storage_$",
=======
                      "src": "5444:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$2258_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct EMap.LabelMap storage ref)"
                      }
                    },
                    "id": 656,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 655,
                      "name": "labsNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
<<<<<<< HEAD
                      "src": "5998:7:0",
=======
                      "src": "5449:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "5993:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage",
=======
                    "src": "5444:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5965:41:0"
=======
                  "src": "5416:41:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "body": {
                    "id": 686,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "6070:91:0",
=======
                    "src": "5520:89:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 678,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 659,
<<<<<<< HEAD
                                      "src": "6127:1:0",
=======
                                      "src": "5576:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 675,
                                        "name": "graph",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 637,
<<<<<<< HEAD
                                        "src": "6101:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                        "src": "5550:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct DirectedGraph.Graph storage pointer"
                                        }
                                      },
                                      "id": 676,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nodesIds",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 3136,
                                      "src": "6101:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                      "referencedDeclaration": 1668,
                                      "src": "5550:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                      }
                                    },
                                    "id": 677,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "keyAtIndex",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 4079,
                                    "src": "6101:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                    "referencedDeclaration": 2611,
                                    "src": "5550:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "6101:28:0",
=======
                                  "src": "5550:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                "src": "6093:7:0",
=======
                                "src": "5542:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "6093:37:0",
=======
                              "src": "5542:37:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 681,
                                  "name": "EMap",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
<<<<<<< HEAD
                                  "referencedDeclaration": 3912,
                                  "src": "6132:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                  "referencedDeclaration": 2444,
                                  "src": "5581:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "type(library EMap)"
                                  }
                                },
                                "id": 682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "Label",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 3723,
                                "src": "6132:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                "referencedDeclaration": 2255,
                                "src": "5581:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "type(enum EMap.Label)"
                                }
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "BLANK",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
<<<<<<< HEAD
                              "src": "6132:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                              "src": "5581:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "enum EMap.Label"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "enum EMap.Label"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 671,
                              "name": "lab",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 653,
<<<<<<< HEAD
                              "src": "6085:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                              "src": "5534:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct EMap.LabelMap storage pointer"
                              }
                            },
                            "id": 673,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "set",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3751,
                            "src": "6085:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$_t_enum$_Label_$3723_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                            "referencedDeclaration": 2283,
                            "src": "5534:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$_t_enum$_Label_$2255_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                            }
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6085:64:0",
=======
                          "src": "5534:64:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 685,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "6085:64:0"
=======
                        "src": "5534:64:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 662,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
<<<<<<< HEAD
                      "src": "6037:1:0",
=======
                      "src": "5487:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 663,
                            "name": "graph",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
<<<<<<< HEAD
                            "src": "6041:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                            "src": "5491:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct DirectedGraph.Graph storage pointer"
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nodesIds",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 3136,
                          "src": "6041:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                          "referencedDeclaration": 1668,
                          "src": "5491:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                          }
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "count",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 4036,
                        "src": "6041:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                        "referencedDeclaration": 2568,
                        "src": "5491:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "6041:22:0",
=======
                      "src": "5491:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "6037:26:0",
=======
                    "src": "5487:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 687,
                  "initializationExpression": {
                    "assignments": [
                      659
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 659,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 687,
<<<<<<< HEAD
                        "src": "6022:9:0",
=======
                        "src": "5472:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "6022:7:0",
=======
                          "src": "5472:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 661,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "6034:1:0",
=======
                      "src": "5484:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "6022:13:0"
=======
                    "src": "5472:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "6065:3:0",
=======
                      "src": "5515:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 668,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
<<<<<<< HEAD
                        "src": "6065:1:0",
=======
                        "src": "5515:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 670,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "6065:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6017:144:0"
=======
                    "src": "5515:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5467:142:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
<<<<<<< HEAD
                        "src": "6196:9:0",
=======
                        "src": "5643:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 689,
                          "name": "labsNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
<<<<<<< HEAD
                          "src": "6196:7:0",
=======
                          "src": "5643:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
<<<<<<< HEAD
                        "src": "6207:19:0",
=======
                        "src": "5654:19:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 691,
                          "name": "prefExtensionsNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
<<<<<<< HEAD
                          "src": "6207:17:0",
=======
                          "src": "5654:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 693,
                        "name": "graphId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
<<<<<<< HEAD
                        "src": "6228:7:0",
=======
                        "src": "5675:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 688,
                      "name": "_findPreferredExtensions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1436,
<<<<<<< HEAD
                      "src": "6171:24:0",
=======
                      "src": "5618:24:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6171:65:0",
=======
                    "src": "5618:65:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6171:65:0"
=======
                  "src": "5618:65:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 696,
                      "name": "args",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
<<<<<<< HEAD
                      "src": "6249:4:0",
=======
                      "src": "5694:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 700,
                              "name": "ext",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 645,
<<<<<<< HEAD
                              "src": "6270:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                              "src": "5715:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct HitchensUnorderedKeySetLib.Set storage pointer"
                              }
                            },
                            "id": 701,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "count",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 4036,
                            "src": "6270:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                            "referencedDeclaration": 2568,
                            "src": "5715:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6270:11:0",
=======
                          "src": "5715:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
<<<<<<< HEAD
                        "src": "6256:13:0",
=======
                        "src": "5701:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 697,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "6260:7:0",
=======
                            "src": "5705:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 698,
                          "length": null,
                          "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                          "src": "6260:9:0",
=======
                          "src": "5705:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "6256:26:0",
=======
                      "src": "5701:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                        "typeString": "uint256[] memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "6249:33:0",
=======
                    "src": "5694:33:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "6249:33:0"
=======
                  "src": "5694:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "body": {
                    "id": 729,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "6335:63:0",
=======
                    "src": "5779:61:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 718,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 632,
<<<<<<< HEAD
                              "src": "6350:4:0",
=======
                              "src": "5793:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 720,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 719,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
<<<<<<< HEAD
                              "src": "6355:1:0",
=======
                              "src": "5798:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "6350:7:0",
=======
                            "src": "5793:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 724,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 707,
<<<<<<< HEAD
                                    "src": "6383:1:0",
=======
                                    "src": "5826:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 722,
                                    "name": "ext",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 645,
<<<<<<< HEAD
                                    "src": "6368:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                                    "src": "5811:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct HitchensUnorderedKeySetLib.Set storage pointer"
                                    }
                                  },
                                  "id": 723,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "keyAtIndex",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 4079,
                                  "src": "6368:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                  "referencedDeclaration": 2611,
                                  "src": "5811:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "6368:17:0",
=======
                                "src": "5811:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "6360:7:0",
=======
                              "src": "5803:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "6360:26:0",
=======
                            "src": "5803:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "6350:36:0",
=======
                          "src": "5793:36:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 728,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "6350:36:0"
=======
                        "src": "5793:36:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 710,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 707,
<<<<<<< HEAD
                      "src": "6313:1:0",
=======
                      "src": "5757:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 711,
                          "name": "ext",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
<<<<<<< HEAD
                          "src": "6317:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                          "src": "5761:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct HitchensUnorderedKeySetLib.Set storage pointer"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "count",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 4036,
                        "src": "6317:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                        "referencedDeclaration": 2568,
                        "src": "5761:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "6317:11:0",
=======
                      "src": "5761:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "6313:15:0",
=======
                    "src": "5757:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 730,
                  "initializationExpression": {
                    "assignments": [
                      707
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 707,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 730,
<<<<<<< HEAD
                        "src": "6298:9:0",
=======
                        "src": "5742:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 706,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "6298:7:0",
=======
                          "src": "5742:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 709,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "6310:1:0",
=======
                      "src": "5754:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "6298:13:0"
=======
                    "src": "5742:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "6330:3:0",
=======
                      "src": "5774:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 715,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
<<<<<<< HEAD
                        "src": "6330:1:0",
=======
                        "src": "5774:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 717,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "6330:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6293:105:0"
=======
                    "src": "5774:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5737:103:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 732,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
<<<<<<< HEAD
                        "src": "6435:4:0",
=======
                        "src": "5875:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 731,
                      "name": "PreferredExtensions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
<<<<<<< HEAD
                      "src": "6415:19:0",
=======
                      "src": "5855:19:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[] memory)"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6415:25:0",
=======
                    "src": "5855:25:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "6410:30:0"
=======
                  "src": "5850:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                }
              ]
            },
            "documentation": null,
            "id": 736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enumeratingPreferredExtensions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "name": "graphId",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
<<<<<<< HEAD
                  "src": "5700:15:0",
=======
                  "src": "5159:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "5700:7:0",
=======
                    "src": "5159:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5699:17:0"
=======
              "src": "5158:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "name": "args",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
<<<<<<< HEAD
                  "src": "5751:21:0",
=======
                  "src": "5208:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 630,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                      "src": "5751:7:0",
=======
                      "src": "5208:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 631,
                    "length": null,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                    "src": "5751:9:0",
=======
                    "src": "5208:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5750:23:0"
            },
            "scope": 1644,
            "src": "5660:788:0",
=======
              "src": "5207:23:0"
            },
            "scope": 1644,
            "src": "5119:768:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1435,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "6589:7401:0",
=======
              "src": "6022:7241:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "assignments": [
                    748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 748,
                      "name": "graph",
                      "nodeType": "VariableDeclaration",
                      "scope": 1435,
<<<<<<< HEAD
                      "src": "6600:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                      "src": "6032:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct DirectedGraph.Graph"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 747,
                        "name": "DirectedGraph.Graph",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3147,
                        "src": "6600:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                        "referencedDeclaration": 1679,
                        "src": "6032:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct DirectedGraph.Graph"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 752,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 749,
                      "name": "graphs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
<<<<<<< HEAD
                      "src": "6636:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$3147_storage_$",
=======
                      "src": "6068:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Graph_$1679_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct DirectedGraph.Graph storage ref)"
                      }
                    },
                    "id": 751,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 750,
                      "name": "graphId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
<<<<<<< HEAD
                      "src": "6643:7:0",
=======
                      "src": "6075:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "6636:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$3147_storage",
=======
                    "src": "6068:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Graph_$1679_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct DirectedGraph.Graph storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6600:51:0"
=======
                  "src": "6032:51:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 756,
                      "name": "lab",
                      "nodeType": "VariableDeclaration",
                      "scope": 1435,
<<<<<<< HEAD
                      "src": "6662:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                      "src": "6093:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct EMap.LabelMap"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 755,
                        "name": "EMap.LabelMap",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3726,
                        "src": "6662:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                        "referencedDeclaration": 2258,
                        "src": "6093:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.LabelMap"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 760,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 757,
                      "name": "labs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
<<<<<<< HEAD
                      "src": "6690:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$3726_storage_$",
=======
                      "src": "6121:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$2258_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct EMap.LabelMap storage ref)"
                      }
                    },
                    "id": 759,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 758,
                      "name": "labId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 738,
<<<<<<< HEAD
                      "src": "6695:5:0",
=======
                      "src": "6126:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "6690:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage",
=======
                    "src": "6121:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6662:39:0"
=======
                  "src": "6093:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 764,
                      "name": "flags",
                      "nodeType": "VariableDeclaration",
                      "scope": 1435,
<<<<<<< HEAD
                      "src": "6712:19:0",
=======
                      "src": "6142:19:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 762,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "6712:4:0",
=======
                          "src": "6142:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 763,
                        "length": null,
                        "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "6712:6:0",
=======
                        "src": "6142:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 770,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6745:1:0",
=======
                        "src": "6175:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "6734:10:0",
=======
                      "src": "6164:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (bool[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 765,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "6738:4:0",
=======
                          "src": "6168:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 766,
                        "length": null,
                        "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "6738:6:0",
=======
                        "src": "6168:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                          "typeString": "bool[]"
                        }
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6734:13:0",
=======
                    "src": "6164:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory",
                      "typeString": "bool[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6712:35:0"
=======
                  "src": "6142:35:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "body": {
                    "id": 1371,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "6827:6463:0",
=======
                    "src": "6254:6325:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "assignments": [
                          778,
                          780
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 778,
                            "name": "argIds",
                            "nodeType": "VariableDeclaration",
                            "scope": 1371,
<<<<<<< HEAD
                            "src": "6843:23:0",
=======
                            "src": "6269:23:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 776,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "6843:7:0",
=======
                                "src": "6269:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 777,
                              "length": null,
                              "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                              "src": "6843:9:0",
=======
                              "src": "6269:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 780,
                            "name": "argIdsLen",
                            "nodeType": "VariableDeclaration",
                            "scope": 1371,
<<<<<<< HEAD
                            "src": "6868:17:0",
=======
                            "src": "6294:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 779,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "6868:7:0",
=======
                              "src": "6294:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 784,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 782,
                              "name": "labId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
<<<<<<< HEAD
                              "src": "6899:5:0",
=======
                              "src": "6325:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 781,
                            "name": "_getBlank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1505,
<<<<<<< HEAD
                            "src": "6889:9:0",
=======
                            "src": "6315:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256[] memory,uint256)"
                            }
                          },
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6889:16:0",
=======
                          "src": "6315:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(uint256[] memory,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "6842:63:0"
=======
                        "src": "6268:63:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 785,
                            "name": "argIdsLen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 780,
<<<<<<< HEAD
                            "src": "6924:9:0",
=======
                            "src": "6349:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "6937:1:0",
=======
                            "src": "6362:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
<<<<<<< HEAD
                          "src": "6924:14:0",
=======
                          "src": "6349:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1369,
                          "nodeType": "Block",
<<<<<<< HEAD
                          "src": "6996:6283:0",
=======
                          "src": "6419:6150:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "statements": [
                            {
                              "assignments": [
                                796
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 796,
                                  "name": "y",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1369,
<<<<<<< HEAD
                                  "src": "7015:9:0",
=======
                                  "src": "6437:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 795,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "7015:7:0",
=======
                                    "src": "6437:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 798,
                              "initialValue": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "7027:1:0",
=======
                                "src": "6449:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                              "src": "7015:13:0"
=======
                              "src": "6437:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 799,
                                    "name": "flags",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 764,
<<<<<<< HEAD
                                    "src": "7143:5:0",
=======
                                    "src": "6563:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 801,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 800,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "7149:1:0",
=======
                                    "src": "6569:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "7143:8:0",
=======
                                  "src": "6563:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "66616c7365",
                                  "id": 802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
<<<<<<< HEAD
                                  "src": "7154:5:0",
=======
                                  "src": "6574:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
<<<<<<< HEAD
                                "src": "7143:16:0",
=======
                                "src": "6563:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 804,
                              "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                              "src": "7143:16:0"
=======
                              "src": "6563:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            {
                              "body": {
                                "id": 912,
                                "nodeType": "Block",
<<<<<<< HEAD
                                "src": "7231:864:0",
=======
                                "src": "6650:844:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 824,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 820,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 796,
<<<<<<< HEAD
                                        "src": "7254:1:0",
=======
                                        "src": "6672:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 821,
                                          "name": "argIds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 778,
<<<<<<< HEAD
                                          "src": "7258:6:0",
=======
                                          "src": "6676:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 823,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 822,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 806,
<<<<<<< HEAD
                                          "src": "7265:1:0",
=======
                                          "src": "6683:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                                        "src": "7258:9:0",
=======
                                        "src": "6676:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
<<<<<<< HEAD
                                      "src": "7254:13:0",
=======
                                      "src": "6672:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 825,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "7254:13:0"
=======
                                    "src": "6672:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "assignments": [
                                      829
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 829,
                                        "name": "y_temp",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 912,
<<<<<<< HEAD
                                        "src": "7290:33:0",
                                        "stateVariable": false,
                                        "storageLocation": "storage",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                        "src": "6707:33:0",
                                        "stateVariable": false,
                                        "storageLocation": "storage",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct DirectedGraph.Node"
                                        },
                                        "typeName": {
                                          "contractScope": null,
                                          "id": 828,
                                          "name": "DirectedGraph.Node",
                                          "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                          "referencedDeclaration": 3127,
                                          "src": "7290:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                          "referencedDeclaration": 1659,
                                          "src": "6707:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct DirectedGraph.Node"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 834,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 830,
                                          "name": "graph",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 748,
<<<<<<< HEAD
                                          "src": "7326:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                          "src": "6743:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct DirectedGraph.Graph storage pointer"
                                          }
                                        },
                                        "id": 831,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "nodes",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3140,
                                        "src": "7326:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$3127_storage_$",
=======
                                        "referencedDeclaration": 1672,
                                        "src": "6743:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$1659_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                        }
                                      },
                                      "id": 833,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 832,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 796,
<<<<<<< HEAD
                                        "src": "7338:1:0",
=======
                                        "src": "6755:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                                      "src": "7326:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Node_$3127_storage",
=======
                                      "src": "6743:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Node_$1659_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct DirectedGraph.Node storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                    "src": "7290:50:0"
=======
                                    "src": "6707:50:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 839,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 835,
                                          "name": "flags",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 764,
<<<<<<< HEAD
                                          "src": "7363:5:0",
=======
                                          "src": "6779:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                            "typeString": "bool[] memory"
                                          }
                                        },
                                        "id": 837,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "32",
                                          "id": 836,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
<<<<<<< HEAD
                                          "src": "7369:1:0",
=======
                                          "src": "6785:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                                        "src": "7363:8:0",
=======
                                        "src": "6779:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "66616c7365",
                                        "id": 838,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
<<<<<<< HEAD
                                        "src": "7374:5:0",
=======
                                        "src": "6790:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
<<<<<<< HEAD
                                      "src": "7363:16:0",
=======
                                      "src": "6779:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 840,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "7363:16:0"
=======
                                    "src": "6779:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "body": {
                                      "id": 901,
                                      "nodeType": "Block",
<<<<<<< HEAD
                                      "src": "7566:467:0",
=======
                                      "src": "6977:457:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "statements": [
                                        {
                                          "assignments": [
                                            862
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 862,
                                              "name": "edge",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 901,
<<<<<<< HEAD
                                              "src": "7593:31:0",
                                              "stateVariable": false,
                                              "storageLocation": "storage",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                              "src": "7003:31:0",
                                              "stateVariable": false,
                                              "storageLocation": "storage",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "struct DirectedGraph.Edge"
                                              },
                                              "typeName": {
                                                "contractScope": null,
                                                "id": 861,
                                                "name": "DirectedGraph.Edge",
                                                "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                                "referencedDeclaration": 3134,
                                                "src": "7593:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                "referencedDeclaration": 1666,
                                                "src": "7003:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Edge"
                                                }
                                              },
                                              "value": null,
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 873,
                                          "initialValue": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 863,
                                                "name": "graph",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 748,
<<<<<<< HEAD
                                                "src": "7627:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                                "src": "7037:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Graph storage pointer"
                                                }
                                              },
                                              "id": 864,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "edges",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 3146,
                                              "src": "7627:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$3134_storage_$",
=======
                                              "referencedDeclaration": 1678,
                                              "src": "7037:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$1666_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                              }
                                            },
                                            "id": 872,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "id": 869,
                                                      "name": "j",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 842,
<<<<<<< HEAD
                                                      "src": "7703:1:0",
=======
                                                      "src": "7112:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 866,
                                                        "name": "y_temp",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 829,
<<<<<<< HEAD
                                                        "src": "7677:6:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                        "src": "7086:6:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeString": "struct DirectedGraph.Node storage pointer"
                                                        }
                                                      },
                                                      "id": 867,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "edgesIn",
                                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3120,
                                                      "src": "7677:14:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                                      "referencedDeclaration": 1652,
                                                      "src": "7086:14:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                      }
                                                    },
                                                    "id": 868,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "keyAtIndex",
                                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                    "referencedDeclaration": 4079,
                                                    "src": "7677:25:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                                    "referencedDeclaration": 2611,
                                                    "src": "7086:25:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                                    }
                                                  },
                                                  "id": 870,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                  "src": "7677:28:0",
=======
                                                  "src": "7086:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                ],
                                                "id": 865,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                "src": "7669:7:0",
=======
                                                "src": "7078:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": "uint256"
                                              },
                                              "id": 871,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                                              "src": "7669:37:0",
=======
                                              "src": "7078:37:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                                            "src": "7627:106:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$3134_storage",
=======
                                            "src": "7037:104:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$1666_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Edge storage ref"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                          "src": "7593:140:0"
=======
                                          "src": "7003:138:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        },
                                        {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 892,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "commonType": {
<<<<<<< HEAD
                                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "enum EMap.Label"
                                              },
                                              "id": 882,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 876,
                                                      "name": "edge",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 862,
<<<<<<< HEAD
                                                      "src": "7802:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                      "src": "7208:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct DirectedGraph.Edge storage pointer"
                                                      }
                                                    },
                                                    "id": 877,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "source",
                                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                    "referencedDeclaration": 3129,
                                                    "src": "7802:11:0",
=======
                                                    "referencedDeclaration": 1661,
                                                    "src": "7208:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 874,
                                                    "name": "lab",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 756,
<<<<<<< HEAD
                                                    "src": "7794:3:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                                    "src": "7200:3:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "struct EMap.LabelMap storage pointer"
                                                    }
                                                  },
                                                  "id": 875,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "get",
                                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3886,
                                                  "src": "7794:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                                  "referencedDeclaration": 2418,
                                                  "src": "7200:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                  }
                                                },
                                                "id": 878,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                "src": "7794:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                "src": "7200:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "!=",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 879,
                                                    "name": "EMap",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
<<<<<<< HEAD
                                                    "referencedDeclaration": 3912,
                                                    "src": "7818:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                                    "referencedDeclaration": 2444,
                                                    "src": "7224:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "type(library EMap)"
                                                    }
                                                  },
                                                  "id": 880,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "Label",
                                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3723,
                                                  "src": "7818:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                                  "referencedDeclaration": 2255,
                                                  "src": "7224:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "type(enum EMap.Label)"
                                                  }
                                                },
                                                "id": 881,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "OUT",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
<<<<<<< HEAD
                                                "src": "7818:14:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$3723",
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "src": "7794:38:0",
=======
                                                "src": "7224:14:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$2255",
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "src": "7200:38:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "&&",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "commonType": {
<<<<<<< HEAD
                                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "enum EMap.Label"
                                              },
                                              "id": 891,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 885,
                                                      "name": "edge",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 862,
<<<<<<< HEAD
                                                      "src": "7873:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                      "src": "7278:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct DirectedGraph.Edge storage pointer"
                                                      }
                                                    },
                                                    "id": 886,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "source",
                                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                    "referencedDeclaration": 3129,
                                                    "src": "7873:11:0",
=======
                                                    "referencedDeclaration": 1661,
                                                    "src": "7278:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 883,
                                                    "name": "lab",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 756,
<<<<<<< HEAD
                                                    "src": "7865:3:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                                    "src": "7270:3:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "struct EMap.LabelMap storage pointer"
                                                    }
                                                  },
                                                  "id": 884,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "get",
                                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3886,
                                                  "src": "7865:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                                  "referencedDeclaration": 2418,
                                                  "src": "7270:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                  }
                                                },
                                                "id": 887,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                "src": "7865:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                "src": "7270:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "!=",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 888,
                                                    "name": "EMap",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
<<<<<<< HEAD
                                                    "referencedDeclaration": 3912,
                                                    "src": "7889:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                                    "referencedDeclaration": 2444,
                                                    "src": "7294:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "type(library EMap)"
                                                    }
                                                  },
                                                  "id": 889,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "Label",
                                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3723,
                                                  "src": "7889:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                                  "referencedDeclaration": 2255,
                                                  "src": "7294:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "type(enum EMap.Label)"
                                                  }
                                                },
                                                "id": 890,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "MUST_OUT",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
<<<<<<< HEAD
                                                "src": "7889:19:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$3723",
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "src": "7865:43:0",
=======
                                                "src": "7294:19:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$2255",
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "src": "7270:43:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
<<<<<<< HEAD
                                            "src": "7794:114:0",
=======
                                            "src": "7200:113:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": null,
                                          "id": 900,
                                          "nodeType": "IfStatement",
<<<<<<< HEAD
                                          "src": "7760:250:0",
                                          "trueBody": {
                                            "id": 899,
                                            "nodeType": "Block",
                                            "src": "7936:74:0",
=======
                                          "src": "7167:245:0",
                                          "trueBody": {
                                            "id": 899,
                                            "nodeType": "Block",
                                            "src": "7340:72:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 897,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "baseExpression": {
                                                      "argumentTypes": null,
                                                      "id": 893,
                                                      "name": "flags",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 764,
<<<<<<< HEAD
                                                      "src": "7967:5:0",
=======
                                                      "src": "7370:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                                        "typeString": "bool[] memory"
                                                      }
                                                    },
                                                    "id": 895,
                                                    "indexExpression": {
                                                      "argumentTypes": null,
                                                      "hexValue": "32",
                                                      "id": 894,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
<<<<<<< HEAD
                                                      "src": "7973:1:0",
=======
                                                      "src": "7376:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_2_by_1",
                                                        "typeString": "int_const 2"
                                                      },
                                                      "value": "2"
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                                    "src": "7967:8:0",
=======
                                                    "src": "7370:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "74727565",
                                                    "id": 896,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
<<<<<<< HEAD
                                                    "src": "7978:4:0",
=======
                                                    "src": "7381:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                  },
<<<<<<< HEAD
                                                  "src": "7967:15:0",
=======
                                                  "src": "7370:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "id": 898,
                                                "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                                "src": "7967:15:0"
=======
                                                "src": "7370:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 855,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 850,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 845,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 842,
<<<<<<< HEAD
                                          "src": "7473:1:0",
=======
                                          "src": "6886:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 846,
                                                "name": "y_temp",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 829,
<<<<<<< HEAD
                                                "src": "7477:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                "src": "6890:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Node storage pointer"
                                                }
                                              },
                                              "id": 847,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "edgesIn",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 3120,
                                              "src": "7477:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                              "referencedDeclaration": 1652,
                                              "src": "6890:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                              }
                                            },
                                            "id": 848,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "count",
                                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                                            "referencedDeclaration": 4036,
                                            "src": "7477:20:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                            "referencedDeclaration": 2568,
                                            "src": "6890:20:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                            }
                                          },
                                          "id": 849,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                                          "src": "7477:22:0",
=======
                                          "src": "6890:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
<<<<<<< HEAD
                                        "src": "7473:26:0",
=======
                                        "src": "6886:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "id": 854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
<<<<<<< HEAD
                                        "src": "7503:9:0",
=======
                                        "src": "6916:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "subExpression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 851,
                                            "name": "flags",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 764,
<<<<<<< HEAD
                                            "src": "7504:5:0",
=======
                                            "src": "6917:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                              "typeString": "bool[] memory"
                                            }
                                          },
                                          "id": 853,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "32",
                                            "id": 852,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
<<<<<<< HEAD
                                            "src": "7510:1:0",
=======
                                            "src": "6923:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                                          "src": "7504:8:0",
=======
                                          "src": "6917:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
<<<<<<< HEAD
                                      "src": "7473:39:0",
=======
                                      "src": "6886:39:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 902,
                                    "initializationExpression": {
                                      "assignments": [
                                        842
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 842,
                                          "name": "j",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 902,
<<<<<<< HEAD
                                          "src": "7433:9:0",
=======
                                          "src": "6847:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 841,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                            "src": "7433:7:0",
=======
                                            "src": "6847:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "value": null,
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 844,
                                      "initialValue": {
                                        "argumentTypes": null,
                                        "hexValue": "30",
                                        "id": 843,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
<<<<<<< HEAD
                                        "src": "7445:1:0",
=======
                                        "src": "6859:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                      "src": "7433:13:0"
=======
                                      "src": "6847:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    },
                                    "loopExpression": {
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 857,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
<<<<<<< HEAD
                                        "src": "7539:3:0",
=======
                                        "src": "6951:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "subExpression": {
                                          "argumentTypes": null,
                                          "id": 856,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 842,
<<<<<<< HEAD
                                          "src": "7539:1:0",
=======
                                          "src": "6951:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 858,
                                      "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                      "src": "7539:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "7402:631:0"
=======
                                      "src": "6951:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "6817:617:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 910,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 903,
                                          "name": "flags",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 764,
<<<<<<< HEAD
                                          "src": "8055:5:0",
=======
                                          "src": "7455:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                            "typeString": "bool[] memory"
                                          }
                                        },
                                        "id": 905,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31",
                                          "id": 904,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
<<<<<<< HEAD
                                          "src": "8061:1:0",
=======
                                          "src": "7461:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                                        "src": "8055:8:0",
=======
                                        "src": "7455:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 909,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
<<<<<<< HEAD
                                        "src": "8066:9:0",
=======
                                        "src": "7466:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "subExpression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 906,
                                            "name": "flags",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 764,
<<<<<<< HEAD
                                            "src": "8067:5:0",
=======
                                            "src": "7467:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                              "typeString": "bool[] memory"
                                            }
                                          },
                                          "id": 908,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "32",
                                            "id": 907,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
<<<<<<< HEAD
                                            "src": "8073:1:0",
=======
                                            "src": "7473:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                                          "src": "8067:8:0",
=======
                                          "src": "7467:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
<<<<<<< HEAD
                                      "src": "8055:20:0",
=======
                                      "src": "7455:20:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 911,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "8055:20:0"
=======
                                    "src": "7455:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ]
                              },
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 811,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 809,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 806,
<<<<<<< HEAD
                                    "src": "7198:1:0",
=======
                                    "src": "6617:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 810,
                                    "name": "argIdsLen",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 780,
<<<<<<< HEAD
                                    "src": "7202:9:0",
=======
                                    "src": "6621:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
<<<<<<< HEAD
                                  "src": "7198:13:0",
=======
                                  "src": "6617:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
<<<<<<< HEAD
                                  "src": "7215:9:0",
=======
                                  "src": "6634:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 812,
                                      "name": "flags",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 764,
<<<<<<< HEAD
                                      "src": "7216:5:0",
=======
                                      "src": "6635:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                        "typeString": "bool[] memory"
                                      }
                                    },
                                    "id": 814,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 813,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
<<<<<<< HEAD
                                      "src": "7222:1:0",
=======
                                      "src": "6641:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                    "src": "7216:8:0",
=======
                                    "src": "6635:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
<<<<<<< HEAD
                                "src": "7198:26:0",
=======
                                "src": "6617:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 913,
                              "initializationExpression": {
                                "assignments": [
                                  806
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 806,
                                    "name": "i",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 913,
<<<<<<< HEAD
                                    "src": "7183:9:0",
=======
                                    "src": "6602:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 805,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                      "src": "7183:7:0",
=======
                                      "src": "6602:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 808,
                                "initialValue": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
<<<<<<< HEAD
                                  "src": "7195:1:0",
=======
                                  "src": "6614:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                "src": "7183:13:0"
=======
                                "src": "6602:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              "loopExpression": {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
<<<<<<< HEAD
                                  "src": "7226:3:0",
=======
                                  "src": "6645:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "id": 817,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 806,
<<<<<<< HEAD
                                    "src": "7226:1:0",
=======
                                    "src": "6645:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 819,
                                "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                "src": "7226:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "7178:917:0"
=======
                                "src": "6645:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "6597:897:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "id": 917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
<<<<<<< HEAD
                                "src": "8311:9:0",
=======
                                "src": "7706:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "subExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 914,
                                    "name": "flags",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 764,
<<<<<<< HEAD
                                    "src": "8312:5:0",
=======
                                    "src": "7707:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 916,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 915,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "8318:1:0",
=======
                                    "src": "7713:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "8312:8:0",
=======
                                  "src": "7707:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1009,
                              "nodeType": "IfStatement",
<<<<<<< HEAD
                              "src": "8307:957:0",
                              "trueBody": {
                                "id": 1008,
                                "nodeType": "Block",
                                "src": "8322:942:0",
=======
                              "src": "7702:937:0",
                              "trueBody": {
                                "id": 1008,
                                "nodeType": "Block",
                                "src": "7717:922:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "statements": [
                                  {
                                    "assignments": [
                                      919
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 919,
                                        "name": "max",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1008,
<<<<<<< HEAD
                                        "src": "8345:11:0",
=======
                                        "src": "7739:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 918,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                          "src": "8345:7:0",
=======
                                          "src": "7739:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 921,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 920,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
<<<<<<< HEAD
                                      "src": "8359:1:0",
=======
                                      "src": "7753:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                    "src": "8345:15:0"
=======
                                    "src": "7739:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "body": {
                                      "id": 1006,
                                      "nodeType": "Block",
<<<<<<< HEAD
                                      "src": "8423:822:0",
=======
                                      "src": "7816:805:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "statements": [
                                        {
                                          "assignments": [
                                            935
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 935,
                                              "name": "y_temp",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 1006,
<<<<<<< HEAD
                                              "src": "8450:33:0",
                                              "stateVariable": false,
                                              "storageLocation": "storage",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                              "src": "7842:33:0",
                                              "stateVariable": false,
                                              "storageLocation": "storage",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "struct DirectedGraph.Node"
                                              },
                                              "typeName": {
                                                "contractScope": null,
                                                "id": 934,
                                                "name": "DirectedGraph.Node",
                                                "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                                "referencedDeclaration": 3127,
                                                "src": "8450:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                "referencedDeclaration": 1659,
                                                "src": "7842:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Node"
                                                }
                                              },
                                              "value": null,
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 942,
                                          "initialValue": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 936,
                                                "name": "graph",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 748,
<<<<<<< HEAD
                                                "src": "8486:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                                "src": "7878:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Graph storage pointer"
                                                }
                                              },
                                              "id": 937,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "nodes",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 3140,
                                              "src": "8486:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$3127_storage_$",
=======
                                              "referencedDeclaration": 1672,
                                              "src": "7878:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$1659_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                              }
                                            },
                                            "id": 941,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 938,
                                                "name": "argIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 778,
<<<<<<< HEAD
                                                "src": "8528:6:0",
=======
                                                "src": "7919:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                  "typeString": "uint256[] memory"
                                                }
                                              },
                                              "id": 940,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 939,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 923,
<<<<<<< HEAD
                                                "src": "8535:1:0",
=======
                                                "src": "7926:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                                              "src": "8528:9:0",
=======
                                              "src": "7919:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                                            "src": "8486:78:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Node_$3127_storage",
=======
                                            "src": "7878:76:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Node_$1659_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Node storage ref"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                          "src": "8450:114:0"
=======
                                          "src": "7842:112:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        },
                                        {
                                          "assignments": [
                                            944
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 944,
                                              "name": "y_temp_num",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 1006,
<<<<<<< HEAD
                                              "src": "8591:18:0",
=======
                                              "src": "7980:18:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 943,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                                "src": "8591:7:0",
=======
                                                "src": "7980:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "value": null,
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 946,
                                          "initialValue": {
                                            "argumentTypes": null,
                                            "hexValue": "30",
                                            "id": 945,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
<<<<<<< HEAD
                                            "src": "8612:1:0",
=======
                                            "src": "8001:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                          "src": "8591:22:0"
=======
                                          "src": "7980:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        },
                                        {
                                          "body": {
                                            "id": 989,
                                            "nodeType": "Block",
<<<<<<< HEAD
                                            "src": "8694:361:0",
=======
                                            "src": "8082:354:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "statements": [
                                              {
                                                "assignments": [
                                                  963
                                                ],
                                                "declarations": [
                                                  {
                                                    "constant": false,
                                                    "id": 963,
                                                    "name": "edge",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 989,
<<<<<<< HEAD
                                                    "src": "8725:31:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "storage",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                    "src": "8112:31:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "storage",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "struct DirectedGraph.Edge"
                                                    },
                                                    "typeName": {
                                                      "contractScope": null,
                                                      "id": 962,
                                                      "name": "DirectedGraph.Edge",
                                                      "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3134,
                                                      "src": "8725:18:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                      "referencedDeclaration": 1666,
                                                      "src": "8112:18:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct DirectedGraph.Edge"
                                                      }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                  }
                                                ],
                                                "id": 974,
                                                "initialValue": {
                                                  "argumentTypes": null,
                                                  "baseExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 964,
                                                      "name": "graph",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 748,
<<<<<<< HEAD
                                                      "src": "8759:5:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                                      "src": "8146:5:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct DirectedGraph.Graph storage pointer"
                                                      }
                                                    },
                                                    "id": 965,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "edges",
                                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                    "referencedDeclaration": 3146,
                                                    "src": "8759:11:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$3134_storage_$",
=======
                                                    "referencedDeclaration": 1678,
                                                    "src": "8146:11:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$1666_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                                    }
                                                  },
                                                  "id": 973,
                                                  "indexExpression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "id": 970,
                                                            "name": "j",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 948,
<<<<<<< HEAD
                                                            "src": "8840:1:0",
=======
                                                            "src": "8226:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                              "argumentTypes": null,
                                                              "id": 967,
                                                              "name": "y_temp",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 935,
<<<<<<< HEAD
                                                              "src": "8813:6:0",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                              "src": "8199:6:0",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                "typeString": "struct DirectedGraph.Node storage pointer"
                                                              }
                                                            },
                                                            "id": 968,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "edgesOut",
                                                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                            "referencedDeclaration": 3122,
                                                            "src": "8813:15:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                                            "referencedDeclaration": 1654,
                                                            "src": "8199:15:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                            }
                                                          },
                                                          "id": 969,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "keyAtIndex",
                                                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                          "referencedDeclaration": 4079,
                                                          "src": "8813:26:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                                          "referencedDeclaration": 2611,
                                                          "src": "8199:26:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                            "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                                          }
                                                        },
                                                        "id": 971,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                        "src": "8813:29:0",
=======
                                                        "src": "8199:29:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes32",
                                                          "typeString": "bytes32"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_bytes32",
                                                          "typeString": "bytes32"
                                                        }
                                                      ],
                                                      "id": 966,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                      "src": "8805:7:0",
=======
                                                      "src": "8191:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                        "typeString": "type(uint256)"
                                                      },
                                                      "typeName": "uint256"
                                                    },
                                                    "id": 972,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                    "src": "8805:38:0",
=======
                                                    "src": "8191:38:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                                  "src": "8759:115:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Edge_$3134_storage",
=======
                                                  "src": "8146:113:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Edge_$1666_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "struct DirectedGraph.Edge storage ref"
                                                  }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                "src": "8725:149:0"
=======
                                                "src": "8112:147:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "condition": {
                                                  "argumentTypes": null,
                                                  "commonType": {
<<<<<<< HEAD
                                                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "enum EMap.Label"
                                                  },
                                                  "id": 983,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 977,
                                                          "name": "edge",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 963,
<<<<<<< HEAD
                                                          "src": "8917:4:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                          "src": "8301:4:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                            "typeString": "struct DirectedGraph.Edge storage pointer"
                                                          }
                                                        },
                                                        "id": 978,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "target",
                                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                        "referencedDeclaration": 3131,
                                                        "src": "8917:11:0",
=======
                                                        "referencedDeclaration": 1663,
                                                        "src": "8301:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 975,
                                                        "name": "lab",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 756,
<<<<<<< HEAD
                                                        "src": "8909:3:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                                        "src": "8293:3:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeString": "struct EMap.LabelMap storage pointer"
                                                        }
                                                      },
                                                      "id": 976,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "get",
                                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3886,
                                                      "src": "8909:7:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                                      "referencedDeclaration": 2418,
                                                      "src": "8293:7:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                      }
                                                    },
                                                    "id": 979,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                    "src": "8909:20:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                    "src": "8293:20:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "enum EMap.Label"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "!=",
                                                  "rightExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 980,
                                                        "name": "EMap",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
<<<<<<< HEAD
                                                        "referencedDeclaration": 3912,
                                                        "src": "8933:4:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                                        "referencedDeclaration": 2444,
                                                        "src": "8317:4:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeString": "type(library EMap)"
                                                        }
                                                      },
                                                      "id": 981,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "Label",
                                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3723,
                                                      "src": "8933:10:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                                      "referencedDeclaration": 2255,
                                                      "src": "8317:10:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "type(enum EMap.Label)"
                                                      }
                                                    },
                                                    "id": 982,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "OUT",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
<<<<<<< HEAD
                                                    "src": "8933:14:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_enum$_Label_$3723",
                                                      "typeString": "enum EMap.Label"
                                                    }
                                                  },
                                                  "src": "8909:38:0",
=======
                                                    "src": "8317:14:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_enum$_Label_$2255",
                                                      "typeString": "enum EMap.Label"
                                                    }
                                                  },
                                                  "src": "8293:38:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "falseBody": null,
                                                "id": 988,
                                                "nodeType": "IfStatement",
<<<<<<< HEAD
                                                "src": "8905:123:0",
                                                "trueBody": {
                                                  "id": 987,
                                                  "nodeType": "Block",
                                                  "src": "8949:79:0",
=======
                                                "src": "8289:121:0",
                                                "trueBody": {
                                                  "id": 987,
                                                  "nodeType": "Block",
                                                  "src": "8333:77:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 985,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "++",
                                                        "prefix": false,
<<<<<<< HEAD
                                                        "src": "8984:12:0",
=======
                                                        "src": "8367:12:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "subExpression": {
                                                          "argumentTypes": null,
                                                          "id": 984,
                                                          "name": "y_temp_num",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 944,
<<<<<<< HEAD
                                                          "src": "8984:10:0",
=======
                                                          "src": "8367:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 986,
                                                      "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                                      "src": "8984:12:0"
=======
                                                      "src": "8367:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 956,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "id": 951,
                                              "name": "j",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 948,
<<<<<<< HEAD
                                              "src": "8660:1:0",
=======
                                              "src": "8048:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 952,
                                                    "name": "y_temp",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 935,
<<<<<<< HEAD
                                                    "src": "8664:6:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                    "src": "8052:6:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "struct DirectedGraph.Node storage pointer"
                                                    }
                                                  },
                                                  "id": 953,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "edgesOut",
                                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3122,
                                                  "src": "8664:15:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                                  "referencedDeclaration": 1654,
                                                  "src": "8052:15:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                  }
                                                },
                                                "id": 954,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "count",
                                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                "referencedDeclaration": 4036,
                                                "src": "8664:21:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                                "referencedDeclaration": 2568,
                                                "src": "8052:21:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                                }
                                              },
                                              "id": 955,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                                              "src": "8664:23:0",
=======
                                              "src": "8052:23:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
<<<<<<< HEAD
                                            "src": "8660:27:0",
=======
                                            "src": "8048:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 990,
                                          "initializationExpression": {
                                            "assignments": [
                                              948
                                            ],
                                            "declarations": [
                                              {
                                                "constant": false,
                                                "id": 948,
                                                "name": "j",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 990,
<<<<<<< HEAD
                                                "src": "8645:9:0",
=======
                                                "src": "8033:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "typeName": {
                                                  "id": 947,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                                  "src": "8645:7:0",
=======
                                                  "src": "8033:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "value": null,
                                                "visibility": "internal"
                                              }
                                            ],
                                            "id": 950,
                                            "initialValue": {
                                              "argumentTypes": null,
                                              "hexValue": "30",
                                              "id": 949,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
<<<<<<< HEAD
                                              "src": "8657:1:0",
=======
                                              "src": "8045:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                            "src": "8645:13:0"
=======
                                            "src": "8033:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          "loopExpression": {
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 958,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "UnaryOperation",
                                              "operator": "++",
                                              "prefix": false,
<<<<<<< HEAD
                                              "src": "8689:3:0",
=======
                                              "src": "8077:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "subExpression": {
                                                "argumentTypes": null,
                                                "id": 957,
                                                "name": "j",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 948,
<<<<<<< HEAD
                                                "src": "8689:1:0",
=======
                                                "src": "8077:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 959,
                                            "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "8689:3:0"
                                          },
                                          "nodeType": "ForStatement",
                                          "src": "8640:415:0"
=======
                                            "src": "8077:3:0"
                                          },
                                          "nodeType": "ForStatement",
                                          "src": "8028:408:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        },
                                        {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 993,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "id": 991,
                                              "name": "y_temp_num",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 944,
<<<<<<< HEAD
                                              "src": "9085:10:0",
=======
                                              "src": "8465:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "id": 992,
                                              "name": "max",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 919,
<<<<<<< HEAD
                                              "src": "9098:3:0",
=======
                                              "src": "8478:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
<<<<<<< HEAD
                                            "src": "9085:16:0",
=======
                                            "src": "8465:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": null,
                                          "id": 1005,
                                          "nodeType": "IfStatement",
<<<<<<< HEAD
                                          "src": "9081:141:0",
                                          "trueBody": {
                                            "id": 1004,
                                            "nodeType": "Block",
                                            "src": "9103:119:0",
=======
                                          "src": "8461:138:0",
                                          "trueBody": {
                                            "id": 1004,
                                            "nodeType": "Block",
                                            "src": "8483:116:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 996,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 994,
                                                    "name": "max",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 919,
<<<<<<< HEAD
                                                    "src": "9134:3:0",
=======
                                                    "src": "8513:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 995,
                                                    "name": "y_temp_num",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 944,
<<<<<<< HEAD
                                                    "src": "9140:10:0",
=======
                                                    "src": "8519:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
<<<<<<< HEAD
                                                  "src": "9134:16:0",
=======
                                                  "src": "8513:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 997,
                                                "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                                "src": "9134:16:0"
=======
                                                "src": "8513:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1002,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 998,
                                                    "name": "y",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 796,
<<<<<<< HEAD
                                                    "src": "9181:1:0",
=======
                                                    "src": "8559:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "baseExpression": {
                                                      "argumentTypes": null,
                                                      "id": 999,
                                                      "name": "argIds",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 778,
<<<<<<< HEAD
                                                      "src": "9185:6:0",
=======
                                                      "src": "8563:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                        "typeString": "uint256[] memory"
                                                      }
                                                    },
                                                    "id": 1001,
                                                    "indexExpression": {
                                                      "argumentTypes": null,
                                                      "id": 1000,
                                                      "name": "i",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 923,
<<<<<<< HEAD
                                                      "src": "9192:1:0",
=======
                                                      "src": "8570:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                                    "src": "9185:9:0",
=======
                                                    "src": "8563:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
<<<<<<< HEAD
                                                  "src": "9181:13:0",
=======
                                                  "src": "8559:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1003,
                                                "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                                "src": "9181:13:0"
=======
                                                "src": "8559:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 928,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 926,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 923,
<<<<<<< HEAD
                                        "src": "8403:1:0",
=======
                                        "src": "7796:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "id": 927,
                                        "name": "argIdsLen",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 780,
<<<<<<< HEAD
                                        "src": "8407:9:0",
=======
                                        "src": "7800:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
<<<<<<< HEAD
                                      "src": "8403:13:0",
=======
                                      "src": "7796:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1007,
                                    "initializationExpression": {
                                      "assignments": [
                                        923
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 923,
                                          "name": "i",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 1007,
<<<<<<< HEAD
                                          "src": "8388:9:0",
=======
                                          "src": "7781:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 922,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                            "src": "8388:7:0",
=======
                                            "src": "7781:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "value": null,
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 925,
                                      "initialValue": {
                                        "argumentTypes": null,
                                        "hexValue": "30",
                                        "id": 924,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
<<<<<<< HEAD
                                        "src": "8400:1:0",
=======
                                        "src": "7793:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                      "src": "8388:13:0"
=======
                                      "src": "7781:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    },
                                    "loopExpression": {
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 930,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
<<<<<<< HEAD
                                        "src": "8418:3:0",
=======
                                        "src": "7811:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "subExpression": {
                                          "argumentTypes": null,
                                          "id": 929,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 923,
<<<<<<< HEAD
                                          "src": "8418:1:0",
=======
                                          "src": "7811:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 931,
                                      "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                      "src": "8418:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "8383:862:0"
=======
                                      "src": "7811:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "7776:845:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ]
                              }
                            },
                            {
                              "assignments": [
                                1011
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1011,
                                  "name": "lab1Id",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1369,
<<<<<<< HEAD
                                  "src": "9318:14:0",
=======
                                  "src": "8691:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1010,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "9318:7:0",
=======
                                    "src": "8691:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1014,
                              "initialValue": {
                                "argumentTypes": null,
                                "id": 1013,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
<<<<<<< HEAD
                                "src": "9335:9:0",
=======
                                "src": "8708:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 1012,
                                  "name": "labsNum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
<<<<<<< HEAD
                                  "src": "9335:7:0",
=======
                                  "src": "8708:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                              "src": "9318:26:0"
=======
                              "src": "8691:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            {
                              "assignments": [
                                1018
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1018,
                                  "name": "lab1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1369,
<<<<<<< HEAD
                                  "src": "9363:26:0",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                  "src": "8735:26:0",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "struct EMap.LabelMap"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 1017,
                                    "name": "EMap.LabelMap",
                                    "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "referencedDeclaration": 3726,
                                    "src": "9363:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                    "referencedDeclaration": 2258,
                                    "src": "8735:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct EMap.LabelMap"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1022,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1019,
                                  "name": "labs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
<<<<<<< HEAD
                                  "src": "9392:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$3726_storage_$",
=======
                                  "src": "8764:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$2258_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "mapping(uint256 => struct EMap.LabelMap storage ref)"
                                  }
                                },
                                "id": 1021,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1020,
                                  "name": "lab1Id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1011,
<<<<<<< HEAD
                                  "src": "9397:6:0",
=======
                                  "src": "8769:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
<<<<<<< HEAD
                                "src": "9392:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LabelMap_$3726_storage",
=======
                                "src": "8764:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LabelMap_$2258_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct EMap.LabelMap storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                              "src": "9363:41:0"
=======
                              "src": "8735:41:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            {
                              "body": {
                                "id": 1051,
                                "nodeType": "Block",
<<<<<<< HEAD
                                "src": "9466:135:0",
=======
                                "src": "8837:132:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "statements": [
                                  {
                                    "assignments": [
                                      1036,
                                      1038
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1036,
                                        "name": "arg",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1051,
<<<<<<< HEAD
                                        "src": "9490:11:0",
=======
                                        "src": "8860:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 1035,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                          "src": "9490:7:0",
=======
                                          "src": "8860:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      },
                                      {
                                        "constant": false,
                                        "id": 1038,
                                        "name": "argLabel",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1051,
<<<<<<< HEAD
                                        "src": "9503:19:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Label_$3723",
=======
                                        "src": "8873:19:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "enum EMap.Label"
                                        },
                                        "typeName": {
                                          "contractScope": null,
                                          "id": 1037,
                                          "name": "EMap.Label",
                                          "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                          "referencedDeclaration": 3723,
                                          "src": "9503:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$3723",
=======
                                          "referencedDeclaration": 2255,
                                          "src": "8873:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "enum EMap.Label"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1043,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1041,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1024,
<<<<<<< HEAD
                                          "src": "9533:1:0",
=======
                                          "src": "8903:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1039,
                                          "name": "lab",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 756,
<<<<<<< HEAD
                                          "src": "9526:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                          "src": "8896:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct EMap.LabelMap storage pointer"
                                          }
                                        },
                                        "id": 1040,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "at",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3832,
                                        "src": "9526:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                        "referencedDeclaration": 2364,
                                        "src": "8896:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (uint256,enum EMap.Label)"
                                        }
                                      },
                                      "id": 1042,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "9526:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Label_$3723_$",
=======
                                      "src": "8896:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "tuple(uint256,enum EMap.Label)"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                    "src": "9489:46:0"
=======
                                    "src": "8859:46:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1047,
                                          "name": "arg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1036,
<<<<<<< HEAD
                                          "src": "9567:3:0",
=======
                                          "src": "8936:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1048,
                                          "name": "argLabel",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1038,
<<<<<<< HEAD
                                          "src": "9572:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$3723",
=======
                                          "src": "8941:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "enum EMap.Label"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
<<<<<<< HEAD
                                            "typeIdentifier": "t_enum$_Label_$3723",
=======
                                            "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "enum EMap.Label"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1044,
                                          "name": "lab1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1018,
<<<<<<< HEAD
                                          "src": "9558:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                          "src": "8927:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct EMap.LabelMap storage pointer"
                                          }
                                        },
                                        "id": 1046,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "set",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3751,
                                        "src": "9558:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$_t_enum$_Label_$3723_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                        "referencedDeclaration": 2283,
                                        "src": "8927:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$_t_enum$_Label_$2255_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                        }
                                      },
                                      "id": 1049,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "9558:23:0",
=======
                                      "src": "8927:23:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1050,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "9558:23:0"
=======
                                    "src": "8927:23:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ]
                              },
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1027,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1024,
<<<<<<< HEAD
                                  "src": "9443:1:0",
=======
                                  "src": "8814:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1028,
                                      "name": "lab",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 756,
<<<<<<< HEAD
                                      "src": "9447:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                      "src": "8818:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct EMap.LabelMap storage pointer"
                                      }
                                    },
                                    "id": 1029,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 3800,
                                    "src": "9447:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                    "referencedDeclaration": 2332,
                                    "src": "8818:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "function (struct EMap.LabelMap storage pointer) view returns (uint256)"
                                    }
                                  },
                                  "id": 1030,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "9447:12:0",
=======
                                  "src": "8818:12:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
<<<<<<< HEAD
                                "src": "9443:16:0",
=======
                                "src": "8814:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1052,
                              "initializationExpression": {
                                "assignments": [
                                  1024
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1024,
                                    "name": "i",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1052,
<<<<<<< HEAD
                                    "src": "9428:9:0",
=======
                                    "src": "8799:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1023,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                      "src": "9428:7:0",
=======
                                      "src": "8799:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1026,
                                "initialValue": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1025,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
<<<<<<< HEAD
                                  "src": "9440:1:0",
=======
                                  "src": "8811:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                "src": "9428:13:0"
=======
                                "src": "8799:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              "loopExpression": {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1033,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
<<<<<<< HEAD
                                  "src": "9461:3:0",
=======
                                  "src": "8832:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "id": 1032,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
<<<<<<< HEAD
                                    "src": "9461:1:0",
=======
                                    "src": "8832:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1034,
                                "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                "src": "9461:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "9423:178:0"
=======
                                "src": "8832:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "8794:175:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1056,
                                    "name": "y",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 796,
<<<<<<< HEAD
                                    "src": "9667:1:0",
=======
                                    "src": "9033:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1057,
                                        "name": "EMap",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
<<<<<<< HEAD
                                        "referencedDeclaration": 3912,
                                        "src": "9670:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                        "referencedDeclaration": 2444,
                                        "src": "9036:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "type(library EMap)"
                                        }
                                      },
                                      "id": 1058,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "Label",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 3723,
                                      "src": "9670:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                      "referencedDeclaration": 2255,
                                      "src": "9036:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "type(enum EMap.Label)"
                                      }
                                    },
                                    "id": 1059,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "IN",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
<<<<<<< HEAD
                                    "src": "9670:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Label_$3723",
=======
                                    "src": "9036:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "enum EMap.Label"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
<<<<<<< HEAD
                                      "typeIdentifier": "t_enum$_Label_$3723",
=======
                                      "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "enum EMap.Label"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1053,
                                    "name": "lab1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1018,
<<<<<<< HEAD
                                    "src": "9658:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                    "src": "9024:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct EMap.LabelMap storage pointer"
                                    }
                                  },
                                  "id": 1055,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "set",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 3751,
                                  "src": "9658:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$_t_enum$_Label_$3723_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                  "referencedDeclaration": 2283,
                                  "src": "9024:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$_t_enum$_Label_$2255_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                  }
                                },
                                "id": 1060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "9658:26:0",
=======
                                "src": "9024:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1061,
                              "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                              "src": "9658:26:0"
=======
                              "src": "9024:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            {
                              "assignments": [
                                1065
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1065,
                                  "name": "y_node",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1369,
<<<<<<< HEAD
                                  "src": "9765:33:0",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                  "src": "9129:33:0",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "struct DirectedGraph.Node"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 1064,
                                    "name": "DirectedGraph.Node",
                                    "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "referencedDeclaration": 3127,
                                    "src": "9765:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                    "referencedDeclaration": 1659,
                                    "src": "9129:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct DirectedGraph.Node"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1070,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1066,
                                    "name": "graph",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 748,
<<<<<<< HEAD
                                    "src": "9801:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                    "src": "9165:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "struct DirectedGraph.Graph storage pointer"
                                    }
                                  },
                                  "id": 1067,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nodes",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 3140,
                                  "src": "9801:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$3127_storage_$",
=======
                                  "referencedDeclaration": 1672,
                                  "src": "9165:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$1659_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                  }
                                },
                                "id": 1069,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1068,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 796,
<<<<<<< HEAD
                                  "src": "9813:1:0",
=======
                                  "src": "9177:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
<<<<<<< HEAD
                                "src": "9801:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Node_$3127_storage",
=======
                                "src": "9165:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Node_$1659_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct DirectedGraph.Node storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                              "src": "9765:50:0"
=======
                              "src": "9129:50:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            {
                              "body": {
                                "id": 1109,
                                "nodeType": "Block",
<<<<<<< HEAD
                                "src": "9888:236:0",
=======
                                "src": "9251:231:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "statements": [
                                  {
                                    "assignments": [
                                      1087
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1087,
                                        "name": "edge",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1109,
<<<<<<< HEAD
                                        "src": "9911:31:0",
                                        "stateVariable": false,
                                        "storageLocation": "storage",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                        "src": "9273:31:0",
                                        "stateVariable": false,
                                        "storageLocation": "storage",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct DirectedGraph.Edge"
                                        },
                                        "typeName": {
                                          "contractScope": null,
                                          "id": 1086,
                                          "name": "DirectedGraph.Edge",
                                          "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                          "referencedDeclaration": 3134,
                                          "src": "9911:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                          "referencedDeclaration": 1666,
                                          "src": "9273:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct DirectedGraph.Edge"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1098,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1088,
                                          "name": "graph",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 748,
<<<<<<< HEAD
                                          "src": "9945:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                          "src": "9307:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct DirectedGraph.Graph storage pointer"
                                          }
                                        },
                                        "id": 1089,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "edges",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3146,
                                        "src": "9945:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$3134_storage_$",
=======
                                        "referencedDeclaration": 1678,
                                        "src": "9307:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$1666_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                        }
                                      },
                                      "id": 1097,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "id": 1094,
                                                "name": "j",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1072,
<<<<<<< HEAD
                                                "src": "10018:1:0",
=======
                                                "src": "9379:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1091,
                                                  "name": "y_node",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1065,
<<<<<<< HEAD
                                                  "src": "9991:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                  "src": "9352:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "struct DirectedGraph.Node storage pointer"
                                                  }
                                                },
                                                "id": 1092,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "edgesOut",
                                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                "referencedDeclaration": 3122,
                                                "src": "9991:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                                "referencedDeclaration": 1654,
                                                "src": "9352:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                }
                                              },
                                              "id": 1093,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "keyAtIndex",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 4079,
                                              "src": "9991:26:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                              "referencedDeclaration": 2611,
                                              "src": "9352:26:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                              }
                                            },
                                            "id": 1095,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                                            "src": "9991:29:0",
=======
                                            "src": "9352:29:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "id": 1090,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                          "src": "9983:7:0",
=======
                                          "src": "9344:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": "uint256"
                                        },
                                        "id": 1096,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                                        "src": "9983:38:0",
=======
                                        "src": "9344:38:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                                      "src": "9945:99:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$3134_storage",
=======
                                      "src": "9307:97:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$1666_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct DirectedGraph.Edge storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                    "src": "9911:133:0"
=======
                                    "src": "9273:131:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1102,
                                            "name": "edge",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1087,
<<<<<<< HEAD
                                            "src": "10076:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                            "src": "9435:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Edge storage pointer"
                                            }
                                          },
                                          "id": 1103,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "target",
                                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                                          "referencedDeclaration": 3131,
                                          "src": "10076:11:0",
=======
                                          "referencedDeclaration": 1663,
                                          "src": "9435:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1104,
                                              "name": "EMap",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
<<<<<<< HEAD
                                              "referencedDeclaration": 3912,
                                              "src": "10089:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                              "referencedDeclaration": 2444,
                                              "src": "9448:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "type(library EMap)"
                                              }
                                            },
                                            "id": 1105,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "Label",
                                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                                            "referencedDeclaration": 3723,
                                            "src": "10089:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                            "referencedDeclaration": 2255,
                                            "src": "9448:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "type(enum EMap.Label)"
                                            }
                                          },
                                          "id": 1106,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "OUT",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
<<<<<<< HEAD
                                          "src": "10089:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$3723",
=======
                                          "src": "9448:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "enum EMap.Label"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
<<<<<<< HEAD
                                            "typeIdentifier": "t_enum$_Label_$3723",
=======
                                            "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "enum EMap.Label"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1099,
                                          "name": "lab1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1018,
<<<<<<< HEAD
                                          "src": "10067:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                          "src": "9426:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct EMap.LabelMap storage pointer"
                                          }
                                        },
                                        "id": 1101,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "set",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3751,
                                        "src": "10067:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$_t_enum$_Label_$3723_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                        "referencedDeclaration": 2283,
                                        "src": "9426:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$_t_enum$_Label_$2255_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                        }
                                      },
                                      "id": 1107,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "10067:37:0",
=======
                                      "src": "9426:37:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1108,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "10067:37:0"
=======
                                    "src": "9426:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ]
                              },
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1075,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1072,
<<<<<<< HEAD
                                  "src": "9854:1:0",
=======
                                  "src": "9217:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1076,
                                        "name": "y_node",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1065,
<<<<<<< HEAD
                                        "src": "9858:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                        "src": "9221:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct DirectedGraph.Node storage pointer"
                                        }
                                      },
                                      "id": 1077,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "edgesOut",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 3122,
                                      "src": "9858:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                      "referencedDeclaration": 1654,
                                      "src": "9221:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                      }
                                    },
                                    "id": 1078,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "count",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 4036,
                                    "src": "9858:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                    "referencedDeclaration": 2568,
                                    "src": "9221:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                    }
                                  },
                                  "id": 1079,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "9858:23:0",
=======
                                  "src": "9221:23:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
<<<<<<< HEAD
                                "src": "9854:27:0",
=======
                                "src": "9217:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1110,
                              "initializationExpression": {
                                "assignments": [
                                  1072
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1072,
                                    "name": "j",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1110,
<<<<<<< HEAD
                                    "src": "9839:9:0",
=======
                                    "src": "9202:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1071,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                      "src": "9839:7:0",
=======
                                      "src": "9202:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1074,
                                "initialValue": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
<<<<<<< HEAD
                                  "src": "9851:1:0",
=======
                                  "src": "9214:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                "src": "9839:13:0"
=======
                                "src": "9202:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              "loopExpression": {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1082,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
<<<<<<< HEAD
                                  "src": "9883:3:0",
=======
                                  "src": "9246:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "id": 1081,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
<<<<<<< HEAD
                                    "src": "9883:1:0",
=======
                                    "src": "9246:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1083,
                                "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                "src": "9883:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "9834:290:0"
=======
                                "src": "9246:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "9197:285:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1111,
                                    "name": "flags",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 764,
<<<<<<< HEAD
                                    "src": "10186:5:0",
=======
                                    "src": "9542:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 1113,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "33",
                                    "id": 1112,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "10192:1:0",
=======
                                    "src": "9548:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "10186:8:0",
=======
                                  "src": "9542:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "66616c7365",
                                  "id": 1114,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
<<<<<<< HEAD
                                  "src": "10197:5:0",
=======
                                  "src": "9553:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
<<<<<<< HEAD
                                "src": "10186:16:0",
=======
                                "src": "9542:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1116,
                              "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                              "src": "10186:16:0"
=======
                              "src": "9542:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            {
                              "body": {
                                "id": 1262,
                                "nodeType": "Block",
<<<<<<< HEAD
                                "src": "10369:1566:0",
=======
                                "src": "9720:1534:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "statements": [
                                  {
                                    "assignments": [
                                      1138
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1138,
                                        "name": "edge",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1262,
<<<<<<< HEAD
                                        "src": "10392:31:0",
                                        "stateVariable": false,
                                        "storageLocation": "storage",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                        "src": "9742:31:0",
                                        "stateVariable": false,
                                        "storageLocation": "storage",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct DirectedGraph.Edge"
                                        },
                                        "typeName": {
                                          "contractScope": null,
                                          "id": 1137,
                                          "name": "DirectedGraph.Edge",
                                          "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                          "referencedDeclaration": 3134,
                                          "src": "10392:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                          "referencedDeclaration": 1666,
                                          "src": "9742:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct DirectedGraph.Edge"
                                          }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1149,
                                    "initialValue": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1139,
                                          "name": "graph",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 748,
<<<<<<< HEAD
                                          "src": "10426:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                          "src": "9776:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct DirectedGraph.Graph storage pointer"
                                          }
                                        },
                                        "id": 1140,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "edges",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3146,
                                        "src": "10426:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$3134_storage_$",
=======
                                        "referencedDeclaration": 1678,
                                        "src": "9776:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$1666_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                        }
                                      },
                                      "id": 1148,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "id": 1145,
                                                "name": "j",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1118,
<<<<<<< HEAD
                                                "src": "10498:1:0",
=======
                                                "src": "9847:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1142,
                                                  "name": "y_node",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1065,
<<<<<<< HEAD
                                                  "src": "10472:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                  "src": "9821:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "struct DirectedGraph.Node storage pointer"
                                                  }
                                                },
                                                "id": 1143,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "edgesIn",
                                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                "referencedDeclaration": 3120,
                                                "src": "10472:14:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                                "referencedDeclaration": 1652,
                                                "src": "9821:14:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                }
                                              },
                                              "id": 1144,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "keyAtIndex",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 4079,
                                              "src": "10472:25:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                              "referencedDeclaration": 2611,
                                              "src": "9821:25:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                              }
                                            },
                                            "id": 1146,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                                            "src": "10472:28:0",
=======
                                            "src": "9821:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "id": 1141,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                          "src": "10464:7:0",
=======
                                          "src": "9813:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": "uint256"
                                        },
                                        "id": 1147,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                                        "src": "10464:37:0",
=======
                                        "src": "9813:37:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                                      "src": "10426:98:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$3134_storage",
=======
                                      "src": "9776:96:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Edge_$1666_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct DirectedGraph.Edge storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                    "src": "10392:132:0"
=======
                                    "src": "9742:130:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 1168,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
<<<<<<< HEAD
                                          "typeIdentifier": "t_enum$_Label_$3723",
=======
                                          "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "enum EMap.Label"
                                        },
                                        "id": 1158,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1152,
                                                "name": "edge",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1138,
<<<<<<< HEAD
                                                "src": "10674:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                "src": "10019:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Edge storage pointer"
                                                }
                                              },
                                              "id": 1153,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "source",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 3129,
                                              "src": "10674:11:0",
=======
                                              "referencedDeclaration": 1661,
                                              "src": "10019:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1150,
                                              "name": "lab1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1018,
<<<<<<< HEAD
                                              "src": "10665:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                              "src": "10010:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "struct EMap.LabelMap storage pointer"
                                              }
                                            },
                                            "id": 1151,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "get",
                                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                                            "referencedDeclaration": 3886,
                                            "src": "10665:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                            "referencedDeclaration": 2418,
                                            "src": "10010:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                            }
                                          },
                                          "id": 1154,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                                          "src": "10665:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$3723",
=======
                                          "src": "10010:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "enum EMap.Label"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1155,
                                              "name": "EMap",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
<<<<<<< HEAD
                                              "referencedDeclaration": 3912,
                                              "src": "10690:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                              "referencedDeclaration": 2444,
                                              "src": "10035:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "type(library EMap)"
                                              }
                                            },
                                            "id": 1156,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "Label",
                                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                                            "referencedDeclaration": 3723,
                                            "src": "10690:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                            "referencedDeclaration": 2255,
                                            "src": "10035:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "type(enum EMap.Label)"
                                            }
                                          },
                                          "id": 1157,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "UNDEC",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
<<<<<<< HEAD
                                          "src": "10690:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$3723",
                                            "typeString": "enum EMap.Label"
                                          }
                                        },
                                        "src": "10665:41:0",
=======
                                          "src": "10035:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$2255",
                                            "typeString": "enum EMap.Label"
                                          }
                                        },
                                        "src": "10010:41:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
<<<<<<< HEAD
                                          "typeIdentifier": "t_enum$_Label_$3723",
=======
                                          "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "enum EMap.Label"
                                        },
                                        "id": 1167,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1161,
                                                "name": "edge",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1138,
<<<<<<< HEAD
                                                "src": "10744:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                "src": "10088:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Edge storage pointer"
                                                }
                                              },
                                              "id": 1162,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "source",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 3129,
                                              "src": "10744:11:0",
=======
                                              "referencedDeclaration": 1661,
                                              "src": "10088:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1159,
                                              "name": "lab1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1018,
<<<<<<< HEAD
                                              "src": "10735:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                              "src": "10079:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "struct EMap.LabelMap storage pointer"
                                              }
                                            },
                                            "id": 1160,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "get",
                                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                                            "referencedDeclaration": 3886,
                                            "src": "10735:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                            "referencedDeclaration": 2418,
                                            "src": "10079:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                            }
                                          },
                                          "id": 1163,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                                          "src": "10735:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$3723",
=======
                                          "src": "10079:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "enum EMap.Label"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1164,
                                              "name": "EMap",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
<<<<<<< HEAD
                                              "referencedDeclaration": 3912,
                                              "src": "10760:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                              "referencedDeclaration": 2444,
                                              "src": "10104:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "type(library EMap)"
                                              }
                                            },
                                            "id": 1165,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "Label",
                                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                                            "referencedDeclaration": 3723,
                                            "src": "10760:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                            "referencedDeclaration": 2255,
                                            "src": "10104:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "type(enum EMap.Label)"
                                            }
                                          },
                                          "id": 1166,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "BLANK",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
<<<<<<< HEAD
                                          "src": "10760:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$3723",
                                            "typeString": "enum EMap.Label"
                                          }
                                        },
                                        "src": "10735:41:0",
=======
                                          "src": "10104:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Label_$2255",
                                            "typeString": "enum EMap.Label"
                                          }
                                        },
                                        "src": "10079:41:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
<<<<<<< HEAD
                                      "src": "10665:111:0",
=======
                                      "src": "10010:110:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": null,
                                    "id": 1261,
                                    "nodeType": "IfStatement",
<<<<<<< HEAD
                                    "src": "10635:1281:0",
                                    "trueBody": {
                                      "id": 1260,
                                      "nodeType": "Block",
                                      "src": "10800:1116:0",
=======
                                    "src": "9981:1255:0",
                                    "trueBody": {
                                      "id": 1260,
                                      "nodeType": "Block",
                                      "src": "10143:1093:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1172,
                                                  "name": "edge",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1138,
<<<<<<< HEAD
                                                  "src": "10836:4:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                  "src": "10178:4:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "struct DirectedGraph.Edge storage pointer"
                                                  }
                                                },
                                                "id": 1173,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "source",
                                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                "referencedDeclaration": 3129,
                                                "src": "10836:11:0",
=======
                                                "referencedDeclaration": 1661,
                                                "src": "10178:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 1174,
                                                    "name": "EMap",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
<<<<<<< HEAD
                                                    "referencedDeclaration": 3912,
                                                    "src": "10849:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                                    "referencedDeclaration": 2444,
                                                    "src": "10191:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "type(library EMap)"
                                                    }
                                                  },
                                                  "id": 1175,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "Label",
                                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3723,
                                                  "src": "10849:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                                  "referencedDeclaration": 2255,
                                                  "src": "10191:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "type(enum EMap.Label)"
                                                  }
                                                },
                                                "id": 1176,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "MUST_OUT",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
<<<<<<< HEAD
                                                "src": "10849:19:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                "src": "10191:19:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "enum EMap.Label"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
<<<<<<< HEAD
                                                  "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                  "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "enum EMap.Label"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1169,
                                                "name": "lab1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1018,
<<<<<<< HEAD
                                                "src": "10827:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                                "src": "10169:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct EMap.LabelMap storage pointer"
                                                }
                                              },
                                              "id": 1171,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "set",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 3751,
                                              "src": "10827:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$_t_enum$_Label_$3723_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                              "referencedDeclaration": 2283,
                                              "src": "10169:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$_t_enum$_Label_$2255_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                              }
                                            },
                                            "id": 1177,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                                            "src": "10827:42:0",
=======
                                            "src": "10169:42:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1178,
                                          "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                          "src": "10827:42:0"
=======
                                          "src": "10169:42:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        },
                                        {
                                          "assignments": [
                                            1182
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 1182,
                                              "name": "z_node",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 1260,
<<<<<<< HEAD
                                              "src": "10988:33:0",
                                              "stateVariable": false,
                                              "storageLocation": "storage",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                              "src": "10328:33:0",
                                              "stateVariable": false,
                                              "storageLocation": "storage",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "struct DirectedGraph.Node"
                                              },
                                              "typeName": {
                                                "contractScope": null,
                                                "id": 1181,
                                                "name": "DirectedGraph.Node",
                                                "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                                "referencedDeclaration": 3127,
                                                "src": "10988:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                "referencedDeclaration": 1659,
                                                "src": "10328:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Node"
                                                }
                                              },
                                              "value": null,
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 1188,
                                          "initialValue": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1183,
                                                "name": "graph",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 748,
<<<<<<< HEAD
                                                "src": "11024:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                                "src": "10364:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Graph storage pointer"
                                                }
                                              },
                                              "id": 1184,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "nodes",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 3140,
                                              "src": "11024:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$3127_storage_$",
=======
                                              "referencedDeclaration": 1672,
                                              "src": "10364:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Node_$1659_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                              }
                                            },
                                            "id": 1187,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1185,
                                                "name": "edge",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1138,
<<<<<<< HEAD
                                                "src": "11066:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                "src": "10405:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Edge storage pointer"
                                                }
                                              },
                                              "id": 1186,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "source",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 3129,
                                              "src": "11066:11:0",
=======
                                              "referencedDeclaration": 1661,
                                              "src": "10405:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                                            "src": "11024:80:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Node_$3127_storage",
=======
                                            "src": "10364:78:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Node_$1659_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Node storage ref"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                          "src": "10988:116:0"
=======
                                          "src": "10328:114:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        },
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1193,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1189,
                                                "name": "flags",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 764,
<<<<<<< HEAD
                                                "src": "11131:5:0",
=======
                                                "src": "10468:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                                  "typeString": "bool[] memory"
                                                }
                                              },
                                              "id": 1191,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "33",
                                                "id": 1190,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
<<<<<<< HEAD
                                                "src": "11137:1:0",
=======
                                                "src": "10474:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_3_by_1",
                                                  "typeString": "int_const 3"
                                                },
                                                "value": "3"
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                                              "src": "11131:8:0",
=======
                                              "src": "10468:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "argumentTypes": null,
                                              "hexValue": "74727565",
                                              "id": 1192,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "bool",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
<<<<<<< HEAD
                                              "src": "11142:4:0",
=======
                                              "src": "10479:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "value": "true"
                                            },
<<<<<<< HEAD
                                            "src": "11131:15:0",
=======
                                            "src": "10468:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1194,
                                          "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                          "src": "11131:15:0"
=======
                                          "src": "10468:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        },
                                        {
                                          "body": {
                                            "id": 1244,
                                            "nodeType": "Block",
<<<<<<< HEAD
                                            "src": "11352:369:0",
=======
                                            "src": "10684:362:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "statements": [
                                              {
                                                "assignments": [
                                                  1215
                                                ],
                                                "declarations": [
                                                  {
                                                    "constant": false,
                                                    "id": 1215,
                                                    "name": "edgeZ",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 1244,
<<<<<<< HEAD
                                                    "src": "11383:32:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "storage",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                    "src": "10714:32:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "storage",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "struct DirectedGraph.Edge"
                                                    },
                                                    "typeName": {
                                                      "contractScope": null,
                                                      "id": 1214,
                                                      "name": "DirectedGraph.Edge",
                                                      "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3134,
                                                      "src": "11383:18:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                      "referencedDeclaration": 1666,
                                                      "src": "10714:18:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct DirectedGraph.Edge"
                                                      }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                  }
                                                ],
                                                "id": 1226,
                                                "initialValue": {
                                                  "argumentTypes": null,
                                                  "baseExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 1216,
                                                      "name": "graph",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 748,
<<<<<<< HEAD
                                                      "src": "11418:5:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                                      "src": "10749:5:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct DirectedGraph.Graph storage pointer"
                                                      }
                                                    },
                                                    "id": 1217,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "edges",
                                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                    "referencedDeclaration": 3146,
                                                    "src": "11418:11:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$3134_storage_$",
=======
                                                    "referencedDeclaration": 1678,
                                                    "src": "10749:11:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$1666_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                                    }
                                                  },
                                                  "id": 1225,
                                                  "indexExpression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "id": 1222,
                                                            "name": "k",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1196,
<<<<<<< HEAD
                                                            "src": "11498:1:0",
=======
                                                            "src": "10828:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                              "argumentTypes": null,
                                                              "id": 1219,
                                                              "name": "z_node",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 1182,
<<<<<<< HEAD
                                                              "src": "11472:6:0",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                              "src": "10802:6:0",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                "typeString": "struct DirectedGraph.Node storage pointer"
                                                              }
                                                            },
                                                            "id": 1220,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "edgesIn",
                                                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                            "referencedDeclaration": 3120,
                                                            "src": "11472:14:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                                            "referencedDeclaration": 1652,
                                                            "src": "10802:14:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                            }
                                                          },
                                                          "id": 1221,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "keyAtIndex",
                                                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                          "referencedDeclaration": 4079,
                                                          "src": "11472:25:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                                          "referencedDeclaration": 2611,
                                                          "src": "10802:25:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                            "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                                          }
                                                        },
                                                        "id": 1223,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                        "src": "11472:28:0",
=======
                                                        "src": "10802:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes32",
                                                          "typeString": "bytes32"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_bytes32",
                                                          "typeString": "bytes32"
                                                        }
                                                      ],
                                                      "id": 1218,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                      "src": "11464:7:0",
=======
                                                      "src": "10794:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                        "typeString": "type(uint256)"
                                                      },
                                                      "typeName": "uint256"
                                                    },
                                                    "id": 1224,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                    "src": "11464:37:0",
=======
                                                    "src": "10794:37:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                                  "src": "11418:114:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Edge_$3134_storage",
=======
                                                  "src": "10749:112:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Edge_$1666_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "struct DirectedGraph.Edge storage ref"
                                                  }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                "src": "11383:149:0"
=======
                                                "src": "10714:147:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "condition": {
                                                  "argumentTypes": null,
                                                  "commonType": {
<<<<<<< HEAD
                                                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "enum EMap.Label"
                                                  },
                                                  "id": 1235,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 1229,
                                                          "name": "edgeZ",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1215,
<<<<<<< HEAD
                                                          "src": "11576:5:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                          "src": "10904:5:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                            "typeString": "struct DirectedGraph.Edge storage pointer"
                                                          }
                                                        },
                                                        "id": 1230,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "source",
                                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                        "referencedDeclaration": 3129,
                                                        "src": "11576:12:0",
=======
                                                        "referencedDeclaration": 1661,
                                                        "src": "10904:12:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 1227,
                                                        "name": "lab1",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1018,
<<<<<<< HEAD
                                                        "src": "11567:4:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                                        "src": "10895:4:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeString": "struct EMap.LabelMap storage pointer"
                                                        }
                                                      },
                                                      "id": 1228,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "get",
                                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3886,
                                                      "src": "11567:8:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                                      "referencedDeclaration": 2418,
                                                      "src": "10895:8:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                      }
                                                    },
                                                    "id": 1231,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                    "src": "11567:22:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                    "src": "10895:22:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "enum EMap.Label"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 1232,
                                                        "name": "EMap",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
<<<<<<< HEAD
                                                        "referencedDeclaration": 3912,
                                                        "src": "11593:4:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                                        "referencedDeclaration": 2444,
                                                        "src": "10921:4:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeString": "type(library EMap)"
                                                        }
                                                      },
                                                      "id": 1233,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "Label",
                                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3723,
                                                      "src": "11593:10:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                                      "referencedDeclaration": 2255,
                                                      "src": "10921:10:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "type(enum EMap.Label)"
                                                      }
                                                    },
                                                    "id": 1234,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "BLANK",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
<<<<<<< HEAD
                                                    "src": "11593:16:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_enum$_Label_$3723",
                                                      "typeString": "enum EMap.Label"
                                                    }
                                                  },
                                                  "src": "11567:42:0",
=======
                                                    "src": "10921:16:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_enum$_Label_$2255",
                                                      "typeString": "enum EMap.Label"
                                                    }
                                                  },
                                                  "src": "10895:42:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "falseBody": null,
                                                "id": 1243,
                                                "nodeType": "IfStatement",
<<<<<<< HEAD
                                                "src": "11563:131:0",
                                                "trueBody": {
                                                  "id": 1242,
                                                  "nodeType": "Block",
                                                  "src": "11611:83:0",
=======
                                                "src": "10891:129:0",
                                                "trueBody": {
                                                  "id": 1242,
                                                  "nodeType": "Block",
                                                  "src": "10939:81:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 1240,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftHandSide": {
                                                          "argumentTypes": null,
                                                          "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 1236,
                                                            "name": "flags",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 764,
<<<<<<< HEAD
                                                            "src": "11646:5:0",
=======
                                                            "src": "10973:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                                              "typeString": "bool[] memory"
                                                            }
                                                          },
                                                          "id": 1238,
                                                          "indexExpression": {
                                                            "argumentTypes": null,
                                                            "hexValue": "33",
                                                            "id": 1237,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
<<<<<<< HEAD
                                                            "src": "11652:1:0",
=======
                                                            "src": "10979:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_3_by_1",
                                                              "typeString": "int_const 3"
                                                            },
                                                            "value": "3"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": true,
                                                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                                                          "src": "11646:8:0",
=======
                                                          "src": "10973:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "Assignment",
                                                        "operator": "=",
                                                        "rightHandSide": {
                                                          "argumentTypes": null,
                                                          "hexValue": "66616c7365",
                                                          "id": 1239,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "bool",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
<<<<<<< HEAD
                                                          "src": "11657:5:0",
=======
                                                          "src": "10984:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "subdenomination": null,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "value": "false"
                                                        },
<<<<<<< HEAD
                                                        "src": "11646:16:0",
=======
                                                        "src": "10973:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "id": 1241,
                                                      "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                                      "src": "11646:16:0"
=======
                                                      "src": "10973:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 1208,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1204,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "id": 1199,
                                                "name": "k",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1196,
<<<<<<< HEAD
                                                "src": "11252:1:0",
=======
                                                "src": "10586:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "<",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 1200,
                                                      "name": "z_node",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1182,
<<<<<<< HEAD
                                                      "src": "11256:6:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                      "src": "10590:6:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct DirectedGraph.Node storage pointer"
                                                      }
                                                    },
                                                    "id": 1201,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "edgesIn",
                                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                    "referencedDeclaration": 3120,
                                                    "src": "11256:14:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                                    "referencedDeclaration": 1652,
                                                    "src": "10590:14:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                    }
                                                  },
                                                  "id": 1202,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "count",
                                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                  "referencedDeclaration": 4036,
                                                  "src": "11256:20:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                                  "referencedDeclaration": 2568,
                                                  "src": "10590:20:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                                  }
                                                },
                                                "id": 1203,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                "src": "11256:22:0",
=======
                                                "src": "10590:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
<<<<<<< HEAD
                                              "src": "11252:26:0",
=======
                                              "src": "10586:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "&&",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1205,
                                                "name": "flags",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 764,
<<<<<<< HEAD
                                                "src": "11282:5:0",
=======
                                                "src": "10616:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                                  "typeString": "bool[] memory"
                                                }
                                              },
                                              "id": 1207,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "33",
                                                "id": 1206,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
<<<<<<< HEAD
                                                "src": "11288:1:0",
=======
                                                "src": "10622:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_3_by_1",
                                                  "typeString": "int_const 3"
                                                },
                                                "value": "3"
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                                              "src": "11282:8:0",
=======
                                              "src": "10616:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
<<<<<<< HEAD
                                            "src": "11252:38:0",
=======
                                            "src": "10586:38:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1245,
                                          "initializationExpression": {
                                            "assignments": [
                                              1196
                                            ],
                                            "declarations": [
                                              {
                                                "constant": false,
                                                "id": 1196,
                                                "name": "k",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 1245,
<<<<<<< HEAD
                                                "src": "11208:9:0",
=======
                                                "src": "10543:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "typeName": {
                                                  "id": 1195,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                                  "src": "11208:7:0",
=======
                                                  "src": "10543:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "value": null,
                                                "visibility": "internal"
                                              }
                                            ],
                                            "id": 1198,
                                            "initialValue": {
                                              "argumentTypes": null,
                                              "hexValue": "30",
                                              "id": 1197,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
<<<<<<< HEAD
                                              "src": "11220:1:0",
=======
                                              "src": "10555:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                            "src": "11208:13:0"
=======
                                            "src": "10543:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          "loopExpression": {
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1210,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "UnaryOperation",
                                              "operator": "++",
                                              "prefix": false,
<<<<<<< HEAD
                                              "src": "11321:3:0",
=======
                                              "src": "10654:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "subExpression": {
                                                "argumentTypes": null,
                                                "id": 1209,
                                                "name": "k",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1196,
<<<<<<< HEAD
                                                "src": "11321:1:0",
=======
                                                "src": "10654:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1211,
                                            "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "11321:3:0"
                                          },
                                          "nodeType": "ForStatement",
                                          "src": "11173:548:0"
=======
                                            "src": "10654:3:0"
                                          },
                                          "nodeType": "ForStatement",
                                          "src": "10509:537:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        },
                                        {
                                          "condition": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 1246,
                                              "name": "flags",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 764,
<<<<<<< HEAD
                                              "src": "11751:5:0",
=======
                                              "src": "11075:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                                "typeString": "bool[] memory"
                                              }
                                            },
                                            "id": 1248,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "33",
                                              "id": 1247,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
<<<<<<< HEAD
                                              "src": "11757:1:0",
=======
                                              "src": "11081:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_3_by_1",
                                                "typeString": "int_const 3"
                                              },
                                              "value": "3"
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                                            "src": "11751:8:0",
=======
                                            "src": "11075:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": null,
                                          "id": 1259,
                                          "nodeType": "IfStatement",
<<<<<<< HEAD
                                          "src": "11747:146:0",
                                          "trueBody": {
                                            "id": 1258,
                                            "nodeType": "Block",
                                            "src": "11761:132:0",
=======
                                          "src": "11071:143:0",
                                          "trueBody": {
                                            "id": 1258,
                                            "nodeType": "Block",
                                            "src": "11085:129:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "id": 1252,
                                                      "name": "y",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 796,
<<<<<<< HEAD
                                                      "src": "11800:1:0",
=======
                                                      "src": "11123:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 1253,
                                                          "name": "EMap",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
<<<<<<< HEAD
                                                          "referencedDeclaration": 3912,
                                                          "src": "11803:4:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                                          "referencedDeclaration": 2444,
                                                          "src": "11126:4:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                            "typeString": "type(library EMap)"
                                                          }
                                                        },
                                                        "id": 1254,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "Label",
                                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                        "referencedDeclaration": 3723,
                                                        "src": "11803:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                                        "referencedDeclaration": 2255,
                                                        "src": "11126:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeString": "type(enum EMap.Label)"
                                                        }
                                                      },
                                                      "id": 1255,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "UNDEC",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
<<<<<<< HEAD
                                                      "src": "11803:16:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                      "src": "11126:16:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "enum EMap.Label"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      {
<<<<<<< HEAD
                                                        "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                        "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "enum EMap.Label"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 1249,
                                                      "name": "lab",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 756,
<<<<<<< HEAD
                                                      "src": "11792:3:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                                      "src": "11115:3:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct EMap.LabelMap storage pointer"
                                                      }
                                                    },
                                                    "id": 1251,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "set",
                                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                    "referencedDeclaration": 3751,
                                                    "src": "11792:7:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$_t_enum$_Label_$3723_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                                    "referencedDeclaration": 2283,
                                                    "src": "11115:7:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$_t_enum$_Label_$2255_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                                    }
                                                  },
                                                  "id": 1256,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                  "src": "11792:28:0",
=======
                                                  "src": "11115:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "id": 1257,
                                                "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                                "src": "11792:28:0"
=======
                                                "src": "11115:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 1121,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1118,
<<<<<<< HEAD
                                    "src": "10284:1:0",
=======
                                    "src": "9637:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1122,
                                          "name": "y_node",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1065,
<<<<<<< HEAD
                                          "src": "10288:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                          "src": "9641:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct DirectedGraph.Node storage pointer"
                                          }
                                        },
                                        "id": 1123,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "edgesIn",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3120,
                                        "src": "10288:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                        "referencedDeclaration": 1652,
                                        "src": "9641:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                        }
                                      },
                                      "id": 1124,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "count",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 4036,
                                      "src": "10288:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                      "referencedDeclaration": 2568,
                                      "src": "9641:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                      }
                                    },
                                    "id": 1125,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                                    "src": "10288:22:0",
=======
                                    "src": "9641:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
<<<<<<< HEAD
                                  "src": "10284:26:0",
=======
                                  "src": "9637:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1130,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
<<<<<<< HEAD
                                  "src": "10314:9:0",
=======
                                  "src": "9667:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1127,
                                      "name": "flags",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 764,
<<<<<<< HEAD
                                      "src": "10315:5:0",
=======
                                      "src": "9668:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                        "typeString": "bool[] memory"
                                      }
                                    },
                                    "id": 1129,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "33",
                                      "id": 1128,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
<<<<<<< HEAD
                                      "src": "10321:1:0",
=======
                                      "src": "9674:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                    "src": "10315:8:0",
=======
                                    "src": "9668:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
<<<<<<< HEAD
                                "src": "10284:39:0",
=======
                                "src": "9637:39:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1263,
                              "initializationExpression": {
                                "assignments": [
                                  1118
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1118,
                                    "name": "j",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1263,
<<<<<<< HEAD
                                    "src": "10248:9:0",
=======
                                    "src": "9602:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1117,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                      "src": "10248:7:0",
=======
                                      "src": "9602:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1120,
                                "initialValue": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
<<<<<<< HEAD
                                  "src": "10260:1:0",
=======
                                  "src": "9614:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                "src": "10248:13:0"
=======
                                "src": "9602:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              "loopExpression": {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1133,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
<<<<<<< HEAD
                                  "src": "10346:3:0",
=======
                                  "src": "9698:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "id": 1132,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1118,
<<<<<<< HEAD
                                    "src": "10346:1:0",
=======
                                    "src": "9698:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1134,
                                "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                "src": "10346:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "10221:1714:0"
=======
                                "src": "9698:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "9576:1678:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
<<<<<<< HEAD
                                "src": "11957:9:0",
=======
                                "src": "11275:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "subExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1264,
                                    "name": "flags",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 764,
<<<<<<< HEAD
                                    "src": "11958:5:0",
=======
                                    "src": "11276:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 1266,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "33",
                                    "id": 1265,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "11964:1:0",
=======
                                    "src": "11282:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "11958:8:0",
=======
                                  "src": "11276:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1368,
                              "nodeType": "IfStatement",
<<<<<<< HEAD
                              "src": "11953:1311:0",
                              "trueBody": {
                                "id": 1367,
                                "nodeType": "Block",
                                "src": "11968:1296:0",
=======
                              "src": "11271:1284:0",
                              "trueBody": {
                                "id": 1367,
                                "nodeType": "Block",
                                "src": "11286:1269:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1269,
                                          "name": "lab1Id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1011,
<<<<<<< HEAD
                                          "src": "12081:6:0",
=======
                                          "src": "11397:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1270,
                                          "name": "prefExtensionId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 740,
<<<<<<< HEAD
                                          "src": "12089:15:0",
=======
                                          "src": "11405:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1271,
                                          "name": "graphId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 742,
<<<<<<< HEAD
                                          "src": "12106:7:0",
=======
                                          "src": "11422:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1268,
                                        "name": "_findPreferredExtensions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1436,
<<<<<<< HEAD
                                        "src": "12056:24:0",
=======
                                        "src": "11372:24:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256,uint256,uint256)"
                                        }
                                      },
                                      "id": 1272,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "12056:58:0",
=======
                                      "src": "11372:58:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1273,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "12056:58:0"
=======
                                    "src": "11372:58:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1278,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1274,
                                          "name": "flags",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 764,
<<<<<<< HEAD
                                          "src": "12229:5:0",
=======
                                          "src": "11543:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                            "typeString": "bool[] memory"
                                          }
                                        },
                                        "id": 1276,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "34",
                                          "id": 1275,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
<<<<<<< HEAD
                                          "src": "12235:1:0",
=======
                                          "src": "11549:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_4_by_1",
                                            "typeString": "int_const 4"
                                          },
                                          "value": "4"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                                        "src": "12229:8:0",
=======
                                        "src": "11543:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "66616c7365",
                                        "id": 1277,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
<<<<<<< HEAD
                                        "src": "12240:5:0",
=======
                                        "src": "11554:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
<<<<<<< HEAD
                                      "src": "12229:16:0",
=======
                                      "src": "11543:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1279,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "12229:16:0"
=======
                                    "src": "11543:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "body": {
                                      "id": 1349,
                                      "nodeType": "Block",
<<<<<<< HEAD
                                      "src": "12432:620:0",
=======
                                      "src": "11741:608:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "statements": [
                                        {
                                          "assignments": [
                                            1301
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 1301,
                                              "name": "edge",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 1349,
<<<<<<< HEAD
                                              "src": "12459:31:0",
                                              "stateVariable": false,
                                              "storageLocation": "storage",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                              "src": "11767:31:0",
                                              "stateVariable": false,
                                              "storageLocation": "storage",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "struct DirectedGraph.Edge"
                                              },
                                              "typeName": {
                                                "contractScope": null,
                                                "id": 1300,
                                                "name": "DirectedGraph.Edge",
                                                "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                                                "referencedDeclaration": 3134,
                                                "src": "12459:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                "referencedDeclaration": 1666,
                                                "src": "11767:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Edge"
                                                }
                                              },
                                              "value": null,
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 1312,
                                          "initialValue": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1302,
                                                "name": "graph",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 748,
<<<<<<< HEAD
                                                "src": "12493:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Graph_$3147_storage_ptr",
=======
                                                "src": "11801:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Graph_$1679_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Graph storage pointer"
                                                }
                                              },
                                              "id": 1303,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "edges",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 3146,
                                              "src": "12493:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$3134_storage_$",
=======
                                              "referencedDeclaration": 1678,
                                              "src": "11801:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Edge_$1666_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                              }
                                            },
                                            "id": 1311,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "id": 1308,
                                                      "name": "j",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1281,
<<<<<<< HEAD
                                                      "src": "12569:1:0",
=======
                                                      "src": "11876:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 1305,
                                                        "name": "y_node",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1065,
<<<<<<< HEAD
                                                        "src": "12543:6:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                        "src": "11850:6:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeString": "struct DirectedGraph.Node storage pointer"
                                                        }
                                                      },
                                                      "id": 1306,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "edgesIn",
                                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3120,
                                                      "src": "12543:14:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                                      "referencedDeclaration": 1652,
                                                      "src": "11850:14:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                      }
                                                    },
                                                    "id": 1307,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "keyAtIndex",
                                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                    "referencedDeclaration": 4079,
                                                    "src": "12543:25:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                                    "referencedDeclaration": 2611,
                                                    "src": "11850:25:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                                    }
                                                  },
                                                  "id": 1309,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                  "src": "12543:28:0",
=======
                                                  "src": "11850:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                ],
                                                "id": 1304,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                "src": "12535:7:0",
=======
                                                "src": "11842:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": "uint256"
                                              },
                                              "id": 1310,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                                              "src": "12535:37:0",
=======
                                              "src": "11842:37:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                                            "src": "12493:106:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$3134_storage",
=======
                                            "src": "11801:104:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Edge_$1666_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct DirectedGraph.Edge storage ref"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                          "src": "12459:140:0"
=======
                                          "src": "11767:138:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        },
                                        {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 1331,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "commonType": {
<<<<<<< HEAD
                                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "enum EMap.Label"
                                              },
                                              "id": 1321,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 1315,
                                                      "name": "edge",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1301,
<<<<<<< HEAD
                                                      "src": "12760:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                      "src": "12063:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct DirectedGraph.Edge storage pointer"
                                                      }
                                                    },
                                                    "id": 1316,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "source",
                                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                    "referencedDeclaration": 3129,
                                                    "src": "12760:11:0",
=======
                                                    "referencedDeclaration": 1661,
                                                    "src": "12063:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 1313,
                                                    "name": "lab",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 756,
<<<<<<< HEAD
                                                    "src": "12752:3:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                                    "src": "12055:3:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "struct EMap.LabelMap storage pointer"
                                                    }
                                                  },
                                                  "id": 1314,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "get",
                                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3886,
                                                  "src": "12752:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                                  "referencedDeclaration": 2418,
                                                  "src": "12055:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                  }
                                                },
                                                "id": 1317,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                "src": "12752:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                "src": "12055:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 1318,
                                                    "name": "EMap",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
<<<<<<< HEAD
                                                    "referencedDeclaration": 3912,
                                                    "src": "12776:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                                    "referencedDeclaration": 2444,
                                                    "src": "12079:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "type(library EMap)"
                                                    }
                                                  },
                                                  "id": 1319,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "Label",
                                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3723,
                                                  "src": "12776:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                                  "referencedDeclaration": 2255,
                                                  "src": "12079:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "type(enum EMap.Label)"
                                                  }
                                                },
                                                "id": 1320,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "UNDEC",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
<<<<<<< HEAD
                                                "src": "12776:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$3723",
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "src": "12752:40:0",
=======
                                                "src": "12079:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$2255",
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "src": "12055:40:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "commonType": {
<<<<<<< HEAD
                                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "enum EMap.Label"
                                              },
                                              "id": 1330,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 1324,
                                                      "name": "edge",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1301,
<<<<<<< HEAD
                                                      "src": "12833:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$3134_storage_ptr",
=======
                                                      "src": "12135:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Edge_$1666_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct DirectedGraph.Edge storage pointer"
                                                      }
                                                    },
                                                    "id": 1325,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "source",
                                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                    "referencedDeclaration": 3129,
                                                    "src": "12833:11:0",
=======
                                                    "referencedDeclaration": 1661,
                                                    "src": "12135:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 1322,
                                                    "name": "lab",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 756,
<<<<<<< HEAD
                                                    "src": "12825:3:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                                    "src": "12127:3:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "struct EMap.LabelMap storage pointer"
                                                    }
                                                  },
                                                  "id": 1323,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "get",
                                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3886,
                                                  "src": "12825:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                                  "referencedDeclaration": 2418,
                                                  "src": "12127:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                  }
                                                },
                                                "id": 1326,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                "src": "12825:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                "src": "12127:20:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 1327,
                                                    "name": "EMap",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
<<<<<<< HEAD
                                                    "referencedDeclaration": 3912,
                                                    "src": "12849:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                                    "referencedDeclaration": 2444,
                                                    "src": "12151:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "type(library EMap)"
                                                    }
                                                  },
                                                  "id": 1328,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "Label",
                                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3723,
                                                  "src": "12849:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                                  "referencedDeclaration": 2255,
                                                  "src": "12151:10:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeString": "type(enum EMap.Label)"
                                                  }
                                                },
                                                "id": 1329,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "BLANK",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
<<<<<<< HEAD
                                                "src": "12849:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$3723",
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "src": "12825:40:0",
=======
                                                "src": "12151:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Label_$2255",
                                                  "typeString": "enum EMap.Label"
                                                }
                                              },
                                              "src": "12127:40:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
<<<<<<< HEAD
                                            "src": "12752:113:0",
=======
                                            "src": "12055:112:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": null,
                                          "id": 1348,
                                          "nodeType": "IfStatement",
<<<<<<< HEAD
                                          "src": "12718:311:0",
                                          "trueBody": {
                                            "id": 1347,
                                            "nodeType": "Block",
                                            "src": "12893:136:0",
=======
                                          "src": "12022:305:0",
                                          "trueBody": {
                                            "id": 1347,
                                            "nodeType": "Block",
                                            "src": "12194:133:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "id": 1335,
                                                      "name": "y",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 796,
<<<<<<< HEAD
                                                      "src": "12932:1:0",
=======
                                                      "src": "12232:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 1336,
                                                          "name": "EMap",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
<<<<<<< HEAD
                                                          "referencedDeclaration": 3912,
                                                          "src": "12935:4:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                                          "referencedDeclaration": 2444,
                                                          "src": "12235:4:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                            "typeString": "type(library EMap)"
                                                          }
                                                        },
                                                        "id": 1337,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "Label",
                                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                        "referencedDeclaration": 3723,
                                                        "src": "12935:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                                                        "referencedDeclaration": 2255,
                                                        "src": "12235:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeString": "type(enum EMap.Label)"
                                                        }
                                                      },
                                                      "id": 1338,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "MUST_OUT",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
<<<<<<< HEAD
                                                      "src": "12935:19:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                      "src": "12235:19:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "enum EMap.Label"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      {
<<<<<<< HEAD
                                                        "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                        "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "enum EMap.Label"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 1332,
                                                      "name": "lab",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 756,
<<<<<<< HEAD
                                                      "src": "12924:3:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                                      "src": "12224:3:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "struct EMap.LabelMap storage pointer"
                                                      }
                                                    },
                                                    "id": 1334,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "set",
                                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                                    "referencedDeclaration": 3751,
                                                    "src": "12924:7:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$_t_enum$_Label_$3723_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                                                    "referencedDeclaration": 2283,
                                                    "src": "12224:7:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$_t_enum$_Label_$2255_$returns$_t_bool_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeString": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                                    }
                                                  },
                                                  "id": 1339,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                                  "src": "12924:31:0",
=======
                                                  "src": "12224:31:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "id": 1340,
                                                "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                                "src": "12924:31:0"
=======
                                                "src": "12224:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1345,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "baseExpression": {
                                                      "argumentTypes": null,
                                                      "id": 1341,
                                                      "name": "flags",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 764,
<<<<<<< HEAD
                                                      "src": "12986:5:0",
=======
                                                      "src": "12285:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                                        "typeString": "bool[] memory"
                                                      }
                                                    },
                                                    "id": 1343,
                                                    "indexExpression": {
                                                      "argumentTypes": null,
                                                      "hexValue": "34",
                                                      "id": 1342,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
<<<<<<< HEAD
                                                      "src": "12992:1:0",
=======
                                                      "src": "12291:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_4_by_1",
                                                        "typeString": "int_const 4"
                                                      },
                                                      "value": "4"
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                                                    "src": "12986:8:0",
=======
                                                    "src": "12285:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "74727565",
                                                    "id": 1344,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
<<<<<<< HEAD
                                                    "src": "12997:4:0",
=======
                                                    "src": "12296:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                  },
<<<<<<< HEAD
                                                  "src": "12986:15:0",
=======
                                                  "src": "12285:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "id": 1346,
                                                "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                                "src": "12986:15:0"
=======
                                                "src": "12285:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 1294,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1289,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 1284,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1281,
<<<<<<< HEAD
                                          "src": "12339:1:0",
=======
                                          "src": "11650:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1285,
                                                "name": "y_node",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1065,
<<<<<<< HEAD
                                                "src": "12343:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Node_$3127_storage_ptr",
=======
                                                "src": "11654:6:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Node_$1659_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "struct DirectedGraph.Node storage pointer"
                                                }
                                              },
                                              "id": 1286,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "edgesIn",
                                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                                              "referencedDeclaration": 3120,
                                              "src": "12343:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                                              "referencedDeclaration": 1652,
                                              "src": "11654:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                              }
                                            },
                                            "id": 1287,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "count",
                                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                                            "referencedDeclaration": 4036,
                                            "src": "12343:20:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                            "referencedDeclaration": 2568,
                                            "src": "11654:20:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                            }
                                          },
                                          "id": 1288,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                                          "src": "12343:22:0",
=======
                                          "src": "11654:22:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
<<<<<<< HEAD
                                        "src": "12339:26:0",
=======
                                        "src": "11650:26:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "id": 1293,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
<<<<<<< HEAD
                                        "src": "12369:9:0",
=======
                                        "src": "11680:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "subExpression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 1290,
                                            "name": "flags",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 764,
<<<<<<< HEAD
                                            "src": "12370:5:0",
=======
                                            "src": "11681:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                              "typeString": "bool[] memory"
                                            }
                                          },
                                          "id": 1292,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "34",
                                            "id": 1291,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
<<<<<<< HEAD
                                            "src": "12376:1:0",
=======
                                            "src": "11687:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_4_by_1",
                                              "typeString": "int_const 4"
                                            },
                                            "value": "4"
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                                          "src": "12370:8:0",
=======
                                          "src": "11681:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
<<<<<<< HEAD
                                      "src": "12339:39:0",
=======
                                      "src": "11650:39:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1350,
                                    "initializationExpression": {
                                      "assignments": [
                                        1281
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 1281,
                                          "name": "j",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 1350,
<<<<<<< HEAD
                                          "src": "12299:9:0",
=======
                                          "src": "11611:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 1280,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                            "src": "12299:7:0",
=======
                                            "src": "11611:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "value": null,
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 1283,
                                      "initialValue": {
                                        "argumentTypes": null,
                                        "hexValue": "30",
                                        "id": 1282,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
<<<<<<< HEAD
                                        "src": "12311:1:0",
=======
                                        "src": "11623:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                                      "src": "12299:13:0"
=======
                                      "src": "11611:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    },
                                    "loopExpression": {
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1296,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
<<<<<<< HEAD
                                        "src": "12405:3:0",
=======
                                        "src": "11715:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "subExpression": {
                                          "argumentTypes": null,
                                          "id": 1295,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1281,
<<<<<<< HEAD
                                          "src": "12405:1:0",
=======
                                          "src": "11715:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1297,
                                      "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                      "src": "12405:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "12268:784:0"
=======
                                      "src": "11715:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "11581:768:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "condition": {
                                      "argumentTypes": null,
                                      "id": 1354,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
<<<<<<< HEAD
                                      "src": "13124:9:0",
=======
                                      "src": "12419:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "subExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1351,
                                          "name": "flags",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 764,
<<<<<<< HEAD
                                          "src": "13125:5:0",
=======
                                          "src": "12420:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                            "typeString": "bool[] memory"
                                          }
                                        },
                                        "id": 1353,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "34",
                                          "id": 1352,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
<<<<<<< HEAD
                                          "src": "13131:1:0",
=======
                                          "src": "12426:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_4_by_1",
                                            "typeString": "int_const 4"
                                          },
                                          "value": "4"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                                        "src": "13125:8:0",
=======
                                        "src": "12420:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": null,
                                    "id": 1366,
                                    "nodeType": "IfStatement",
<<<<<<< HEAD
                                    "src": "13120:125:0",
                                    "trueBody": {
                                      "id": 1365,
                                      "nodeType": "Block",
                                      "src": "13135:110:0",
=======
                                    "src": "12415:122:0",
                                    "trueBody": {
                                      "id": 1365,
                                      "nodeType": "Block",
                                      "src": "12430:107:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1359,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "argumentTypes": null,
                                              "id": 1355,
                                              "name": "lab",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 756,
<<<<<<< HEAD
                                              "src": "13162:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                              "src": "12456:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeString": "struct EMap.LabelMap storage pointer"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1356,
                                                "name": "labs",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 28,
<<<<<<< HEAD
                                                "src": "13168:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$3726_storage_$",
=======
                                                "src": "12462:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$2258_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "mapping(uint256 => struct EMap.LabelMap storage ref)"
                                                }
                                              },
                                              "id": 1358,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1357,
                                                "name": "lab1Id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1011,
<<<<<<< HEAD
                                                "src": "13173:6:0",
=======
                                                "src": "12467:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                                              "src": "13168:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelMap_$3726_storage",
                                                "typeString": "struct EMap.LabelMap storage ref"
                                              }
                                            },
                                            "src": "13162:18:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                                              "src": "12462:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_LabelMap_$2258_storage",
                                                "typeString": "struct EMap.LabelMap storage ref"
                                              }
                                            },
                                            "src": "12456:18:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeString": "struct EMap.LabelMap storage pointer"
                                            }
                                          },
                                          "id": 1360,
                                          "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                          "src": "13162:18:0"
=======
                                          "src": "12456:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        },
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1363,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "argumentTypes": null,
                                              "id": 1361,
                                              "name": "labId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 738,
<<<<<<< HEAD
                                              "src": "13207:5:0",
=======
                                              "src": "12500:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "argumentTypes": null,
                                              "id": 1362,
                                              "name": "lab1Id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1011,
<<<<<<< HEAD
                                              "src": "13215:6:0",
=======
                                              "src": "12508:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
<<<<<<< HEAD
                                            "src": "13207:14:0",
=======
                                            "src": "12500:14:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1364,
                                          "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                          "src": "13207:14:0"
=======
                                          "src": "12500:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 1370,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "6920:6359:0",
                        "trueBody": {
                          "id": 794,
                          "nodeType": "Block",
                          "src": "6940:50:0",
=======
                        "src": "6345:6224:0",
                        "trueBody": {
                          "id": 794,
                          "nodeType": "Block",
                          "src": "6365:48:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 788,
                                    "name": "flags",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 764,
<<<<<<< HEAD
                                    "src": "6959:5:0",
=======
                                    "src": "6383:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 790,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 789,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "6965:1:0",
=======
                                    "src": "6389:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "6959:8:0",
=======
                                  "src": "6383:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 791,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
<<<<<<< HEAD
                                  "src": "6970:4:0",
=======
                                  "src": "6394:4:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
<<<<<<< HEAD
                                "src": "6959:15:0",
=======
                                "src": "6383:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 793,
                              "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                              "src": "6959:15:0"
=======
                              "src": "6383:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
<<<<<<< HEAD
                    "src": "6816:9:0",
=======
                    "src": "6243:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 771,
                        "name": "flags",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
<<<<<<< HEAD
                        "src": "6817:5:0",
=======
                        "src": "6244:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[] memory"
                        }
                      },
                      "id": 773,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6823:1:0",
=======
                        "src": "6250:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "6817:8:0",
=======
                      "src": "6244:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1372,
                  "nodeType": "WhileStatement",
<<<<<<< HEAD
                  "src": "6809:6481:0"
=======
                  "src": "6236:6343:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "assignments": [
                    null,
                    1374
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 1374,
                      "name": "argMustOutIdsLen",
                      "nodeType": "VariableDeclaration",
                      "scope": 1435,
<<<<<<< HEAD
                      "src": "13350:24:0",
=======
                      "src": "12637:24:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1373,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "13350:7:0",
=======
                        "src": "12637:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1378,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1376,
                        "name": "labId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
<<<<<<< HEAD
                        "src": "13390:5:0",
=======
                        "src": "12677:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1375,
                      "name": "_getMustOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1574,
<<<<<<< HEAD
                      "src": "13378:11:0",
=======
                      "src": "12665:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256[] memory,uint256)"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "13378:18:0",
=======
                    "src": "12665:18:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(uint256[] memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "13347:49:0"
=======
                  "src": "12634:49:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1379,
                      "name": "argMustOutIdsLen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
<<<<<<< HEAD
                      "src": "13411:16:0",
=======
                      "src": "12697:16:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "13431:1:0",
=======
                      "src": "12717:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "13411:21:0",
=======
                    "src": "12697:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1434,
                  "nodeType": "IfStatement",
<<<<<<< HEAD
                  "src": "13407:576:0",
                  "trueBody": {
                    "id": 1433,
                    "nodeType": "Block",
                    "src": "13434:549:0",
=======
                  "src": "12693:564:0",
                  "trueBody": {
                    "id": 1433,
                    "nodeType": "Block",
                    "src": "12720:537:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "assignments": [
                          1385,
                          1387
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1385,
                            "name": "argInIds",
                            "nodeType": "VariableDeclaration",
                            "scope": 1433,
<<<<<<< HEAD
                            "src": "13491:25:0",
=======
                            "src": "12775:25:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1383,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "13491:7:0",
=======
                                "src": "12775:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1384,
                              "length": null,
                              "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                              "src": "13491:9:0",
=======
                              "src": "12775:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1387,
                            "name": "argINIdsLen",
                            "nodeType": "VariableDeclaration",
                            "scope": 1433,
<<<<<<< HEAD
                            "src": "13518:19:0",
=======
                            "src": "12802:19:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1386,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "13518:7:0",
=======
                              "src": "12802:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1391,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1389,
                              "name": "labId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
<<<<<<< HEAD
                              "src": "13548:5:0",
=======
                              "src": "12832:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1388,
                            "name": "_getIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1643,
<<<<<<< HEAD
                            "src": "13541:6:0",
=======
                            "src": "12825:6:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256[] memory,uint256)"
                            }
                          },
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "13541:13:0",
=======
                          "src": "12825:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(uint256[] memory,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "13490:64:0"
=======
                        "src": "12774:64:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "assignments": [
                          1395
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1395,
                            "name": "ext",
                            "nodeType": "VariableDeclaration",
                            "scope": 1433,
<<<<<<< HEAD
                            "src": "13659:42:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                            "src": "12941:42:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct HitchensUnorderedKeySetLib.Set"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1394,
                              "name": "HitchensUnorderedKeySetLib.Set",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3922,
                              "src": "13659:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                              "referencedDeclaration": 2454,
                              "src": "12941:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct HitchensUnorderedKeySetLib.Set"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1399,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1396,
                            "name": "prefExtensions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
<<<<<<< HEAD
                            "src": "13704:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Set_$3922_storage_$",
=======
                            "src": "12986:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Set_$2454_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "mapping(uint256 => struct HitchensUnorderedKeySetLib.Set storage ref)"
                            }
                          },
                          "id": 1398,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1397,
                            "name": "prefExtensionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
<<<<<<< HEAD
                            "src": "13737:15:0",
=======
                            "src": "13018:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "13704:63:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$3922_storage",
=======
                          "src": "12986:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Set_$2454_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct HitchensUnorderedKeySetLib.Set storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "13659:108:0"
=======
                        "src": "12941:106:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "body": {
                          "id": 1431,
                          "nodeType": "Block",
<<<<<<< HEAD
                          "src": "13824:148:0",
=======
                          "src": "13103:144:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "id": 1418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
<<<<<<< HEAD
                                "src": "13847:33:0",
=======
                                "src": "13125:33:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "subExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 1413,
                                            "name": "argInIds",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1385,
<<<<<<< HEAD
                                            "src": "13867:8:0",
=======
                                            "src": "13145:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                              "typeString": "uint256[] memory"
                                            }
                                          },
                                          "id": 1415,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 1414,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1401,
<<<<<<< HEAD
                                            "src": "13876:1:0",
=======
                                            "src": "13154:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                                          "src": "13867:11:0",
=======
                                          "src": "13145:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1412,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                        "src": "13859:7:0",
=======
                                        "src": "13137:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes32_$",
                                          "typeString": "type(bytes32)"
                                        },
                                        "typeName": "bytes32"
                                      },
                                      "id": 1416,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "13859:20:0",
=======
                                      "src": "13137:20:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1410,
                                      "name": "ext",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1395,
<<<<<<< HEAD
                                      "src": "13848:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                                      "src": "13126:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                        "typeString": "struct HitchensUnorderedKeySetLib.Set storage pointer"
                                      }
                                    },
                                    "id": 1411,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "exists",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 4064,
                                    "src": "13848:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3922_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                    "referencedDeclaration": 2596,
                                    "src": "13126:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2454_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32) view returns (bool)"
                                    }
                                  },
                                  "id": 1417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "13848:32:0",
=======
                                  "src": "13126:32:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1430,
                              "nodeType": "IfStatement",
<<<<<<< HEAD
                              "src": "13843:114:0",
                              "trueBody": {
                                "id": 1429,
                                "nodeType": "Block",
                                "src": "13882:75:0",
=======
                              "src": "13121:112:0",
                              "trueBody": {
                                "id": 1429,
                                "nodeType": "Block",
                                "src": "13160:73:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1423,
                                                "name": "argInIds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1385,
<<<<<<< HEAD
                                                "src": "13924:8:0",
=======
                                                "src": "13201:8:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                  "typeString": "uint256[] memory"
                                                }
                                              },
                                              "id": 1425,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1424,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1401,
<<<<<<< HEAD
                                                "src": "13933:1:0",
=======
                                                "src": "13210:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                                              "src": "13924:11:0",
=======
                                              "src": "13201:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 1422,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                            "src": "13916:7:0",
=======
                                            "src": "13193:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bytes32_$",
                                              "typeString": "type(bytes32)"
                                            },
                                            "typeName": "bytes32"
                                          },
                                          "id": 1426,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                                          "src": "13916:20:0",
=======
                                          "src": "13193:20:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1419,
                                          "name": "ext",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1395,
<<<<<<< HEAD
                                          "src": "13905:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Set_$3922_storage_ptr",
=======
                                          "src": "13182:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Set_$2454_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                            "typeString": "struct HitchensUnorderedKeySetLib.Set storage pointer"
                                          }
                                        },
                                        "id": 1421,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "insert",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 3960,
                                        "src": "13905:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3922_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$3922_storage_ptr_$",
=======
                                        "referencedDeclaration": 2492,
                                        "src": "13182:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2454_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Set_$2454_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                                        }
                                      },
                                      "id": 1427,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                                      "src": "13905:32:0",
=======
                                      "src": "13182:32:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1428,
                                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "13905:32:0"
=======
                                    "src": "13182:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1404,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1401,
<<<<<<< HEAD
                            "src": "13802:1:0",
=======
                            "src": "13081:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1405,
                            "name": "argINIdsLen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1387,
<<<<<<< HEAD
                            "src": "13806:11:0",
=======
                            "src": "13085:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "13802:15:0",
=======
                          "src": "13081:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1432,
                        "initializationExpression": {
                          "assignments": [
                            1401
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1401,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 1432,
<<<<<<< HEAD
                              "src": "13787:9:0",
=======
                              "src": "13066:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1400,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "13787:7:0",
=======
                                "src": "13066:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 1403,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "13799:1:0",
=======
                            "src": "13078:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                          "src": "13787:13:0"
=======
                          "src": "13066:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 1408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
<<<<<<< HEAD
                            "src": "13819:3:0",
=======
                            "src": "13098:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 1407,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1401,
<<<<<<< HEAD
                              "src": "13819:1:0",
=======
                              "src": "13098:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1409,
                          "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                          "src": "13819:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "13782:190:0"
=======
                          "src": "13098:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "13061:186:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1436,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_findPreferredExtensions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "name": "labId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1436,
<<<<<<< HEAD
                  "src": "6500:13:0",
=======
                  "src": "5936:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "6500:7:0",
=======
                    "src": "5936:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "name": "prefExtensionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1436,
<<<<<<< HEAD
                  "src": "6524:23:0",
=======
                  "src": "5959:23:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "6524:7:0",
=======
                    "src": "5959:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 742,
                  "name": "graphId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1436,
<<<<<<< HEAD
                  "src": "6558:15:0",
=======
                  "src": "5992:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "6558:7:0",
=======
                    "src": "5992:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6489:91:0"
=======
              "src": "5926:87:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "6589:0:0"
            },
            "scope": 1644,
            "src": "6456:7534:0",
=======
              "src": "6022:0:0"
            },
            "scope": 1644,
            "src": "5893:7370:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1504,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "14138:384:0",
=======
              "src": "13405:374:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "assignments": [
                    1449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1449,
                      "name": "lab",
                      "nodeType": "VariableDeclaration",
                      "scope": 1504,
<<<<<<< HEAD
                      "src": "14149:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                      "src": "13415:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct EMap.LabelMap"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1448,
                        "name": "EMap.LabelMap",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3726,
                        "src": "14149:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                        "referencedDeclaration": 2258,
                        "src": "13415:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.LabelMap"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1453,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1450,
                      "name": "labs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
<<<<<<< HEAD
                      "src": "14177:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$3726_storage_$",
=======
                      "src": "13443:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$2258_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct EMap.LabelMap storage ref)"
                      }
                    },
                    "id": 1452,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1451,
                      "name": "labId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1438,
<<<<<<< HEAD
                      "src": "14182:5:0",
=======
                      "src": "13448:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "14177:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage",
=======
                    "src": "13443:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "14149:39:0"
=======
                  "src": "13415:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1454,
                      "name": "argIdsTemp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1442,
<<<<<<< HEAD
                      "src": "14199:10:0",
=======
                      "src": "13464:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1458,
                              "name": "lab",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1449,
<<<<<<< HEAD
                              "src": "14226:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                              "src": "13491:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct EMap.LabelMap storage pointer"
                              }
                            },
                            "id": 1459,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3800,
                            "src": "14226:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                            "referencedDeclaration": 2332,
                            "src": "13491:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "function (struct EMap.LabelMap storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "14226:12:0",
=======
                          "src": "13491:12:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
<<<<<<< HEAD
                        "src": "14212:13:0",
=======
                        "src": "13477:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1455,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "14216:7:0",
=======
                            "src": "13481:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1456,
                          "length": null,
                          "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                          "src": "14216:9:0",
=======
                          "src": "13481:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 1461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "14212:27:0",
=======
                      "src": "13477:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                        "typeString": "uint256[] memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "14199:40:0",
=======
                    "src": "13464:40:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 1463,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "14199:40:0"
=======
                  "src": "13464:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1464,
                      "name": "argIdsLenTemp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1444,
<<<<<<< HEAD
                      "src": "14250:13:0",
=======
                      "src": "13514:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "14266:1:0",
=======
                      "src": "13530:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "14250:17:0",
=======
                    "src": "13514:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1467,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "14250:17:0"
=======
                  "src": "13514:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "body": {
                    "id": 1502,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "14326:189:0",
=======
                    "src": "13589:184:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "assignments": [
                          1480,
                          1482
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1480,
                            "name": "arg",
                            "nodeType": "VariableDeclaration",
                            "scope": 1502,
<<<<<<< HEAD
                            "src": "14342:11:0",
=======
                            "src": "13604:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1479,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "14342:7:0",
=======
                              "src": "13604:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1482,
                            "name": "argLabel",
                            "nodeType": "VariableDeclaration",
                            "scope": 1502,
<<<<<<< HEAD
                            "src": "14355:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$3723",
=======
                            "src": "13617:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "enum EMap.Label"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1481,
                              "name": "EMap.Label",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3723,
                              "src": "14355:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                              "referencedDeclaration": 2255,
                              "src": "13617:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "enum EMap.Label"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1487,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1485,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
<<<<<<< HEAD
                              "src": "14385:1:0",
=======
                              "src": "13647:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1483,
                              "name": "lab",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1449,
<<<<<<< HEAD
                              "src": "14378:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                              "src": "13640:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct EMap.LabelMap storage pointer"
                              }
                            },
                            "id": 1484,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "at",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3832,
                            "src": "14378:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                            "referencedDeclaration": 2364,
                            "src": "13640:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (uint256,enum EMap.Label)"
                            }
                          },
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "14378:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Label_$3723_$",
=======
                          "src": "13640:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "tuple(uint256,enum EMap.Label)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "14341:46:0"
=======
                        "src": "13603:46:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
<<<<<<< HEAD
                            "typeIdentifier": "t_enum$_Label_$3723",
=======
                            "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "enum EMap.Label"
                          },
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1488,
                            "name": "argLabel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1482,
<<<<<<< HEAD
                            "src": "14406:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$3723",
=======
                            "src": "13667:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "enum EMap.Label"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1489,
                                "name": "EMap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 3912,
                                "src": "14418:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                "referencedDeclaration": 2444,
                                "src": "13679:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "type(library EMap)"
                                }
                              },
                              "id": 1490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Label",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3723,
                              "src": "14418:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                              "referencedDeclaration": 2255,
                              "src": "13679:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "type(enum EMap.Label)"
                              }
                            },
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BLANK",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
<<<<<<< HEAD
                            "src": "14418:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$3723",
                              "typeString": "enum EMap.Label"
                            }
                          },
                          "src": "14406:28:0",
=======
                            "src": "13679:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$2255",
                              "typeString": "enum EMap.Label"
                            }
                          },
                          "src": "13667:28:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1501,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "14402:102:0",
                        "trueBody": {
                          "id": 1500,
                          "nodeType": "Block",
                          "src": "14436:68:0",
=======
                        "src": "13663:100:0",
                        "trueBody": {
                          "id": 1500,
                          "nodeType": "Block",
                          "src": "13697:66:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1493,
                                    "name": "argIdsTemp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1442,
<<<<<<< HEAD
                                    "src": "14455:10:0",
=======
                                    "src": "13715:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1496,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
<<<<<<< HEAD
                                    "src": "14466:15:0",
=======
                                    "src": "13726:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 1494,
                                      "name": "argIdsLenTemp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1444,
<<<<<<< HEAD
                                      "src": "14466:13:0",
=======
                                      "src": "13726:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "14455:27:0",
=======
                                  "src": "13715:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1497,
                                  "name": "arg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1480,
<<<<<<< HEAD
                                  "src": "14485:3:0",
=======
                                  "src": "13745:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
<<<<<<< HEAD
                                "src": "14455:33:0",
=======
                                "src": "13715:33:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1499,
                              "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                              "src": "14455:33:0"
=======
                              "src": "13715:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1472,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1469,
<<<<<<< HEAD
                      "src": "14298:1:0",
=======
                      "src": "13561:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1473,
                        "name": "argIdsTemp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1442,
<<<<<<< HEAD
                        "src": "14302:10:0",
=======
                        "src": "13565:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 1474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "14302:17:0",
=======
                      "src": "13565:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "14298:21:0",
=======
                    "src": "13561:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1503,
                  "initializationExpression": {
                    "assignments": [
                      1469
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1469,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1503,
<<<<<<< HEAD
                        "src": "14283:9:0",
=======
                        "src": "13546:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1468,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "14283:7:0",
=======
                          "src": "13546:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1471,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "14295:1:0",
=======
                      "src": "13558:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "14283:13:0"
=======
                    "src": "13546:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "14321:3:0",
=======
                      "src": "13584:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1476,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
<<<<<<< HEAD
                        "src": "14321:1:0",
=======
                        "src": "13584:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1478,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "14321:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "14278:237:0"
=======
                    "src": "13584:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "13541:232:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                }
              ]
            },
            "documentation": null,
            "id": 1505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getBlank",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1438,
                  "name": "labId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1505,
<<<<<<< HEAD
                  "src": "14017:13:0",
=======
                  "src": "13288:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "14017:7:0",
=======
                    "src": "13288:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "14016:15:0"
=======
              "src": "13287:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1442,
                  "name": "argIdsTemp",
                  "nodeType": "VariableDeclaration",
                  "scope": 1505,
<<<<<<< HEAD
                  "src": "14081:27:0",
=======
                  "src": "13349:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1440,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                      "src": "14081:7:0",
=======
                      "src": "13349:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1441,
                    "length": null,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                    "src": "14081:9:0",
=======
                    "src": "13349:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1444,
                  "name": "argIdsLenTemp",
                  "nodeType": "VariableDeclaration",
                  "scope": 1505,
<<<<<<< HEAD
                  "src": "14110:21:0",
=======
                  "src": "13378:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "14110:7:0",
=======
                    "src": "13378:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "14080:52:0"
            },
            "scope": 1644,
            "src": "13998:524:0",
=======
              "src": "13348:52:0"
            },
            "scope": 1644,
            "src": "13269:510:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1573,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "14672:387:0",
=======
              "src": "13923:377:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "assignments": [
                    1518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1518,
                      "name": "lab",
                      "nodeType": "VariableDeclaration",
                      "scope": 1573,
<<<<<<< HEAD
                      "src": "14683:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                      "src": "13933:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct EMap.LabelMap"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1517,
                        "name": "EMap.LabelMap",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3726,
                        "src": "14683:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                        "referencedDeclaration": 2258,
                        "src": "13933:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.LabelMap"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1522,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1519,
                      "name": "labs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
<<<<<<< HEAD
                      "src": "14711:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$3726_storage_$",
=======
                      "src": "13961:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$2258_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct EMap.LabelMap storage ref)"
                      }
                    },
                    "id": 1521,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1520,
                      "name": "labId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1507,
<<<<<<< HEAD
                      "src": "14716:5:0",
=======
                      "src": "13966:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "14711:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage",
=======
                    "src": "13961:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "14683:39:0"
=======
                  "src": "13933:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1523,
                      "name": "argIdsTemp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1511,
<<<<<<< HEAD
                      "src": "14733:10:0",
=======
                      "src": "13982:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1527,
                              "name": "lab",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1518,
<<<<<<< HEAD
                              "src": "14760:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                              "src": "14009:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct EMap.LabelMap storage pointer"
                              }
                            },
                            "id": 1528,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3800,
                            "src": "14760:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                            "referencedDeclaration": 2332,
                            "src": "14009:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "function (struct EMap.LabelMap storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "14760:12:0",
=======
                          "src": "14009:12:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
<<<<<<< HEAD
                        "src": "14746:13:0",
=======
                        "src": "13995:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1524,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "14750:7:0",
=======
                            "src": "13999:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1525,
                          "length": null,
                          "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                          "src": "14750:9:0",
=======
                          "src": "13999:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "14746:27:0",
=======
                      "src": "13995:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                        "typeString": "uint256[] memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "14733:40:0",
=======
                    "src": "13982:40:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 1532,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "14733:40:0"
=======
                  "src": "13982:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1533,
                      "name": "argIdsLenTemp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1513,
<<<<<<< HEAD
                      "src": "14784:13:0",
=======
                      "src": "14032:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "14800:1:0",
=======
                      "src": "14048:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "14784:17:0",
=======
                    "src": "14032:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1536,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "14784:17:0"
=======
                  "src": "14032:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "body": {
                    "id": 1571,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "14860:192:0",
=======
                    "src": "14107:187:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "assignments": [
                          1549,
                          1551
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1549,
                            "name": "arg",
                            "nodeType": "VariableDeclaration",
                            "scope": 1571,
<<<<<<< HEAD
                            "src": "14876:11:0",
=======
                            "src": "14122:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1548,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "14876:7:0",
=======
                              "src": "14122:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1551,
                            "name": "argLabel",
                            "nodeType": "VariableDeclaration",
                            "scope": 1571,
<<<<<<< HEAD
                            "src": "14889:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$3723",
=======
                            "src": "14135:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "enum EMap.Label"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1550,
                              "name": "EMap.Label",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3723,
                              "src": "14889:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                              "referencedDeclaration": 2255,
                              "src": "14135:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "enum EMap.Label"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1556,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1554,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1538,
<<<<<<< HEAD
                              "src": "14919:1:0",
=======
                              "src": "14165:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1552,
                              "name": "lab",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1518,
<<<<<<< HEAD
                              "src": "14912:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                              "src": "14158:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct EMap.LabelMap storage pointer"
                              }
                            },
                            "id": 1553,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "at",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3832,
                            "src": "14912:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                            "referencedDeclaration": 2364,
                            "src": "14158:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (uint256,enum EMap.Label)"
                            }
                          },
                          "id": 1555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "14912:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Label_$3723_$",
=======
                          "src": "14158:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "tuple(uint256,enum EMap.Label)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "14875:46:0"
=======
                        "src": "14121:46:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
<<<<<<< HEAD
                            "typeIdentifier": "t_enum$_Label_$3723",
=======
                            "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "enum EMap.Label"
                          },
                          "id": 1561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1557,
                            "name": "argLabel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1551,
<<<<<<< HEAD
                            "src": "14940:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$3723",
=======
                            "src": "14185:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "enum EMap.Label"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1558,
                                "name": "EMap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 3912,
                                "src": "14952:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                "referencedDeclaration": 2444,
                                "src": "14197:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "type(library EMap)"
                                }
                              },
                              "id": 1559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Label",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3723,
                              "src": "14952:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                              "referencedDeclaration": 2255,
                              "src": "14197:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "type(enum EMap.Label)"
                              }
                            },
                            "id": 1560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "MUST_OUT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
<<<<<<< HEAD
                            "src": "14952:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$3723",
                              "typeString": "enum EMap.Label"
                            }
                          },
                          "src": "14940:31:0",
=======
                            "src": "14197:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$2255",
                              "typeString": "enum EMap.Label"
                            }
                          },
                          "src": "14185:31:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1570,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "14936:105:0",
                        "trueBody": {
                          "id": 1569,
                          "nodeType": "Block",
                          "src": "14973:68:0",
=======
                        "src": "14181:103:0",
                        "trueBody": {
                          "id": 1569,
                          "nodeType": "Block",
                          "src": "14218:66:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1562,
                                    "name": "argIdsTemp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1511,
<<<<<<< HEAD
                                    "src": "14992:10:0",
=======
                                    "src": "14236:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1565,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1564,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
<<<<<<< HEAD
                                    "src": "15003:15:0",
=======
                                    "src": "14247:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 1563,
                                      "name": "argIdsLenTemp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1513,
<<<<<<< HEAD
                                      "src": "15003:13:0",
=======
                                      "src": "14247:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "14992:27:0",
=======
                                  "src": "14236:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1566,
                                  "name": "arg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1549,
<<<<<<< HEAD
                                  "src": "15022:3:0",
=======
                                  "src": "14266:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
<<<<<<< HEAD
                                "src": "14992:33:0",
=======
                                "src": "14236:33:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1568,
                              "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                              "src": "14992:33:0"
=======
                              "src": "14236:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1541,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1538,
<<<<<<< HEAD
                      "src": "14832:1:0",
=======
                      "src": "14079:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1542,
                        "name": "argIdsTemp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1511,
<<<<<<< HEAD
                        "src": "14836:10:0",
=======
                        "src": "14083:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 1543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "14836:17:0",
=======
                      "src": "14083:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "14832:21:0",
=======
                    "src": "14079:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1572,
                  "initializationExpression": {
                    "assignments": [
                      1538
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1538,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1572,
<<<<<<< HEAD
                        "src": "14817:9:0",
=======
                        "src": "14064:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1537,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "14817:7:0",
=======
                          "src": "14064:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1540,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "14829:1:0",
=======
                      "src": "14076:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "14817:13:0"
=======
                    "src": "14064:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "14855:3:0",
=======
                      "src": "14102:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1545,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1538,
<<<<<<< HEAD
                        "src": "14855:1:0",
=======
                        "src": "14102:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1547,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "14855:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "14812:240:0"
=======
                    "src": "14102:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "14059:235:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                }
              ]
            },
            "documentation": null,
            "id": 1574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getMustOut",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1507,
                  "name": "labId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
<<<<<<< HEAD
                  "src": "14551:13:0",
=======
                  "src": "13806:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "14551:7:0",
=======
                    "src": "13806:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "14550:15:0"
=======
              "src": "13805:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1511,
                  "name": "argIdsTemp",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
<<<<<<< HEAD
                  "src": "14615:27:0",
=======
                  "src": "13867:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1509,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                      "src": "14615:7:0",
=======
                      "src": "13867:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1510,
                    "length": null,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                    "src": "14615:9:0",
=======
                    "src": "13867:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1513,
                  "name": "argIdsLenTemp",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
<<<<<<< HEAD
                  "src": "14644:21:0",
=======
                  "src": "13896:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "14644:7:0",
=======
                    "src": "13896:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "14614:52:0"
            },
            "scope": 1644,
            "src": "14530:529:0",
=======
              "src": "13866:52:0"
            },
            "scope": 1644,
            "src": "13785:515:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1642,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "15204:381:0",
=======
              "src": "14439:371:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "assignments": [
                    1587
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1587,
                      "name": "lab",
                      "nodeType": "VariableDeclaration",
                      "scope": 1642,
<<<<<<< HEAD
                      "src": "15215:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                      "src": "14449:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct EMap.LabelMap"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1586,
                        "name": "EMap.LabelMap",
                        "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                        "referencedDeclaration": 3726,
                        "src": "15215:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                        "referencedDeclaration": 2258,
                        "src": "14449:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.LabelMap"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1591,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1588,
                      "name": "labs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
<<<<<<< HEAD
                      "src": "15243:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$3726_storage_$",
=======
                      "src": "14477:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LabelMap_$2258_storage_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "mapping(uint256 => struct EMap.LabelMap storage ref)"
                      }
                    },
                    "id": 1590,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1589,
                      "name": "labId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1576,
<<<<<<< HEAD
                      "src": "15248:5:0",
=======
                      "src": "14482:5:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "15243:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage",
=======
                    "src": "14477:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "15215:39:0"
=======
                  "src": "14449:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1592,
                      "name": "argIdsTemp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1580,
<<<<<<< HEAD
                      "src": "15265:10:0",
=======
                      "src": "14498:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1596,
                              "name": "lab",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1587,
<<<<<<< HEAD
                              "src": "15292:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                              "src": "14525:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct EMap.LabelMap storage pointer"
                              }
                            },
                            "id": 1597,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3800,
                            "src": "15292:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                            "referencedDeclaration": 2332,
                            "src": "14525:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "function (struct EMap.LabelMap storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "15292:12:0",
=======
                          "src": "14525:12:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
<<<<<<< HEAD
                        "src": "15278:13:0",
=======
                        "src": "14511:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1593,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "15282:7:0",
=======
                            "src": "14515:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1594,
                          "length": null,
                          "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                          "src": "15282:9:0",
=======
                          "src": "14515:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 1599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "15278:27:0",
=======
                      "src": "14511:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                        "typeString": "uint256[] memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "15265:40:0",
=======
                    "src": "14498:40:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 1601,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "15265:40:0"
=======
                  "src": "14498:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1602,
                      "name": "argIdsLenTemp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1582,
<<<<<<< HEAD
                      "src": "15316:13:0",
=======
                      "src": "14548:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "15332:1:0",
=======
                      "src": "14564:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "15316:17:0",
=======
                    "src": "14548:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1605,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "15316:17:0"
=======
                  "src": "14548:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "body": {
                    "id": 1640,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "15392:186:0",
=======
                    "src": "14623:181:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "assignments": [
                          1618,
                          1620
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1618,
                            "name": "arg",
                            "nodeType": "VariableDeclaration",
                            "scope": 1640,
<<<<<<< HEAD
                            "src": "15408:11:0",
=======
                            "src": "14638:11:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1617,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "15408:7:0",
=======
                              "src": "14638:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1620,
                            "name": "argLabel",
                            "nodeType": "VariableDeclaration",
                            "scope": 1640,
<<<<<<< HEAD
                            "src": "15421:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$3723",
=======
                            "src": "14651:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "enum EMap.Label"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1619,
                              "name": "EMap.Label",
                              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
                              "referencedDeclaration": 3723,
                              "src": "15421:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                              "referencedDeclaration": 2255,
                              "src": "14651:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "enum EMap.Label"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1625,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1623,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1607,
<<<<<<< HEAD
                              "src": "15451:1:0",
=======
                              "src": "14681:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1621,
                              "name": "lab",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1587,
<<<<<<< HEAD
                              "src": "15444:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                              "src": "14674:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct EMap.LabelMap storage pointer"
                              }
                            },
                            "id": 1622,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "at",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3832,
                            "src": "15444:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$3726_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_enum$_Label_$3723_$bound_to$_t_struct$_LabelMap_$3726_storage_ptr_$",
=======
                            "referencedDeclaration": 2364,
                            "src": "14674:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_LabelMap_$2258_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_enum$_Label_$2255_$bound_to$_t_struct$_LabelMap_$2258_storage_ptr_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "function (struct EMap.LabelMap storage pointer,uint256) view returns (uint256,enum EMap.Label)"
                            }
                          },
                          "id": 1624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "15444:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Label_$3723_$",
=======
                          "src": "14674:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "tuple(uint256,enum EMap.Label)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "15407:46:0"
=======
                        "src": "14637:46:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
<<<<<<< HEAD
                            "typeIdentifier": "t_enum$_Label_$3723",
=======
                            "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "enum EMap.Label"
                          },
                          "id": 1630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1626,
                            "name": "argLabel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1620,
<<<<<<< HEAD
                            "src": "15472:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$3723",
=======
                            "src": "14701:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "enum EMap.Label"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1627,
                                "name": "EMap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 3912,
                                "src": "15484:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_EMap_$3912_$",
=======
                                "referencedDeclaration": 2444,
                                "src": "14713:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_EMap_$2444_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "type(library EMap)"
                                }
                              },
                              "id": 1628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Label",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3723,
                              "src": "15484:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
=======
                              "referencedDeclaration": 2255,
                              "src": "14713:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "type(enum EMap.Label)"
                              }
                            },
                            "id": 1629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "IN",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
<<<<<<< HEAD
                            "src": "15484:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$3723",
                              "typeString": "enum EMap.Label"
                            }
                          },
                          "src": "15472:25:0",
=======
                            "src": "14713:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Label_$2255",
                              "typeString": "enum EMap.Label"
                            }
                          },
                          "src": "14701:25:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1639,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "15468:99:0",
                        "trueBody": {
                          "id": 1638,
                          "nodeType": "Block",
                          "src": "15499:68:0",
=======
                        "src": "14697:97:0",
                        "trueBody": {
                          "id": 1638,
                          "nodeType": "Block",
                          "src": "14728:66:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1631,
                                    "name": "argIdsTemp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1580,
<<<<<<< HEAD
                                    "src": "15518:10:0",
=======
                                    "src": "14746:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1634,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1633,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
<<<<<<< HEAD
                                    "src": "15529:15:0",
=======
                                    "src": "14757:15:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 1632,
                                      "name": "argIdsLenTemp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1582,
<<<<<<< HEAD
                                      "src": "15529:13:0",
=======
                                      "src": "14757:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "15518:27:0",
=======
                                  "src": "14746:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1635,
                                  "name": "arg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1618,
<<<<<<< HEAD
                                  "src": "15548:3:0",
=======
                                  "src": "14776:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
<<<<<<< HEAD
                                "src": "15518:33:0",
=======
                                "src": "14746:33:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1637,
                              "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                              "src": "15518:33:0"
=======
                              "src": "14746:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1610,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1607,
<<<<<<< HEAD
                      "src": "15364:1:0",
=======
                      "src": "14595:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1611,
                        "name": "argIdsTemp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1580,
<<<<<<< HEAD
                        "src": "15368:10:0",
=======
                        "src": "14599:10:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 1612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "15368:17:0",
=======
                      "src": "14599:17:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "15364:21:0",
=======
                    "src": "14595:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1641,
                  "initializationExpression": {
                    "assignments": [
                      1607
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1607,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
<<<<<<< HEAD
                        "src": "15349:9:0",
=======
                        "src": "14580:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1606,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "15349:7:0",
=======
                          "src": "14580:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1609,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "15361:1:0",
=======
                      "src": "14592:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "15349:13:0"
=======
                    "src": "14580:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
<<<<<<< HEAD
                      "src": "15387:3:0",
=======
                      "src": "14618:3:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1614,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1607,
<<<<<<< HEAD
                        "src": "15387:1:0",
=======
                        "src": "14618:1:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1616,
                    "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "15387:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "15344:234:0"
=======
                    "src": "14618:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "14575:229:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                }
              ]
            },
            "documentation": null,
            "id": 1643,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1576,
                  "name": "labId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
<<<<<<< HEAD
                  "src": "15083:13:0",
=======
                  "src": "14322:13:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1575,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "15083:7:0",
=======
                    "src": "14322:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "15082:15:0"
=======
              "src": "14321:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            },
            "returnParameters": {
              "id": 1583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "name": "argIdsTemp",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
<<<<<<< HEAD
                  "src": "15147:27:0",
=======
                  "src": "14383:27:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1578,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                      "src": "15147:7:0",
=======
                      "src": "14383:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1579,
                    "length": null,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                    "src": "15147:9:0",
=======
                    "src": "14383:9:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1582,
                  "name": "argIdsLenTemp",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
<<<<<<< HEAD
                  "src": "15176:21:0",
=======
                  "src": "14412:21:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "15176:7:0",
=======
                    "src": "14412:7:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "15146:52:0"
            },
            "scope": 1644,
            "src": "15067:518:0",
=======
              "src": "14382:52:0"
            },
            "scope": 1644,
            "src": "14306:504:0",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 1645,
<<<<<<< HEAD
        "src": "126:15462:0"
      }
    ],
    "src": "35:15555:0"
=======
        "src": "119:14693:0"
      }
    ],
    "src": "33:14780:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Argumentation.sol",
      "exportedSymbols": {
        "Argumentation": [
          1644
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".1"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "35:23:0"
      },
      {
        "attributes": {
<<<<<<< HEAD
          "SourceUnit": 3396,
=======
          "SourceUnit": 1928,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          "absolutePath": "project:/contracts/DirectedGraph.sol",
          "file": "./DirectedGraph.sol",
          "scope": 1645,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "62:29:0"
      },
      {
        "attributes": {
          "SourceUnit": 3913,
          "absolutePath": "project:/contracts/EnumerableMap.sol",
          "file": "./EnumerableMap.sol",
          "scope": 1645,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "93:29:0"
      },
      {
        "attributes": {
          "SourceUnit": 2445,
          "absolutePath": "project:/contracts/EnumerableMap.sol",
          "file": "./EnumerableMap.sol",
          "scope": 1645,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "88:29:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1644
          ],
          "name": "Argumentation",
          "scope": 1645
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "DirectedGraph",
<<<<<<< HEAD
                  "referencedDeclaration": 3395,
=======
                  "referencedDeclaration": 1927,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "type": "library DirectedGraph"
                },
                "id": 4,
                "name": "UserDefinedTypeName",
<<<<<<< HEAD
                "src": "162:13:0"
=======
                "src": "154:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                  "referencedDeclaration": 3147,
=======
                  "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "type": "struct DirectedGraph.Graph"
                },
                "id": 5,
                "name": "UserDefinedTypeName",
<<<<<<< HEAD
                "src": "180:19:0"
=======
                "src": "172:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 6,
            "name": "UsingForDirective",
<<<<<<< HEAD
            "src": "156:44:0"
=======
            "src": "148:44:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "HitchensUnorderedKeySetLib",
<<<<<<< HEAD
                  "referencedDeclaration": 4090,
=======
                  "referencedDeclaration": 2622,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "type": "library HitchensUnorderedKeySetLib"
                },
                "id": 7,
                "name": "UserDefinedTypeName",
<<<<<<< HEAD
                "src": "212:26:0"
=======
                "src": "203:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "HitchensUnorderedKeySetLib.Set",
<<<<<<< HEAD
                  "referencedDeclaration": 3922,
=======
                  "referencedDeclaration": 2454,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "type": "struct HitchensUnorderedKeySetLib.Set"
                },
                "id": 8,
                "name": "UserDefinedTypeName",
<<<<<<< HEAD
                "src": "243:30:0"
=======
                "src": "234:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 9,
            "name": "UsingForDirective",
<<<<<<< HEAD
            "src": "206:68:0"
=======
            "src": "197:68:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "EMap",
<<<<<<< HEAD
                  "referencedDeclaration": 3912,
=======
                  "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "type": "library EMap"
                },
                "id": 10,
                "name": "UserDefinedTypeName",
<<<<<<< HEAD
                "src": "286:4:0"
=======
                "src": "276:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "EMap.LabelMap",
<<<<<<< HEAD
                  "referencedDeclaration": 3726,
=======
                  "referencedDeclaration": 2258,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "type": "struct EMap.LabelMap"
                },
                "id": 11,
                "name": "UserDefinedTypeName",
<<<<<<< HEAD
                "src": "295:13:0"
=======
                "src": "285:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 12,
            "name": "UsingForDirective",
<<<<<<< HEAD
            "src": "280:29:0"
=======
            "src": "270:29:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "constant": false,
              "name": "graphsIds",
              "scope": 1644,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct HitchensUnorderedKeySetLib.Set",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "HitchensUnorderedKeySetLib.Set",
<<<<<<< HEAD
                  "referencedDeclaration": 3922,
=======
                  "referencedDeclaration": 2454,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "type": "struct HitchensUnorderedKeySetLib.Set"
                },
                "id": 13,
                "name": "UserDefinedTypeName",
<<<<<<< HEAD
                "src": "317:30:0"
=======
                "src": "305:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 14,
            "name": "VariableDeclaration",
<<<<<<< HEAD
            "src": "317:40:0"
=======
            "src": "305:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "constant": false,
              "name": "graphs",
              "scope": 1644,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct DirectedGraph.Graph)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct DirectedGraph.Graph)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 15,
                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "372:7:0"
=======
                    "src": "359:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                      "referencedDeclaration": 3147,
=======
                      "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "type": "struct DirectedGraph.Graph"
                    },
                    "id": 16,
                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                    "src": "383:19:0"
=======
                    "src": "370:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 17,
                "name": "Mapping",
<<<<<<< HEAD
                "src": "364:39:0"
=======
                "src": "351:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 18,
            "name": "VariableDeclaration",
<<<<<<< HEAD
            "src": "364:46:0"
=======
            "src": "351:46:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "constant": false,
              "name": "agentsArguments",
              "scope": 1644,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct HitchensUnorderedKeySetLib.Set)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct HitchensUnorderedKeySetLib.Set)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 19,
                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "450:7:0"
=======
                    "src": "434:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "HitchensUnorderedKeySetLib.Set",
<<<<<<< HEAD
                      "referencedDeclaration": 3922,
=======
                      "referencedDeclaration": 2454,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "type": "struct HitchensUnorderedKeySetLib.Set"
                    },
                    "id": 20,
                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                    "src": "461:30:0"
=======
                    "src": "445:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 21,
                "name": "Mapping",
<<<<<<< HEAD
                "src": "442:50:0"
=======
                "src": "426:50:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 22,
            "name": "VariableDeclaration",
<<<<<<< HEAD
            "src": "442:66:0"
=======
            "src": "426:66:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "constant": false,
              "name": "labsNum",
              "scope": 1644,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 23,
                "name": "ElementaryTypeName",
<<<<<<< HEAD
                "src": "517:7:0"
=======
                "src": "499:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 24,
            "name": "VariableDeclaration",
<<<<<<< HEAD
            "src": "517:15:0"
=======
            "src": "499:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "constant": false,
              "name": "labs",
              "scope": 1644,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct EMap.LabelMap)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct EMap.LabelMap)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 25,
                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "547:7:0"
=======
                    "src": "528:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "EMap.LabelMap",
<<<<<<< HEAD
                      "referencedDeclaration": 3726,
=======
                      "referencedDeclaration": 2258,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "type": "struct EMap.LabelMap"
                    },
                    "id": 26,
                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                    "src": "558:13:0"
=======
                    "src": "539:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 27,
                "name": "Mapping",
<<<<<<< HEAD
                "src": "539:33:0"
=======
                "src": "520:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 28,
            "name": "VariableDeclaration",
<<<<<<< HEAD
            "src": "539:38:0"
=======
            "src": "520:38:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "constant": false,
              "name": "prefExtensionsNum",
              "scope": 1644,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 29,
                "name": "ElementaryTypeName",
<<<<<<< HEAD
                "src": "584:7:0"
=======
                "src": "564:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 30,
            "name": "VariableDeclaration",
<<<<<<< HEAD
            "src": "584:25:0"
=======
            "src": "564:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "constant": false,
              "name": "prefExtensions",
              "scope": 1644,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct HitchensUnorderedKeySetLib.Set)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct HitchensUnorderedKeySetLib.Set)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 31,
                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "624:7:0"
=======
                    "src": "603:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "HitchensUnorderedKeySetLib.Set",
<<<<<<< HEAD
                      "referencedDeclaration": 3922,
=======
                      "referencedDeclaration": 2454,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "type": "struct HitchensUnorderedKeySetLib.Set"
                    },
                    "id": 32,
                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                    "src": "635:30:0"
=======
                    "src": "614:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 33,
                "name": "Mapping",
<<<<<<< HEAD
                "src": "616:50:0"
=======
                "src": "595:50:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 34,
            "name": "VariableDeclaration",
<<<<<<< HEAD
            "src": "616:65:0"
=======
            "src": "595:65:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "PreferredExtensions"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "args",
                      "scope": 39,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 35,
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "716:7:0"
=======
                            "src": "693:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 36,
                        "name": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "716:9:0"
=======
                        "src": "693:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 37,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "716:14:0"
=======
                    "src": "693:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 38,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "715:16:0"
=======
                "src": "692:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 39,
            "name": "EventDefinition",
<<<<<<< HEAD
            "src": "690:42:0"
=======
            "src": "667:42:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1644,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "751:2:0"
=======
                "src": "726:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 41,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "761:0:0"
=======
                "src": "736:0:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "insert",
<<<<<<< HEAD
                              "referencedDeclaration": 3960,
=======
                              "referencedDeclaration": 2492,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 14,
                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref",
                                  "value": "graphsIds"
                                },
                                "id": 42,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "772:9:0"
=======
                                "src": "746:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 44,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "772:16:0"
=======
                            "src": "746:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
                                "id": 45,
                                "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                "src": "789:7:0"
=======
                                "src": "763:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint256)",
                                      "value": "uint256"
                                    },
                                    "id": 46,
                                    "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                    "src": "797:7:0"
=======
                                    "src": "771:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 47,
                                    "name": "Literal",
<<<<<<< HEAD
                                    "src": "805:1:0"
=======
                                    "src": "779:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 48,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "797:10:0"
=======
                                "src": "771:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 49,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "789:19:0"
=======
                            "src": "763:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 50,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "772:37:0"
=======
                        "src": "746:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 51,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "772:37:0"
=======
                    "src": "746:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 52,
                "name": "Block",
<<<<<<< HEAD
                "src": "761:56:0"
=======
                "src": "736:54:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 53,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "740:77:0"
=======
            "src": "715:75:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "insertArgument",
              "scope": 1644,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "metadata",
                      "scope": 93,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 54,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "849:6:0"
=======
                        "src": "820:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 55,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "849:22:0"
=======
                    "src": "820:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 56,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "848:24:0"
=======
                "src": "819:24:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "argId",
                      "scope": 93,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 57,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "907:7:0"
=======
                        "src": "876:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 58,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "907:13:0"
=======
                    "src": "876:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 59,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "906:15:0"
=======
                "src": "875:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        63
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "graph",
                          "scope": 92,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct DirectedGraph.Graph",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                              "referencedDeclaration": 3147,
=======
                              "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct DirectedGraph.Graph"
                            },
                            "id": 62,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "938:19:0"
=======
                            "src": "905:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 63,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "938:33:0"
=======
                        "src": "905:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct DirectedGraph.Graph storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "mapping(uint256 => struct DirectedGraph.Graph storage ref)",
                              "value": "graphs"
                            },
                            "id": 64,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "974:6:0"
=======
                            "src": "941:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 65,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "981:1:0"
=======
                            "src": "948:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 66,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "974:9:0"
=======
                        "src": "941:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 67,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "938:45:0"
=======
                    "src": "905:45:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 58,
                              "type": "uint256",
                              "value": "argId"
                            },
                            "id": 68,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "994:5:0"
=======
                            "src": "960:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "insertNode",
<<<<<<< HEAD
                                  "referencedDeclaration": 3194,
=======
                                  "referencedDeclaration": 1726,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "function (struct DirectedGraph.Graph storage pointer,string memory) returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 63,
                                      "type": "struct DirectedGraph.Graph storage pointer",
                                      "value": "graph"
                                    },
                                    "id": 69,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "1002:5:0"
=======
                                    "src": "968:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 70,
                                "name": "MemberAccess",
<<<<<<< HEAD
                                "src": "1002:16:0"
=======
                                "src": "968:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 55,
                                  "type": "string memory",
                                  "value": "metadata"
                                },
                                "id": 71,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1019:8:0"
=======
                                "src": "985:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 72,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "1002:26:0"
=======
                            "src": "968:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 73,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "994:34:0"
=======
                        "src": "960:34:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 74,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "994:34:0"
=======
                    "src": "960:34:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        78
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "agentArgs",
                          "scope": 92,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct HitchensUnorderedKeySetLib.Set",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "HitchensUnorderedKeySetLib.Set",
<<<<<<< HEAD
                              "referencedDeclaration": 3922,
=======
                              "referencedDeclaration": 2454,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct HitchensUnorderedKeySetLib.Set"
                            },
                            "id": 77,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "1041:30:0"
=======
                            "src": "1005:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 78,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "1041:48:0"
=======
                        "src": "1005:48:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22,
                              "type": "mapping(address => struct HitchensUnorderedKeySetLib.Set storage ref)",
                              "value": "agentsArguments"
                            },
                            "id": 79,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "1092:15:0"
=======
                            "src": "1056:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 6542,
=======
                                  "referencedDeclaration": 2919,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 80,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1122:3:0"
=======
                                "src": "1085:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 81,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "1122:10:0"
=======
                            "src": "1085:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 82,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "1092:51:0"
=======
                        "src": "1056:49:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 83,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "1041:102:0"
=======
                    "src": "1005:100:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "insert",
<<<<<<< HEAD
                              "referencedDeclaration": 3960,
=======
                              "referencedDeclaration": 2492,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 78,
                                  "type": "struct HitchensUnorderedKeySetLib.Set storage pointer",
                                  "value": "agentArgs"
                                },
                                "id": 84,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1154:9:0"
=======
                                "src": "1115:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 86,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "1154:16:0"
=======
                            "src": "1115:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
                                "id": 87,
                                "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                "src": "1171:7:0"
=======
                                "src": "1132:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 58,
                                  "type": "uint256",
                                  "value": "argId"
                                },
                                "id": 88,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1179:5:0"
=======
                                "src": "1140:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 89,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "1171:14:0"
=======
                            "src": "1132:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 90,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "1154:32:0"
=======
                        "src": "1115:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 91,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "1154:32:0"
=======
                    "src": "1115:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 92,
                "name": "Block",
<<<<<<< HEAD
                "src": "927:267:0"
=======
                "src": "895:259:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 93,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "825:369:0"
=======
            "src": "796:358:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "supportArgument",
              "scope": 1644,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "argId",
                      "scope": 130,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 94,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "1227:7:0"
=======
                        "src": "1185:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 95,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "1227:13:0"
=======
                    "src": "1185:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 96,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "1226:15:0"
=======
                "src": "1184:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 97,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "1249:0:0"
=======
                "src": "1207:0:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        101
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "graph",
                          "scope": 129,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct DirectedGraph.Graph",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                              "referencedDeclaration": 3147,
=======
                              "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct DirectedGraph.Graph"
                            },
                            "id": 100,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "1260:19:0"
=======
                            "src": "1217:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 101,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "1260:33:0"
=======
                        "src": "1217:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct DirectedGraph.Graph storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "mapping(uint256 => struct DirectedGraph.Graph storage ref)",
                              "value": "graphs"
                            },
                            "id": 102,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "1296:6:0"
=======
                            "src": "1253:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 103,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "1303:1:0"
=======
                            "src": "1260:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 104,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "1296:9:0"
=======
                        "src": "1253:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 105,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "1260:45:0"
=======
                    "src": "1217:45:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "incrementValue",
<<<<<<< HEAD
                              "referencedDeclaration": 3255,
=======
                              "referencedDeclaration": 1787,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "function (struct DirectedGraph.Graph storage pointer,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 101,
                                  "type": "struct DirectedGraph.Graph storage pointer",
                                  "value": "graph"
                                },
                                "id": 106,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1316:5:0"
=======
                                "src": "1272:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 108,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "1316:20:0"
=======
                            "src": "1272:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 95,
                              "type": "uint256",
                              "value": "argId"
                            },
                            "id": 109,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "1337:5:0"
=======
                            "src": "1293:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 110,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "1316:27:0"
=======
                        "src": "1272:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 111,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "1316:27:0"
=======
                    "src": "1272:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        115
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "agentArgs",
                          "scope": 129,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct HitchensUnorderedKeySetLib.Set",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "HitchensUnorderedKeySetLib.Set",
<<<<<<< HEAD
                              "referencedDeclaration": 3922,
=======
                              "referencedDeclaration": 2454,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct HitchensUnorderedKeySetLib.Set"
                            },
                            "id": 114,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "1356:30:0"
=======
                            "src": "1310:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 115,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "1356:48:0"
=======
                        "src": "1310:48:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 22,
                              "type": "mapping(address => struct HitchensUnorderedKeySetLib.Set storage ref)",
                              "value": "agentsArguments"
                            },
                            "id": 116,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "1407:15:0"
=======
                            "src": "1361:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 6542,
=======
                                  "referencedDeclaration": 2919,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 117,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1437:3:0"
=======
                                "src": "1390:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 118,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "1437:10:0"
=======
                            "src": "1390:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 119,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "1407:51:0"
=======
                        "src": "1361:49:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 120,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "1356:102:0"
=======
                    "src": "1310:100:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "insert",
<<<<<<< HEAD
                              "referencedDeclaration": 3960,
=======
                              "referencedDeclaration": 2492,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 115,
                                  "type": "struct HitchensUnorderedKeySetLib.Set storage pointer",
                                  "value": "agentArgs"
                                },
                                "id": 121,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1469:9:0"
=======
                                "src": "1420:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 123,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "1469:16:0"
=======
                            "src": "1420:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
                                "id": 124,
                                "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                "src": "1486:7:0"
=======
                                "src": "1437:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 95,
                                  "type": "uint256",
                                  "value": "argId"
                                },
                                "id": 125,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1494:5:0"
=======
                                "src": "1445:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 126,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "1486:14:0"
=======
                            "src": "1437:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 127,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "1469:32:0"
=======
                        "src": "1420:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 128,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "1469:32:0"
=======
                    "src": "1420:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 129,
                "name": "Block",
<<<<<<< HEAD
                "src": "1249:260:0"
=======
                "src": "1207:252:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 130,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "1202:307:0"
=======
            "src": "1160:299:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "insertAttack",
              "scope": 1644,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sourceId",
                      "scope": 159,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 131,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "1549:7:0"
=======
                        "src": "1496:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 132,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "1549:16:0"
=======
                    "src": "1496:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "targetId",
                      "scope": 159,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 133,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "1576:7:0"
=======
                        "src": "1522:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 134,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "1576:16:0"
=======
                    "src": "1522:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "metadata",
                      "scope": 159,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 135,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "1603:6:0"
=======
                        "src": "1548:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 136,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "1603:22:0"
=======
                    "src": "1548:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 137,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "1538:94:0"
=======
                "src": "1486:90:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "edgeId",
                      "scope": 159,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 138,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "1649:7:0"
=======
                        "src": "1593:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 139,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "1649:14:0"
=======
                    "src": "1593:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 140,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "1648:16:0"
=======
                "src": "1592:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        144
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "graph",
                          "scope": 158,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct DirectedGraph.Graph",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                              "referencedDeclaration": 3147,
=======
                              "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct DirectedGraph.Graph"
                            },
                            "id": 143,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "1676:19:0"
=======
                            "src": "1619:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 144,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "1676:33:0"
=======
                        "src": "1619:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct DirectedGraph.Graph storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "mapping(uint256 => struct DirectedGraph.Graph storage ref)",
                              "value": "graphs"
                            },
                            "id": 145,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "1712:6:0"
=======
                            "src": "1655:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 146,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "1719:1:0"
=======
                            "src": "1662:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 147,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "1712:9:0"
=======
                        "src": "1655:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 148,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "1676:45:0"
=======
                    "src": "1619:45:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 139,
                              "type": "uint256",
                              "value": "edgeId"
                            },
                            "id": 149,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "1732:6:0"
=======
                            "src": "1674:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "insertEdge",
<<<<<<< HEAD
                                  "referencedDeclaration": 3367,
=======
                                  "referencedDeclaration": 1899,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "function (struct DirectedGraph.Graph storage pointer,uint256,uint256,string memory) returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 144,
                                      "type": "struct DirectedGraph.Graph storage pointer",
                                      "value": "graph"
                                    },
                                    "id": 150,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "1741:5:0"
=======
                                    "src": "1683:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 151,
                                "name": "MemberAccess",
<<<<<<< HEAD
                                "src": "1741:16:0"
=======
                                "src": "1683:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 132,
                                  "type": "uint256",
                                  "value": "sourceId"
                                },
                                "id": 152,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1758:8:0"
=======
                                "src": "1700:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 134,
                                  "type": "uint256",
                                  "value": "targetId"
                                },
                                "id": 153,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1768:8:0"
=======
                                "src": "1710:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 136,
                                  "type": "string memory",
                                  "value": "metadata"
                                },
                                "id": 154,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1778:8:0"
=======
                                "src": "1720:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 155,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "1741:46:0"
=======
                            "src": "1683:46:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 156,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "1732:55:0"
=======
                        "src": "1674:55:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 157,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "1732:55:0"
=======
                    "src": "1674:55:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 158,
                "name": "Block",
<<<<<<< HEAD
                "src": "1665:130:0"
=======
                "src": "1609:127:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 159,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "1517:278:0"
=======
            "src": "1465:271:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "pafReductionToAfPr1",
              "scope": 1644,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 160,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "1831:2:0"
=======
                "src": "1770:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "graphId",
                      "scope": 310,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 161,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "1850:7:0"
=======
                        "src": "1789:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 162,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "1850:15:0"
=======
                    "src": "1789:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 163,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "1849:17:0"
=======
                "src": "1788:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 162,
                              "type": "uint256",
                              "value": "graphId"
                            },
                            "id": 164,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "1878:7:0"
=======
                            "src": "1816:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "count",
<<<<<<< HEAD
                                      "referencedDeclaration": 4036,
=======
                                      "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 14,
                                          "type": "struct HitchensUnorderedKeySetLib.Set storage ref",
                                          "value": "graphsIds"
                                        },
                                        "id": 165,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "1888:9:0"
=======
                                        "src": "1826:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 166,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "1888:15:0"
=======
                                    "src": "1826:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 167,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "1888:17:0"
=======
                                "src": "1826:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 168,
                                "name": "Literal",
<<<<<<< HEAD
                                "src": "1908:1:0"
=======
                                "src": "1846:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 169,
                            "name": "BinaryOperation",
<<<<<<< HEAD
                            "src": "1888:21:0"
=======
                            "src": "1826:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 170,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "1878:31:0"
=======
                        "src": "1816:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 171,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "1878:31:0"
=======
                    "src": "1816:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "insert",
<<<<<<< HEAD
                              "referencedDeclaration": 3960,
=======
                              "referencedDeclaration": 2492,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 14,
                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref",
                                  "value": "graphsIds"
                                },
                                "id": 172,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1920:9:0"
=======
                                "src": "1857:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 174,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "1920:16:0"
=======
                            "src": "1857:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
                                "id": 175,
                                "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                "src": "1937:7:0"
=======
                                "src": "1874:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 162,
                                  "type": "uint256",
                                  "value": "graphId"
                                },
                                "id": 176,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1945:7:0"
=======
                                "src": "1882:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 177,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "1937:16:0"
=======
                            "src": "1874:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 178,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "1920:34:0"
=======
                        "src": "1857:34:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 179,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "1920:34:0"
=======
                    "src": "1857:34:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        183
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "paf",
                          "scope": 309,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct DirectedGraph.Graph",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                              "referencedDeclaration": 3147,
=======
                              "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct DirectedGraph.Graph"
                            },
                            "id": 182,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "1967:19:0"
=======
                            "src": "1902:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 183,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "1967:31:0"
=======
                        "src": "1902:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct DirectedGraph.Graph storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "mapping(uint256 => struct DirectedGraph.Graph storage ref)",
                              "value": "graphs"
                            },
                            "id": 184,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "2001:6:0"
=======
                            "src": "1936:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 185,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "2008:1:0"
=======
                            "src": "1943:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 186,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "2001:9:0"
=======
                        "src": "1936:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 187,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "1967:43:0"
=======
                    "src": "1902:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        191
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "af",
                          "scope": 309,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct DirectedGraph.Graph",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                              "referencedDeclaration": 3147,
=======
                              "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct DirectedGraph.Graph"
                            },
                            "id": 190,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "2021:19:0"
=======
                            "src": "1955:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 191,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "2021:30:0"
=======
                        "src": "1955:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct DirectedGraph.Graph storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "mapping(uint256 => struct DirectedGraph.Graph storage ref)",
                              "value": "graphs"
                            },
                            "id": 192,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "2054:6:0"
=======
                            "src": "1988:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 162,
                              "type": "uint256",
                              "value": "graphId"
                            },
                            "id": 193,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "2061:7:0"
=======
                            "src": "1995:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 194,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "2054:15:0"
=======
                        "src": "1988:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 195,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "2021:48:0"
=======
                    "src": "1955:48:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            197
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 308,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 196,
                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "2087:7:0"
=======
                                "src": "2019:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 197,
                            "name": "VariableDeclaration",
<<<<<<< HEAD
                            "src": "2087:9:0"
=======
                            "src": "2019:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 198,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "2099:1:0"
=======
                            "src": "2031:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 199,
                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "2087:13:0"
=======
                        "src": "2019:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 197,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 200,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "2102:1:0"
=======
                            "src": "2034:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "count",
<<<<<<< HEAD
                                  "referencedDeclaration": 4036,
=======
                                  "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "edgesIds",
<<<<<<< HEAD
                                      "referencedDeclaration": 3142,
=======
                                      "referencedDeclaration": 1674,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 183,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "paf"
                                        },
                                        "id": 201,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "2106:3:0"
=======
                                        "src": "2038:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 202,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "2106:12:0"
=======
                                    "src": "2038:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 203,
                                "name": "MemberAccess",
<<<<<<< HEAD
                                "src": "2106:18:0"
=======
                                "src": "2038:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 204,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "2106:20:0"
=======
                            "src": "2038:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 205,
                        "name": "BinaryOperation",
<<<<<<< HEAD
                        "src": "2102:24:0"
=======
                        "src": "2034:24:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 197,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 206,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "2128:1:0"
=======
                                "src": "2060:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 207,
                            "name": "UnaryOperation",
<<<<<<< HEAD
                            "src": "2128:3:0"
=======
                            "src": "2060:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 208,
                        "name": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "2128:3:0"
=======
                        "src": "2060:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                210
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "edgeId",
                                  "scope": 307,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 209,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "2148:7:0"
=======
                                    "src": "2079:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 210,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "2148:14:0"
=======
                                "src": "2079:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint256)",
                                      "value": "uint256"
                                    },
                                    "id": 211,
                                    "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                    "src": "2165:7:0"
=======
                                    "src": "2096:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "keyAtIndex",
<<<<<<< HEAD
                                          "referencedDeclaration": 4079,
=======
                                          "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "edgesIds",
<<<<<<< HEAD
                                              "referencedDeclaration": 3142,
=======
                                              "referencedDeclaration": 1674,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 183,
                                                  "type": "struct DirectedGraph.Graph storage pointer",
                                                  "value": "paf"
                                                },
                                                "id": 212,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "2173:3:0"
=======
                                                "src": "2104:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 213,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "2173:12:0"
=======
                                            "src": "2104:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 214,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "2173:23:0"
=======
                                        "src": "2104:23:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 197,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 215,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "2197:1:0"
=======
                                        "src": "2128:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 216,
                                    "name": "FunctionCall",
<<<<<<< HEAD
                                    "src": "2173:26:0"
=======
                                    "src": "2104:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 217,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "2165:35:0"
=======
                                "src": "2096:35:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 218,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "2148:52:0"
=======
                            "src": "2079:52:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                222
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "edge",
                                  "scope": 307,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct DirectedGraph.Edge",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "DirectedGraph.Edge",
<<<<<<< HEAD
                                      "referencedDeclaration": 3134,
=======
                                      "referencedDeclaration": 1666,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct DirectedGraph.Edge"
                                    },
                                    "id": 221,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "2215:18:0"
=======
                                    "src": "2145:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 222,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "2215:31:0"
=======
                                "src": "2145:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct DirectedGraph.Edge storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "edges",
<<<<<<< HEAD
                                      "referencedDeclaration": 3146,
=======
                                      "referencedDeclaration": 1678,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 183,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "paf"
                                        },
                                        "id": 223,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "2249:3:0"
=======
                                        "src": "2179:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 224,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "2249:9:0"
=======
                                    "src": "2179:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 210,
                                      "type": "uint256",
                                      "value": "edgeId"
                                    },
                                    "id": 225,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "2259:6:0"
=======
                                    "src": "2189:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 226,
                                "name": "IndexAccess",
<<<<<<< HEAD
                                "src": "2249:17:0"
=======
                                "src": "2179:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 227,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "2215:51:0"
=======
                            "src": "2145:51:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                231
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "s",
                                  "scope": 307,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct DirectedGraph.Node",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "DirectedGraph.Node",
<<<<<<< HEAD
                                      "referencedDeclaration": 3127,
=======
                                      "referencedDeclaration": 1659,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct DirectedGraph.Node"
                                    },
                                    "id": 230,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "2283:18:0"
=======
                                    "src": "2211:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 231,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "2283:28:0"
=======
                                "src": "2211:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct DirectedGraph.Node storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "nodes",
<<<<<<< HEAD
                                      "referencedDeclaration": 3140,
=======
                                      "referencedDeclaration": 1672,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 183,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "paf"
                                        },
                                        "id": 232,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "2314:3:0"
=======
                                        "src": "2242:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 233,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "2314:9:0"
=======
                                    "src": "2242:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "source",
<<<<<<< HEAD
                                      "referencedDeclaration": 3129,
=======
                                      "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 222,
                                          "type": "struct DirectedGraph.Edge storage pointer",
                                          "value": "edge"
                                        },
                                        "id": 234,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "2324:4:0"
=======
                                        "src": "2252:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 235,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "2324:11:0"
=======
                                    "src": "2252:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 236,
                                "name": "IndexAccess",
<<<<<<< HEAD
                                "src": "2314:22:0"
=======
                                "src": "2242:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 237,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "2283:53:0"
=======
                            "src": "2211:53:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                241
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "t",
                                  "scope": 307,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct DirectedGraph.Node",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "DirectedGraph.Node",
<<<<<<< HEAD
                                      "referencedDeclaration": 3127,
=======
                                      "referencedDeclaration": 1659,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct DirectedGraph.Node"
                                    },
                                    "id": 240,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "2351:18:0"
=======
                                    "src": "2278:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 241,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "2351:28:0"
=======
                                "src": "2278:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct DirectedGraph.Node storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "nodes",
<<<<<<< HEAD
                                      "referencedDeclaration": 3140,
=======
                                      "referencedDeclaration": 1672,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 183,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "paf"
                                        },
                                        "id": 242,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "2382:3:0"
=======
                                        "src": "2309:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 243,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "2382:9:0"
=======
                                    "src": "2309:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "target",
<<<<<<< HEAD
                                      "referencedDeclaration": 3131,
=======
                                      "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 222,
                                          "type": "struct DirectedGraph.Edge storage pointer",
                                          "value": "edge"
                                        },
                                        "id": 244,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "2392:4:0"
=======
                                        "src": "2319:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 245,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "2392:11:0"
=======
                                    "src": "2319:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 246,
                                "name": "IndexAccess",
<<<<<<< HEAD
                                "src": "2382:22:0"
=======
                                "src": "2309:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 247,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "2351:53:0"
=======
                            "src": "2278:53:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                249
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "notBpreferredToA",
                                  "scope": 307,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "bool",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "bool",
                                      "type": "bool"
                                    },
                                    "id": 248,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "2419:4:0"
=======
                                    "src": "2345:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 249,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "2419:21:0"
=======
                                "src": "2345:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": ">",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "value",
<<<<<<< HEAD
                                              "referencedDeclaration": 3124,
=======
                                              "referencedDeclaration": 1656,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 241,
                                                  "type": "struct DirectedGraph.Node storage pointer",
                                                  "value": "t"
                                                },
                                                "id": 250,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "2445:1:0"
=======
                                                "src": "2371:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 251,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "2445:7:0"
=======
                                            "src": "2371:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "value",
<<<<<<< HEAD
                                              "referencedDeclaration": 3124,
=======
                                              "referencedDeclaration": 1656,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 231,
                                                  "type": "struct DirectedGraph.Node storage pointer",
                                                  "value": "s"
                                                },
                                                "id": 252,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "2455:1:0"
=======
                                                "src": "2381:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 253,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "2455:7:0"
=======
                                            "src": "2381:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 254,
                                        "name": "BinaryOperation",
<<<<<<< HEAD
                                        "src": "2445:17:0"
=======
                                        "src": "2371:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 255,
                                    "name": "TupleExpression",
<<<<<<< HEAD
                                    "src": "2444:19:0"
=======
                                    "src": "2370:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 256,
                                "name": "UnaryOperation",
<<<<<<< HEAD
                                "src": "2443:20:0"
=======
                                "src": "2369:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 257,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "2419:44:0"
=======
                            "src": "2345:44:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 249,
                                  "type": "bool",
                                  "value": "notBpreferredToA"
                                },
                                "id": 258,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "2619:16:0"
=======
                                "src": "2408:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "falseBody": null
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!",
                                          "prefix": true,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "bool",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "exists",
<<<<<<< HEAD
                                                  "referencedDeclaration": 4064,
=======
                                                  "referencedDeclaration": 2596,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32) view returns (bool)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "nodesIds",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3136,
=======
                                                      "referencedDeclaration": 1668,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 191,
                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                          "value": "af"
                                                        },
                                                        "id": 259,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "2738:2:0"
=======
                                                        "src": "2480:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 260,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "2738:11:0"
=======
                                                    "src": "2480:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 261,
                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                "src": "2738:18:0"
=======
                                                "src": "2480:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "bytes32",
                                                  "type_conversion": true
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "type": "type(bytes32)",
                                                      "value": "bytes32"
                                                    },
                                                    "id": 262,
                                                    "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                    "src": "2757:7:0"
=======
                                                    "src": "2499:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "source",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3129,
=======
                                                      "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 222,
                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                          "value": "edge"
                                                        },
                                                        "id": 263,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "2765:4:0"
=======
                                                        "src": "2507:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 264,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "2765:11:0"
=======
                                                    "src": "2507:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 265,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "2757:20:0"
=======
                                                "src": "2499:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 266,
                                            "name": "FunctionCall",
<<<<<<< HEAD
                                            "src": "2738:40:0"
=======
                                            "src": "2480:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 267,
                                        "name": "UnaryOperation",
<<<<<<< HEAD
                                        "src": "2737:41:0"
=======
                                        "src": "2479:41:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "tuple()",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "insertNodeWithId",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3224,
=======
                                                      "referencedDeclaration": 1756,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "function (struct DirectedGraph.Graph storage pointer,uint256)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 191,
                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                          "value": "af"
                                                        },
                                                        "id": 268,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "2803:2:0"
=======
                                                        "src": "2544:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 270,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "2803:19:0"
=======
                                                    "src": "2544:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "source",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3129,
=======
                                                      "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 222,
                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                          "value": "edge"
                                                        },
                                                        "id": 271,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "2823:4:0"
=======
                                                        "src": "2564:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 272,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "2823:11:0"
=======
                                                    "src": "2564:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 273,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "2803:32:0"
=======
                                                "src": "2544:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 274,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "2803:32:0"
=======
                                            "src": "2544:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 275,
                                        "name": "Block",
<<<<<<< HEAD
                                        "src": "2780:75:0"
=======
                                        "src": "2522:73:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 276,
                                    "name": "IfStatement",
<<<<<<< HEAD
                                    "src": "2733:122:0"
=======
                                    "src": "2475:120:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "falseBody": null
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!",
                                          "prefix": true,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "bool",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "exists",
<<<<<<< HEAD
                                                  "referencedDeclaration": 4064,
=======
                                                  "referencedDeclaration": 2596,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32) view returns (bool)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "nodesIds",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3136,
=======
                                                      "referencedDeclaration": 1668,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 191,
                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                          "value": "af"
                                                        },
                                                        "id": 277,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "2878:2:0"
=======
                                                        "src": "2617:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 278,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "2878:11:0"
=======
                                                    "src": "2617:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 279,
                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                "src": "2878:18:0"
=======
                                                "src": "2617:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "bytes32",
                                                  "type_conversion": true
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "type": "type(bytes32)",
                                                      "value": "bytes32"
                                                    },
                                                    "id": 280,
                                                    "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                    "src": "2897:7:0"
=======
                                                    "src": "2636:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "target",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3131,
=======
                                                      "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 222,
                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                          "value": "edge"
                                                        },
                                                        "id": 281,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "2905:4:0"
=======
                                                        "src": "2644:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 282,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "2905:11:0"
=======
                                                    "src": "2644:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 283,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "2897:20:0"
=======
                                                "src": "2636:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 284,
                                            "name": "FunctionCall",
<<<<<<< HEAD
                                            "src": "2878:40:0"
=======
                                            "src": "2617:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 285,
                                        "name": "UnaryOperation",
<<<<<<< HEAD
                                        "src": "2877:41:0"
=======
                                        "src": "2616:41:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "tuple()",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "insertNodeWithId",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3224,
=======
                                                      "referencedDeclaration": 1756,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "function (struct DirectedGraph.Graph storage pointer,uint256)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 191,
                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                          "value": "af"
                                                        },
                                                        "id": 286,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "2943:2:0"
=======
                                                        "src": "2681:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 288,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "2943:19:0"
=======
                                                    "src": "2681:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "target",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3131,
=======
                                                      "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 222,
                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                          "value": "edge"
                                                        },
                                                        "id": 289,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "2963:4:0"
=======
                                                        "src": "2701:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 290,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "2963:11:0"
=======
                                                    "src": "2701:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 291,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "2943:32:0"
=======
                                                "src": "2681:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 292,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "2943:32:0"
=======
                                            "src": "2681:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 293,
                                        "name": "Block",
<<<<<<< HEAD
                                        "src": "2920:75:0"
=======
                                        "src": "2659:73:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 294,
                                    "name": "IfStatement",
<<<<<<< HEAD
                                    "src": "2873:122:0"
=======
                                    "src": "2612:120:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                  "typeString": "literal_string \"\""
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "insertEdge",
<<<<<<< HEAD
                                              "referencedDeclaration": 3367,
=======
                                              "referencedDeclaration": 1899,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "function (struct DirectedGraph.Graph storage pointer,uint256,uint256,string memory) returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 191,
                                                  "type": "struct DirectedGraph.Graph storage pointer",
                                                  "value": "af"
                                                },
                                                "id": 295,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "3013:2:0"
=======
                                                "src": "2749:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 297,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "3013:13:0"
=======
                                            "src": "2749:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "source",
<<<<<<< HEAD
                                              "referencedDeclaration": 3129,
=======
                                              "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 222,
                                                  "type": "struct DirectedGraph.Edge storage pointer",
                                                  "value": "edge"
                                                },
                                                "id": 298,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "3027:4:0"
=======
                                                "src": "2763:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 299,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "3027:11:0"
=======
                                            "src": "2763:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "target",
<<<<<<< HEAD
                                              "referencedDeclaration": 3131,
=======
                                              "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 222,
                                                  "type": "struct DirectedGraph.Edge storage pointer",
                                                  "value": "edge"
                                                },
                                                "id": 300,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "3040:4:0"
=======
                                                "src": "2776:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 301,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "3040:11:0"
=======
                                            "src": "2776:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "string",
                                              "type": "literal_string \"\"",
                                              "value": ""
                                            },
                                            "id": 302,
                                            "name": "Literal",
<<<<<<< HEAD
                                            "src": "3053:2:0"
=======
                                            "src": "2789:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 303,
                                        "name": "FunctionCall",
<<<<<<< HEAD
                                        "src": "3013:43:0"
=======
                                        "src": "2749:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 304,
                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "3013:43:0"
=======
                                    "src": "2749:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 305,
                                "name": "Block",
<<<<<<< HEAD
                                "src": "2637:435:0"
=======
                                "src": "2426:381:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 306,
                            "name": "IfStatement",
<<<<<<< HEAD
                            "src": "2615:457:0"
=======
                            "src": "2404:403:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 307,
                        "name": "Block",
<<<<<<< HEAD
                        "src": "2133:950:0"
=======
                        "src": "2065:752:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 308,
                    "name": "ForStatement",
<<<<<<< HEAD
                    "src": "2082:1001:0"
=======
                    "src": "2014:803:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 309,
                "name": "Block",
<<<<<<< HEAD
                "src": "1867:1223:0"
=======
                "src": "1806:1017:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 310,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "1803:1287:0"
=======
            "src": "1742:1081:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "pafReductionToAfPr3",
              "scope": 1644,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 311,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "3126:2:0"
=======
                "src": "2857:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "graphId",
                      "scope": 490,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 312,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "3145:7:0"
=======
                        "src": "2876:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 313,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "3145:15:0"
=======
                    "src": "2876:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 314,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "3144:17:0"
=======
                "src": "2875:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 313,
                              "type": "uint256",
                              "value": "graphId"
                            },
                            "id": 315,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "3173:7:0"
=======
                            "src": "2903:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "count",
<<<<<<< HEAD
                                      "referencedDeclaration": 4036,
=======
                                      "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 14,
                                          "type": "struct HitchensUnorderedKeySetLib.Set storage ref",
                                          "value": "graphsIds"
                                        },
                                        "id": 316,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "3183:9:0"
=======
                                        "src": "2913:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 317,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "3183:15:0"
=======
                                    "src": "2913:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 318,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "3183:17:0"
=======
                                "src": "2913:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 319,
                                "name": "Literal",
<<<<<<< HEAD
                                "src": "3203:1:0"
=======
                                "src": "2933:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 320,
                            "name": "BinaryOperation",
<<<<<<< HEAD
                            "src": "3183:21:0"
=======
                            "src": "2913:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 321,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "3173:31:0"
=======
                        "src": "2903:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 322,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "3173:31:0"
=======
                    "src": "2903:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "insert",
<<<<<<< HEAD
                              "referencedDeclaration": 3960,
=======
                              "referencedDeclaration": 2492,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 14,
                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref",
                                  "value": "graphsIds"
                                },
                                "id": 323,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "3215:9:0"
=======
                                "src": "2944:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 325,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "3215:16:0"
=======
                            "src": "2944:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
                                "id": 326,
                                "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                "src": "3232:7:0"
=======
                                "src": "2961:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 313,
                                  "type": "uint256",
                                  "value": "graphId"
                                },
                                "id": 327,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "3240:7:0"
=======
                                "src": "2969:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 328,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "3232:16:0"
=======
                            "src": "2961:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 329,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "3215:34:0"
=======
                        "src": "2944:34:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 330,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "3215:34:0"
=======
                    "src": "2944:34:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        334
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "paf",
                          "scope": 489,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct DirectedGraph.Graph",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                              "referencedDeclaration": 3147,
=======
                              "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct DirectedGraph.Graph"
                            },
                            "id": 333,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "3262:19:0"
=======
                            "src": "2989:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 334,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "3262:31:0"
=======
                        "src": "2989:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct DirectedGraph.Graph storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "mapping(uint256 => struct DirectedGraph.Graph storage ref)",
                              "value": "graphs"
                            },
                            "id": 335,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "3296:6:0"
=======
                            "src": "3023:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 336,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "3303:1:0"
=======
                            "src": "3030:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 337,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "3296:9:0"
=======
                        "src": "3023:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 338,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "3262:43:0"
=======
                    "src": "2989:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        342
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "af",
                          "scope": 489,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct DirectedGraph.Graph",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                              "referencedDeclaration": 3147,
=======
                              "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct DirectedGraph.Graph"
                            },
                            "id": 341,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "3316:19:0"
=======
                            "src": "3042:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 342,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "3316:30:0"
=======
                        "src": "3042:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct DirectedGraph.Graph storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "mapping(uint256 => struct DirectedGraph.Graph storage ref)",
                              "value": "graphs"
                            },
                            "id": 343,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "3349:6:0"
=======
                            "src": "3075:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 313,
                              "type": "uint256",
                              "value": "graphId"
                            },
                            "id": 344,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "3356:7:0"
=======
                            "src": "3082:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 345,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "3349:15:0"
=======
                        "src": "3075:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 346,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "3316:48:0"
=======
                    "src": "3042:48:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            348
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 488,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 347,
                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "3382:7:0"
=======
                                "src": "3106:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 348,
                            "name": "VariableDeclaration",
<<<<<<< HEAD
                            "src": "3382:9:0"
=======
                            "src": "3106:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 349,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "3394:1:0"
=======
                            "src": "3118:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 350,
                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "3382:13:0"
=======
                        "src": "3106:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 348,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 351,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "3397:1:0"
=======
                            "src": "3121:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "count",
<<<<<<< HEAD
                                  "referencedDeclaration": 4036,
=======
                                  "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "edgesIds",
<<<<<<< HEAD
                                      "referencedDeclaration": 3142,
=======
                                      "referencedDeclaration": 1674,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 334,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "paf"
                                        },
                                        "id": 352,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "3401:3:0"
=======
                                        "src": "3125:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 353,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "3401:12:0"
=======
                                    "src": "3125:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 354,
                                "name": "MemberAccess",
<<<<<<< HEAD
                                "src": "3401:18:0"
=======
                                "src": "3125:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 355,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "3401:20:0"
=======
                            "src": "3125:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 356,
                        "name": "BinaryOperation",
<<<<<<< HEAD
                        "src": "3397:24:0"
=======
                        "src": "3121:24:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 348,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 357,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "3423:1:0"
=======
                                "src": "3147:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 358,
                            "name": "UnaryOperation",
<<<<<<< HEAD
                            "src": "3423:3:0"
=======
                            "src": "3147:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 359,
                        "name": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "3423:3:0"
=======
                        "src": "3147:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                361
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "edgeId",
                                  "scope": 487,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 360,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "3443:7:0"
=======
                                    "src": "3166:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 361,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "3443:14:0"
=======
                                "src": "3166:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint256)",
                                      "value": "uint256"
                                    },
                                    "id": 362,
                                    "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                    "src": "3460:7:0"
=======
                                    "src": "3183:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "keyAtIndex",
<<<<<<< HEAD
                                          "referencedDeclaration": 4079,
=======
                                          "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "edgesIds",
<<<<<<< HEAD
                                              "referencedDeclaration": 3142,
=======
                                              "referencedDeclaration": 1674,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 334,
                                                  "type": "struct DirectedGraph.Graph storage pointer",
                                                  "value": "paf"
                                                },
                                                "id": 363,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "3468:3:0"
=======
                                                "src": "3191:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 364,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "3468:12:0"
=======
                                            "src": "3191:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 365,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "3468:23:0"
=======
                                        "src": "3191:23:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 348,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 366,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "3492:1:0"
=======
                                        "src": "3215:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 367,
                                    "name": "FunctionCall",
<<<<<<< HEAD
                                    "src": "3468:26:0"
=======
                                    "src": "3191:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 368,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "3460:35:0"
=======
                                "src": "3183:35:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 369,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "3443:52:0"
=======
                            "src": "3166:52:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                373
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "edge",
                                  "scope": 487,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct DirectedGraph.Edge",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "DirectedGraph.Edge",
<<<<<<< HEAD
                                      "referencedDeclaration": 3134,
=======
                                      "referencedDeclaration": 1666,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct DirectedGraph.Edge"
                                    },
                                    "id": 372,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "3510:18:0"
=======
                                    "src": "3232:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 373,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "3510:31:0"
=======
                                "src": "3232:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct DirectedGraph.Edge storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "edges",
<<<<<<< HEAD
                                      "referencedDeclaration": 3146,
=======
                                      "referencedDeclaration": 1678,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 334,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "paf"
                                        },
                                        "id": 374,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "3544:3:0"
=======
                                        "src": "3266:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 375,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "3544:9:0"
=======
                                    "src": "3266:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 361,
                                      "type": "uint256",
                                      "value": "edgeId"
                                    },
                                    "id": 376,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "3554:6:0"
=======
                                    "src": "3276:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 377,
                                "name": "IndexAccess",
<<<<<<< HEAD
                                "src": "3544:17:0"
=======
                                "src": "3266:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 378,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "3510:51:0"
=======
                            "src": "3232:51:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                382
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "s",
                                  "scope": 487,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct DirectedGraph.Node",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "DirectedGraph.Node",
<<<<<<< HEAD
                                      "referencedDeclaration": 3127,
=======
                                      "referencedDeclaration": 1659,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct DirectedGraph.Node"
                                    },
                                    "id": 381,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "3578:18:0"
=======
                                    "src": "3298:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 382,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "3578:28:0"
=======
                                "src": "3298:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct DirectedGraph.Node storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "nodes",
<<<<<<< HEAD
                                      "referencedDeclaration": 3140,
=======
                                      "referencedDeclaration": 1672,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 334,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "paf"
                                        },
                                        "id": 383,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "3609:3:0"
=======
                                        "src": "3329:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 384,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "3609:9:0"
=======
                                    "src": "3329:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "source",
<<<<<<< HEAD
                                      "referencedDeclaration": 3129,
=======
                                      "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 373,
                                          "type": "struct DirectedGraph.Edge storage pointer",
                                          "value": "edge"
                                        },
                                        "id": 385,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "3619:4:0"
=======
                                        "src": "3339:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 386,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "3619:11:0"
=======
                                    "src": "3339:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 387,
                                "name": "IndexAccess",
<<<<<<< HEAD
                                "src": "3609:22:0"
=======
                                "src": "3329:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 388,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "3578:53:0"
=======
                            "src": "3298:53:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                392
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "t",
                                  "scope": 487,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct DirectedGraph.Node",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "DirectedGraph.Node",
<<<<<<< HEAD
                                      "referencedDeclaration": 3127,
=======
                                      "referencedDeclaration": 1659,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct DirectedGraph.Node"
                                    },
                                    "id": 391,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "3646:18:0"
=======
                                    "src": "3365:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 392,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "3646:28:0"
=======
                                "src": "3365:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct DirectedGraph.Node storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "nodes",
<<<<<<< HEAD
                                      "referencedDeclaration": 3140,
=======
                                      "referencedDeclaration": 1672,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 334,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "paf"
                                        },
                                        "id": 393,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "3677:3:0"
=======
                                        "src": "3396:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 394,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "3677:9:0"
=======
                                    "src": "3396:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "target",
<<<<<<< HEAD
                                      "referencedDeclaration": 3131,
=======
                                      "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 373,
                                          "type": "struct DirectedGraph.Edge storage pointer",
                                          "value": "edge"
                                        },
                                        "id": 395,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "3687:4:0"
=======
                                        "src": "3406:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 396,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "3687:11:0"
=======
                                    "src": "3406:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 397,
                                "name": "IndexAccess",
<<<<<<< HEAD
                                "src": "3677:22:0"
=======
                                "src": "3396:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 398,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "3646:53:0"
=======
                            "src": "3365:53:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                400
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "notBpreferredToA",
                                  "scope": 487,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "bool",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "bool",
                                      "type": "bool"
                                    },
                                    "id": 399,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "3714:4:0"
=======
                                    "src": "3432:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 400,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "3714:21:0"
=======
                                "src": "3432:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": ">",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "value",
<<<<<<< HEAD
                                              "referencedDeclaration": 3124,
=======
                                              "referencedDeclaration": 1656,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 392,
                                                  "type": "struct DirectedGraph.Node storage pointer",
                                                  "value": "t"
                                                },
                                                "id": 401,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "3740:1:0"
=======
                                                "src": "3458:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 402,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "3740:7:0"
=======
                                            "src": "3458:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "value",
<<<<<<< HEAD
                                              "referencedDeclaration": 3124,
=======
                                              "referencedDeclaration": 1656,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 382,
                                                  "type": "struct DirectedGraph.Node storage pointer",
                                                  "value": "s"
                                                },
                                                "id": 403,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "3750:1:0"
=======
                                                "src": "3468:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 404,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "3750:7:0"
=======
                                            "src": "3468:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 405,
                                        "name": "BinaryOperation",
<<<<<<< HEAD
                                        "src": "3740:17:0"
=======
                                        "src": "3458:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 406,
                                    "name": "TupleExpression",
<<<<<<< HEAD
                                    "src": "3739:19:0"
=======
                                    "src": "3457:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 407,
                                "name": "UnaryOperation",
<<<<<<< HEAD
                                "src": "3738:20:0"
=======
                                "src": "3456:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 408,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "3714:44:0"
=======
                            "src": "3432:44:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                412
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "edgeReverse",
                                  "scope": 487,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct DirectedGraph.Edge",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "DirectedGraph.Edge",
<<<<<<< HEAD
                                      "referencedDeclaration": 3134,
=======
                                      "referencedDeclaration": 1666,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct DirectedGraph.Edge"
                                    },
                                    "id": 411,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "3775:18:0"
=======
                                    "src": "3491:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 412,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "3775:38:0"
=======
                                "src": "3491:38:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct DirectedGraph.Edge storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "edges",
<<<<<<< HEAD
                                      "referencedDeclaration": 3146,
=======
                                      "referencedDeclaration": 1678,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 334,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "paf"
                                        },
                                        "id": 413,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "3816:3:0"
=======
                                        "src": "3532:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 414,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "3816:9:0"
=======
                                    "src": "3532:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "cantorPairing",
<<<<<<< HEAD
                                          "referencedDeclaration": 3394,
=======
                                          "referencedDeclaration": 1926,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3395,
=======
                                              "referencedDeclaration": 1927,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "type(library DirectedGraph)",
                                              "value": "DirectedGraph"
                                            },
                                            "id": 415,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "3844:13:0"
=======
                                            "src": "3559:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 416,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "3844:27:0"
=======
                                        "src": "3559:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "target",
<<<<<<< HEAD
                                          "referencedDeclaration": 3131,
=======
                                          "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 373,
                                              "type": "struct DirectedGraph.Edge storage pointer",
                                              "value": "edge"
                                            },
                                            "id": 417,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "3872:4:0"
=======
                                            "src": "3587:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 418,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "3872:11:0"
=======
                                        "src": "3587:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "source",
<<<<<<< HEAD
                                          "referencedDeclaration": 3129,
=======
                                          "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 373,
                                              "type": "struct DirectedGraph.Edge storage pointer",
                                              "value": "edge"
                                            },
                                            "id": 419,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "3885:4:0"
=======
                                            "src": "3600:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 420,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "3885:11:0"
=======
                                        "src": "3600:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 421,
                                    "name": "FunctionCall",
<<<<<<< HEAD
                                    "src": "3844:53:0"
=======
                                    "src": "3559:53:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 422,
                                "name": "IndexAccess",
<<<<<<< HEAD
                                "src": "3816:96:0"
=======
                                "src": "3532:94:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 423,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "3775:137:0"
=======
                            "src": "3491:135:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                425
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "notBtoA",
                                  "scope": 487,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "bool",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "bool",
                                      "type": "bool"
                                    },
                                    "id": 424,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "3927:4:0"
=======
                                    "src": "3640:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 425,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "3927:12:0"
=======
                                "src": "3640:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "source",
<<<<<<< HEAD
                                          "referencedDeclaration": 3129,
=======
                                          "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 412,
                                              "type": "struct DirectedGraph.Edge storage pointer",
                                              "value": "edgeReverse"
                                            },
                                            "id": 426,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "3942:11:0"
=======
                                            "src": "3655:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 427,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "3942:18:0"
=======
                                        "src": "3655:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 428,
                                        "name": "Literal",
<<<<<<< HEAD
                                        "src": "3963:1:0"
=======
                                        "src": "3676:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 429,
                                    "name": "BinaryOperation",
<<<<<<< HEAD
                                    "src": "3942:22:0"
=======
                                    "src": "3655:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "target",
<<<<<<< HEAD
                                          "referencedDeclaration": 3131,
=======
                                          "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 412,
                                              "type": "struct DirectedGraph.Edge storage pointer",
                                              "value": "edgeReverse"
                                            },
                                            "id": 430,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "3968:11:0"
=======
                                            "src": "3681:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 431,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "3968:18:0"
=======
                                        "src": "3681:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 432,
                                        "name": "Literal",
<<<<<<< HEAD
                                        "src": "3989:1:0"
=======
                                        "src": "3702:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 433,
                                    "name": "BinaryOperation",
<<<<<<< HEAD
                                    "src": "3968:22:0"
=======
                                    "src": "3681:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 434,
                                "name": "BinaryOperation",
<<<<<<< HEAD
                                "src": "3942:48:0"
=======
                                "src": "3655:48:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 435,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "3927:63:0"
=======
                            "src": "3640:63:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "||",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 400,
                                      "type": "bool",
                                      "value": "notBpreferredToA"
                                    },
                                    "id": 436,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "4146:16:0"
=======
                                    "src": "3722:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 425,
                                      "type": "bool",
                                      "value": "notBtoA"
                                    },
                                    "id": 437,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "4166:7:0"
=======
                                    "src": "3742:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 438,
                                "name": "BinaryOperation",
<<<<<<< HEAD
                                "src": "4146:27:0"
=======
                                "src": "3722:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "falseBody": null
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!",
                                          "prefix": true,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "bool",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "exists",
<<<<<<< HEAD
                                                  "referencedDeclaration": 4064,
=======
                                                  "referencedDeclaration": 2596,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32) view returns (bool)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "nodesIds",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3136,
=======
                                                      "referencedDeclaration": 1668,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 342,
                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                          "value": "af"
                                                        },
                                                        "id": 439,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "4306:2:0"
=======
                                                        "src": "3805:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 440,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "4306:11:0"
=======
                                                    "src": "3805:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 441,
                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                "src": "4306:18:0"
=======
                                                "src": "3805:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "bytes32",
                                                  "type_conversion": true
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "type": "type(bytes32)",
                                                      "value": "bytes32"
                                                    },
                                                    "id": 442,
                                                    "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                    "src": "4325:7:0"
=======
                                                    "src": "3824:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "source",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3129,
=======
                                                      "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 373,
                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                          "value": "edge"
                                                        },
                                                        "id": 443,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "4333:4:0"
=======
                                                        "src": "3832:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 444,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "4333:11:0"
=======
                                                    "src": "3832:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 445,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "4325:20:0"
=======
                                                "src": "3824:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 446,
                                            "name": "FunctionCall",
<<<<<<< HEAD
                                            "src": "4306:40:0"
=======
                                            "src": "3805:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 447,
                                        "name": "UnaryOperation",
<<<<<<< HEAD
                                        "src": "4305:41:0"
=======
                                        "src": "3804:41:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "tuple()",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "insertNodeWithId",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3224,
=======
                                                      "referencedDeclaration": 1756,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "function (struct DirectedGraph.Graph storage pointer,uint256)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 342,
                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                          "value": "af"
                                                        },
                                                        "id": 448,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "4371:2:0"
=======
                                                        "src": "3869:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 450,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "4371:19:0"
=======
                                                    "src": "3869:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "source",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3129,
=======
                                                      "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 373,
                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                          "value": "edge"
                                                        },
                                                        "id": 451,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "4391:4:0"
=======
                                                        "src": "3889:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 452,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "4391:11:0"
=======
                                                    "src": "3889:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 453,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "4371:32:0"
=======
                                                "src": "3869:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 454,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "4371:32:0"
=======
                                            "src": "3869:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 455,
                                        "name": "Block",
<<<<<<< HEAD
                                        "src": "4348:75:0"
=======
                                        "src": "3847:73:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 456,
                                    "name": "IfStatement",
<<<<<<< HEAD
                                    "src": "4301:122:0"
=======
                                    "src": "3800:120:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "falseBody": null
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!",
                                          "prefix": true,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "bool",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "exists",
<<<<<<< HEAD
                                                  "referencedDeclaration": 4064,
=======
                                                  "referencedDeclaration": 2596,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32) view returns (bool)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "nodesIds",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3136,
=======
                                                      "referencedDeclaration": 1668,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 342,
                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                          "value": "af"
                                                        },
                                                        "id": 457,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "4446:2:0"
=======
                                                        "src": "3942:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 458,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "4446:11:0"
=======
                                                    "src": "3942:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 459,
                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                "src": "4446:18:0"
=======
                                                "src": "3942:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "bytes32",
                                                  "type_conversion": true
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "type": "type(bytes32)",
                                                      "value": "bytes32"
                                                    },
                                                    "id": 460,
                                                    "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                    "src": "4465:7:0"
=======
                                                    "src": "3961:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "target",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3131,
=======
                                                      "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 373,
                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                          "value": "edge"
                                                        },
                                                        "id": 461,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "4473:4:0"
=======
                                                        "src": "3969:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 462,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "4473:11:0"
=======
                                                    "src": "3969:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 463,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "4465:20:0"
=======
                                                "src": "3961:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 464,
                                            "name": "FunctionCall",
<<<<<<< HEAD
                                            "src": "4446:40:0"
=======
                                            "src": "3942:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 465,
                                        "name": "UnaryOperation",
<<<<<<< HEAD
                                        "src": "4445:41:0"
=======
                                        "src": "3941:41:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "tuple()",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "insertNodeWithId",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3224,
=======
                                                      "referencedDeclaration": 1756,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "function (struct DirectedGraph.Graph storage pointer,uint256)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 342,
                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                          "value": "af"
                                                        },
                                                        "id": 466,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "4511:2:0"
=======
                                                        "src": "4006:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 468,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "4511:19:0"
=======
                                                    "src": "4006:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "target",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3131,
=======
                                                      "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 373,
                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                          "value": "edge"
                                                        },
                                                        "id": 469,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "4531:4:0"
=======
                                                        "src": "4026:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 470,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "4531:11:0"
=======
                                                    "src": "4026:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 471,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "4511:32:0"
=======
                                                "src": "4006:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 472,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "4511:32:0"
=======
                                            "src": "4006:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 473,
                                        "name": "Block",
<<<<<<< HEAD
                                        "src": "4488:75:0"
=======
                                        "src": "3984:73:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 474,
                                    "name": "IfStatement",
<<<<<<< HEAD
                                    "src": "4441:122:0"
=======
                                    "src": "3937:120:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                  "typeString": "literal_string \"\""
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "insertEdge",
<<<<<<< HEAD
                                              "referencedDeclaration": 3367,
=======
                                              "referencedDeclaration": 1899,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "function (struct DirectedGraph.Graph storage pointer,uint256,uint256,string memory) returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 342,
                                                  "type": "struct DirectedGraph.Graph storage pointer",
                                                  "value": "af"
                                                },
                                                "id": 475,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "4581:2:0"
=======
                                                "src": "4074:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 477,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "4581:13:0"
=======
                                            "src": "4074:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "source",
<<<<<<< HEAD
                                              "referencedDeclaration": 3129,
=======
                                              "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 373,
                                                  "type": "struct DirectedGraph.Edge storage pointer",
                                                  "value": "edge"
                                                },
                                                "id": 478,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "4595:4:0"
=======
                                                "src": "4088:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 479,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "4595:11:0"
=======
                                            "src": "4088:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "target",
<<<<<<< HEAD
                                              "referencedDeclaration": 3131,
=======
                                              "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 373,
                                                  "type": "struct DirectedGraph.Edge storage pointer",
                                                  "value": "edge"
                                                },
                                                "id": 480,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "4608:4:0"
=======
                                                "src": "4101:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 481,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "4608:11:0"
=======
                                            "src": "4101:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "string",
                                              "type": "literal_string \"\"",
                                              "value": ""
                                            },
                                            "id": 482,
                                            "name": "Literal",
<<<<<<< HEAD
                                            "src": "4621:2:0"
=======
                                            "src": "4114:2:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 483,
                                        "name": "FunctionCall",
<<<<<<< HEAD
                                        "src": "4581:43:0"
=======
                                        "src": "4074:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 484,
                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "4581:43:0"
=======
                                    "src": "4074:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 485,
                                "name": "Block",
<<<<<<< HEAD
                                "src": "4175:465:0"
=======
                                "src": "3751:381:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 486,
                            "name": "IfStatement",
<<<<<<< HEAD
                            "src": "4142:498:0"
=======
                            "src": "3718:414:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 487,
                        "name": "Block",
<<<<<<< HEAD
                        "src": "3428:1223:0"
=======
                        "src": "3152:990:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 488,
                    "name": "ForStatement",
<<<<<<< HEAD
                    "src": "3377:1274:0"
=======
                    "src": "3101:1041:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 489,
                "name": "Block",
<<<<<<< HEAD
                "src": "3162:1496:0"
=======
                "src": "2893:1255:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 490,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "3098:1560:0"
=======
            "src": "2829:1319:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getGraph",
              "scope": 1644,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "graphId",
                      "scope": 626,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 491,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "4684:7:0"
=======
                        "src": "4172:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 492,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "4684:15:0"
=======
                    "src": "4172:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 493,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "4683:17:0"
=======
                "src": "4171:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "nodes",
                      "scope": 626,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 494,
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "4763:7:0"
=======
                            "src": "4247:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 495,
                        "name": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "4763:9:0"
=======
                        "src": "4247:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 496,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "4763:22:0"
=======
                    "src": "4247:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "edgesSource",
                      "scope": 626,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 497,
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "4800:7:0"
=======
                            "src": "4283:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 498,
                        "name": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "4800:9:0"
=======
                        "src": "4283:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 499,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "4800:28:0"
=======
                    "src": "4283:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "edgesTarget",
                      "scope": 626,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 500,
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "4843:7:0"
=======
                            "src": "4325:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 501,
                        "name": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "4843:9:0"
=======
                        "src": "4325:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 502,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "4843:28:0"
=======
                    "src": "4325:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 503,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "4748:134:0"
=======
                "src": "4233:130:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        507
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "graph",
                          "scope": 625,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct DirectedGraph.Graph",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                              "referencedDeclaration": 3147,
=======
                              "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct DirectedGraph.Graph"
                            },
                            "id": 506,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "4899:19:0"
=======
                            "src": "4378:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 507,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "4899:33:0"
=======
                        "src": "4378:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct DirectedGraph.Graph storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "mapping(uint256 => struct DirectedGraph.Graph storage ref)",
                              "value": "graphs"
                            },
                            "id": 508,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "4935:6:0"
=======
                            "src": "4414:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 492,
                              "type": "uint256",
                              "value": "graphId"
                            },
                            "id": 509,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "4942:7:0"
=======
                            "src": "4421:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 510,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "4935:15:0"
=======
                        "src": "4414:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 511,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "4899:51:0"
=======
                    "src": "4378:51:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        513
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "nodesCount",
                          "scope": 625,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 512,
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "4961:7:0"
=======
                            "src": "4439:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 513,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "4961:18:0"
=======
                        "src": "4439:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "count",
<<<<<<< HEAD
                              "referencedDeclaration": 4036,
=======
                              "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "nodesIds",
<<<<<<< HEAD
                                  "referencedDeclaration": 3136,
=======
                                  "referencedDeclaration": 1668,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 507,
                                      "type": "struct DirectedGraph.Graph storage pointer",
                                      "value": "graph"
                                    },
                                    "id": 514,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "4982:5:0"
=======
                                    "src": "4460:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 515,
                                "name": "MemberAccess",
<<<<<<< HEAD
                                "src": "4982:14:0"
=======
                                "src": "4460:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 516,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "4982:20:0"
=======
                            "src": "4460:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 517,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "4982:22:0"
=======
                        "src": "4460:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 518,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "4961:43:0"
=======
                    "src": "4439:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        520
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "edgesCount",
                          "scope": 625,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 519,
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "5015:7:0"
=======
                            "src": "4492:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 520,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "5015:18:0"
=======
                        "src": "4492:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "count",
<<<<<<< HEAD
                              "referencedDeclaration": 4036,
=======
                              "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "edgesIds",
<<<<<<< HEAD
                                  "referencedDeclaration": 3142,
=======
                                  "referencedDeclaration": 1674,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 507,
                                      "type": "struct DirectedGraph.Graph storage pointer",
                                      "value": "graph"
                                    },
                                    "id": 521,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "5036:5:0"
=======
                                    "src": "4513:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 522,
                                "name": "MemberAccess",
<<<<<<< HEAD
                                "src": "5036:14:0"
=======
                                "src": "4513:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 523,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "5036:20:0"
=======
                            "src": "4513:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 524,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "5036:22:0"
=======
                        "src": "4513:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 525,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "5015:43:0"
=======
                    "src": "4492:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256[] memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 496,
                              "type": "uint256[] memory",
                              "value": "nodes"
                            },
                            "id": 526,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "5071:5:0"
=======
                            "src": "4546:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256[] memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "function (uint256) pure returns (uint256[] memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "length": null,
                                      "type": "uint256[]"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 527,
                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                        "src": "5083:7:0"
=======
                                        "src": "4558:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 528,
                                    "name": "ArrayTypeName",
<<<<<<< HEAD
                                    "src": "5083:9:0"
=======
                                    "src": "4558:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 529,
                                "name": "NewExpression",
<<<<<<< HEAD
                                "src": "5079:13:0"
=======
                                "src": "4554:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 513,
                                  "type": "uint256",
                                  "value": "nodesCount"
                                },
                                "id": 530,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "5093:10:0"
=======
                                "src": "4568:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 531,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "5079:25:0"
=======
                            "src": "4554:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 532,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "5071:33:0"
=======
                        "src": "4546:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 533,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "5071:33:0"
=======
                    "src": "4546:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256[] memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 499,
                              "type": "uint256[] memory",
                              "value": "edgesSource"
                            },
                            "id": 534,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "5115:11:0"
=======
                            "src": "4589:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256[] memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "function (uint256) pure returns (uint256[] memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "length": null,
                                      "type": "uint256[]"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 535,
                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                        "src": "5133:7:0"
=======
                                        "src": "4607:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 536,
                                    "name": "ArrayTypeName",
<<<<<<< HEAD
                                    "src": "5133:9:0"
=======
                                    "src": "4607:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 537,
                                "name": "NewExpression",
<<<<<<< HEAD
                                "src": "5129:13:0"
=======
                                "src": "4603:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 520,
                                  "type": "uint256",
                                  "value": "edgesCount"
                                },
                                "id": 538,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "5143:10:0"
=======
                                "src": "4617:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 539,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "5129:25:0"
=======
                            "src": "4603:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 540,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "5115:39:0"
=======
                        "src": "4589:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 541,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "5115:39:0"
=======
                    "src": "4589:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256[] memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 502,
                              "type": "uint256[] memory",
                              "value": "edgesTarget"
                            },
                            "id": 542,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "5165:11:0"
=======
                            "src": "4638:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256[] memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "function (uint256) pure returns (uint256[] memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "length": null,
                                      "type": "uint256[]"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 543,
                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                        "src": "5183:7:0"
=======
                                        "src": "4656:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 544,
                                    "name": "ArrayTypeName",
<<<<<<< HEAD
                                    "src": "5183:9:0"
=======
                                    "src": "4656:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 545,
                                "name": "NewExpression",
<<<<<<< HEAD
                                "src": "5179:13:0"
=======
                                "src": "4652:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 520,
                                  "type": "uint256",
                                  "value": "edgesCount"
                                },
                                "id": 546,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "5193:10:0"
=======
                                "src": "4666:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 547,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "5179:25:0"
=======
                            "src": "4652:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 548,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "5165:39:0"
=======
                        "src": "4638:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 549,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "5165:39:0"
=======
                    "src": "4638:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            551
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 576,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 550,
                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "5222:7:0"
=======
                                "src": "4693:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 551,
                            "name": "VariableDeclaration",
<<<<<<< HEAD
                            "src": "5222:9:0"
=======
                            "src": "4693:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 552,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "5234:1:0"
=======
                            "src": "4705:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 553,
                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "5222:13:0"
=======
                        "src": "4693:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 551,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 554,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "5237:1:0"
=======
                            "src": "4708:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "count",
<<<<<<< HEAD
                                  "referencedDeclaration": 4036,
=======
                                  "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "nodesIds",
<<<<<<< HEAD
                                      "referencedDeclaration": 3136,
=======
                                      "referencedDeclaration": 1668,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 507,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "graph"
                                        },
                                        "id": 555,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5241:5:0"
=======
                                        "src": "4712:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 556,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "5241:14:0"
=======
                                    "src": "4712:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 557,
                                "name": "MemberAccess",
<<<<<<< HEAD
                                "src": "5241:20:0"
=======
                                "src": "4712:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 558,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "5241:22:0"
=======
                            "src": "4712:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 559,
                        "name": "BinaryOperation",
<<<<<<< HEAD
                        "src": "5237:26:0"
=======
                        "src": "4708:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 551,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 560,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "5265:1:0"
=======
                                "src": "4736:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 561,
                            "name": "UnaryOperation",
<<<<<<< HEAD
                            "src": "5265:3:0"
=======
                            "src": "4736:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 562,
                        "name": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "5265:3:0"
=======
                        "src": "4736:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 496,
                                          "type": "uint256[] memory",
                                          "value": "nodes"
                                        },
                                        "id": 563,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5285:5:0"
=======
                                        "src": "4755:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 551,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 564,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5291:1:0"
=======
                                        "src": "4761:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 565,
                                    "name": "IndexAccess",
<<<<<<< HEAD
                                    "src": "5285:8:0"
=======
                                    "src": "4755:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)",
                                          "value": "uint256"
                                        },
                                        "id": 566,
                                        "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                        "src": "5296:7:0"
=======
                                        "src": "4766:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bytes32",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "keyAtIndex",
<<<<<<< HEAD
                                              "referencedDeclaration": 4079,
=======
                                              "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "nodesIds",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3136,
=======
                                                  "referencedDeclaration": 1668,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 507,
                                                      "type": "struct DirectedGraph.Graph storage pointer",
                                                      "value": "graph"
                                                    },
                                                    "id": 567,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "5304:5:0"
=======
                                                    "src": "4774:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 568,
                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                "src": "5304:14:0"
=======
                                                "src": "4774:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 569,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "5304:25:0"
=======
                                            "src": "4774:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 551,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 570,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "5330:1:0"
=======
                                            "src": "4800:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 571,
                                        "name": "FunctionCall",
<<<<<<< HEAD
                                        "src": "5304:28:0"
=======
                                        "src": "4774:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 572,
                                    "name": "FunctionCall",
<<<<<<< HEAD
                                    "src": "5296:37:0"
=======
                                    "src": "4766:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 573,
                                "name": "Assignment",
<<<<<<< HEAD
                                "src": "5285:48:0"
=======
                                "src": "4755:48:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 574,
                            "name": "ExpressionStatement",
<<<<<<< HEAD
                            "src": "5285:48:0"
=======
                            "src": "4755:48:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 575,
                        "name": "Block",
<<<<<<< HEAD
                        "src": "5270:75:0"
=======
                        "src": "4741:73:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 576,
                    "name": "ForStatement",
<<<<<<< HEAD
                    "src": "5217:128:0"
=======
                    "src": "4688:126:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            578
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 624,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 577,
                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "5362:7:0"
=======
                                "src": "4829:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 578,
                            "name": "VariableDeclaration",
<<<<<<< HEAD
                            "src": "5362:9:0"
=======
                            "src": "4829:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 579,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "5374:1:0"
=======
                            "src": "4841:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 580,
                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "5362:13:0"
=======
                        "src": "4829:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 578,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 581,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "5377:1:0"
=======
                            "src": "4844:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "count",
<<<<<<< HEAD
                                  "referencedDeclaration": 4036,
=======
                                  "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "edgesIds",
<<<<<<< HEAD
                                      "referencedDeclaration": 3142,
=======
                                      "referencedDeclaration": 1674,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 507,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "graph"
                                        },
                                        "id": 582,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5381:5:0"
=======
                                        "src": "4848:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 583,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "5381:14:0"
=======
                                    "src": "4848:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 584,
                                "name": "MemberAccess",
<<<<<<< HEAD
                                "src": "5381:20:0"
=======
                                "src": "4848:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 585,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "5381:22:0"
=======
                            "src": "4848:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 586,
                        "name": "BinaryOperation",
<<<<<<< HEAD
                        "src": "5377:26:0"
=======
                        "src": "4844:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 578,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 587,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "5405:1:0"
=======
                                "src": "4872:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 588,
                            "name": "UnaryOperation",
<<<<<<< HEAD
                            "src": "5405:3:0"
=======
                            "src": "4872:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 589,
                        "name": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "5405:3:0"
=======
                        "src": "4872:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                591
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "edgeId",
                                  "scope": 623,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 590,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "5425:7:0"
=======
                                    "src": "4891:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 591,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "5425:14:0"
=======
                                "src": "4891:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint256)",
                                      "value": "uint256"
                                    },
                                    "id": 592,
                                    "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                    "src": "5442:7:0"
=======
                                    "src": "4908:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "keyAtIndex",
<<<<<<< HEAD
                                          "referencedDeclaration": 4079,
=======
                                          "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "edgesIds",
<<<<<<< HEAD
                                              "referencedDeclaration": 3142,
=======
                                              "referencedDeclaration": 1674,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 507,
                                                  "type": "struct DirectedGraph.Graph storage pointer",
                                                  "value": "graph"
                                                },
                                                "id": 593,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "5450:5:0"
=======
                                                "src": "4916:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 594,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "5450:14:0"
=======
                                            "src": "4916:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 595,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "5450:25:0"
=======
                                        "src": "4916:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 578,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 596,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5476:1:0"
=======
                                        "src": "4942:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 597,
                                    "name": "FunctionCall",
<<<<<<< HEAD
                                    "src": "5450:28:0"
=======
                                    "src": "4916:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 598,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "5442:37:0"
=======
                                "src": "4908:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 599,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "5425:54:0"
=======
                            "src": "4891:54:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                603
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "edge",
                                  "scope": 623,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct DirectedGraph.Edge",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "DirectedGraph.Edge",
<<<<<<< HEAD
                                      "referencedDeclaration": 3134,
=======
                                      "referencedDeclaration": 1666,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct DirectedGraph.Edge"
                                    },
                                    "id": 602,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "5494:18:0"
=======
                                    "src": "4959:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 603,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "5494:31:0"
=======
                                "src": "4959:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct DirectedGraph.Edge storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "edges",
<<<<<<< HEAD
                                      "referencedDeclaration": 3146,
=======
                                      "referencedDeclaration": 1678,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 507,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "graph"
                                        },
                                        "id": 604,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5528:5:0"
=======
                                        "src": "4993:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 605,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "5528:11:0"
=======
                                    "src": "4993:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 591,
                                      "type": "uint256",
                                      "value": "edgeId"
                                    },
                                    "id": 606,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "5540:6:0"
=======
                                    "src": "5005:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 607,
                                "name": "IndexAccess",
<<<<<<< HEAD
                                "src": "5528:19:0"
=======
                                "src": "4993:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 608,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "5494:53:0"
=======
                            "src": "4959:53:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 499,
                                          "type": "uint256[] memory",
                                          "value": "edgesSource"
                                        },
                                        "id": 609,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5562:11:0"
=======
                                        "src": "5026:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 578,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 610,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5574:1:0"
=======
                                        "src": "5038:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 611,
                                    "name": "IndexAccess",
<<<<<<< HEAD
                                    "src": "5562:14:0"
=======
                                    "src": "5026:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "source",
<<<<<<< HEAD
                                      "referencedDeclaration": 3129,
=======
                                      "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 603,
                                          "type": "struct DirectedGraph.Edge storage pointer",
                                          "value": "edge"
                                        },
                                        "id": 612,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5579:4:0"
=======
                                        "src": "5043:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 613,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "5579:11:0"
=======
                                    "src": "5043:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 614,
                                "name": "Assignment",
<<<<<<< HEAD
                                "src": "5562:28:0"
=======
                                "src": "5026:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 615,
                            "name": "ExpressionStatement",
<<<<<<< HEAD
                            "src": "5562:28:0"
=======
                            "src": "5026:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 502,
                                          "type": "uint256[] memory",
                                          "value": "edgesTarget"
                                        },
                                        "id": 616,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5605:11:0"
=======
                                        "src": "5068:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 578,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 617,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5617:1:0"
=======
                                        "src": "5080:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 618,
                                    "name": "IndexAccess",
<<<<<<< HEAD
                                    "src": "5605:14:0"
=======
                                    "src": "5068:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "target",
<<<<<<< HEAD
                                      "referencedDeclaration": 3131,
=======
                                      "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 603,
                                          "type": "struct DirectedGraph.Edge storage pointer",
                                          "value": "edge"
                                        },
                                        "id": 619,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "5622:4:0"
=======
                                        "src": "5085:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 620,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "5622:11:0"
=======
                                    "src": "5085:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 621,
                                "name": "Assignment",
<<<<<<< HEAD
                                "src": "5605:28:0"
=======
                                "src": "5068:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 622,
                            "name": "ExpressionStatement",
<<<<<<< HEAD
                            "src": "5605:28:0"
=======
                            "src": "5068:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 623,
                        "name": "Block",
<<<<<<< HEAD
                        "src": "5410:235:0"
=======
                        "src": "4877:230:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 624,
                    "name": "ForStatement",
<<<<<<< HEAD
                    "src": "5357:288:0"
=======
                    "src": "4824:283:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 625,
                "name": "Block",
<<<<<<< HEAD
                "src": "4888:764:0"
=======
                "src": "4368:745:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 626,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "4666:986:0"
=======
            "src": "4154:959:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "enumeratingPreferredExtensions",
              "scope": 1644,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "graphId",
                      "scope": 736,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 627,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "5700:7:0"
=======
                        "src": "5159:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 628,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "5700:15:0"
=======
                    "src": "5159:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 629,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "5699:17:0"
=======
                "src": "5158:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "args",
                      "scope": 736,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 630,
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "5751:7:0"
=======
                            "src": "5208:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 631,
                        "name": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "5751:9:0"
=======
                        "src": "5208:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 632,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "5751:21:0"
=======
                    "src": "5208:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 633,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "5750:23:0"
=======
                "src": "5207:23:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        637
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "graph",
                          "scope": 735,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct DirectedGraph.Graph",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                              "referencedDeclaration": 3147,
=======
                              "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct DirectedGraph.Graph"
                            },
                            "id": 636,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "5790:19:0"
=======
                            "src": "5245:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 637,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "5790:33:0"
=======
                        "src": "5245:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct DirectedGraph.Graph storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "mapping(uint256 => struct DirectedGraph.Graph storage ref)",
                              "value": "graphs"
                            },
                            "id": 638,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "5826:6:0"
=======
                            "src": "5281:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 628,
                              "type": "uint256",
                              "value": "graphId"
                            },
                            "id": 639,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "5833:7:0"
=======
                            "src": "5288:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 640,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "5826:15:0"
=======
                        "src": "5281:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 641,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "5790:51:0"
=======
                    "src": "5245:51:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        645
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "ext",
                          "scope": 735,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct HitchensUnorderedKeySetLib.Set",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "HitchensUnorderedKeySetLib.Set",
<<<<<<< HEAD
                              "referencedDeclaration": 3922,
=======
                              "referencedDeclaration": 2454,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct HitchensUnorderedKeySetLib.Set"
                            },
                            "id": 644,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "5852:30:0"
=======
                            "src": "5306:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 645,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "5852:42:0"
=======
                        "src": "5306:42:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 34,
                              "type": "mapping(uint256 => struct HitchensUnorderedKeySetLib.Set storage ref)",
                              "value": "prefExtensions"
                            },
                            "id": 646,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "5897:14:0"
=======
                            "src": "5351:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 30,
                              "type": "uint256",
                              "value": "prefExtensionsNum"
                            },
                            "id": 647,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "5926:17:0"
=======
                            "src": "5379:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 648,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "5897:57:0"
=======
                        "src": "5351:55:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 649,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "5852:102:0"
=======
                    "src": "5306:100:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        653
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "lab",
                          "scope": 735,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct EMap.LabelMap",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "EMap.LabelMap",
<<<<<<< HEAD
                              "referencedDeclaration": 3726,
=======
                              "referencedDeclaration": 2258,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.LabelMap"
                            },
                            "id": 652,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "5965:13:0"
=======
                            "src": "5416:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 653,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "5965:25:0"
=======
                        "src": "5416:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct EMap.LabelMap storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "mapping(uint256 => struct EMap.LabelMap storage ref)",
                              "value": "labs"
                            },
                            "id": 654,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "5993:4:0"
=======
                            "src": "5444:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24,
                              "type": "uint256",
                              "value": "labsNum"
                            },
                            "id": 655,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "5998:7:0"
=======
                            "src": "5449:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 656,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "5993:13:0"
=======
                        "src": "5444:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 657,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "5965:41:0"
=======
                    "src": "5416:41:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            659
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 687,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 658,
                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "6022:7:0"
=======
                                "src": "5472:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 659,
                            "name": "VariableDeclaration",
<<<<<<< HEAD
                            "src": "6022:9:0"
=======
                            "src": "5472:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 660,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "6034:1:0"
=======
                            "src": "5484:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 661,
                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "6022:13:0"
=======
                        "src": "5472:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 659,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 662,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "6037:1:0"
=======
                            "src": "5487:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "count",
<<<<<<< HEAD
                                  "referencedDeclaration": 4036,
=======
                                  "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "nodesIds",
<<<<<<< HEAD
                                      "referencedDeclaration": 3136,
=======
                                      "referencedDeclaration": 1668,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 637,
                                          "type": "struct DirectedGraph.Graph storage pointer",
                                          "value": "graph"
                                        },
                                        "id": 663,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "6041:5:0"
=======
                                        "src": "5491:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 664,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "6041:14:0"
=======
                                    "src": "5491:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 665,
                                "name": "MemberAccess",
<<<<<<< HEAD
                                "src": "6041:20:0"
=======
                                "src": "5491:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 666,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "6041:22:0"
=======
                            "src": "5491:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 667,
                        "name": "BinaryOperation",
<<<<<<< HEAD
                        "src": "6037:26:0"
=======
                        "src": "5487:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 659,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 668,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "6065:1:0"
=======
                                "src": "5515:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 669,
                            "name": "UnaryOperation",
<<<<<<< HEAD
                            "src": "6065:3:0"
=======
                            "src": "5515:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 670,
                        "name": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "6065:3:0"
=======
                        "src": "5515:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
<<<<<<< HEAD
                                          "typeIdentifier": "t_enum$_Label_$3723",
=======
                                          "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "enum EMap.Label"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "set",
<<<<<<< HEAD
                                      "referencedDeclaration": 3751,
=======
                                      "referencedDeclaration": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 653,
                                          "type": "struct EMap.LabelMap storage pointer",
                                          "value": "lab"
                                        },
                                        "id": 671,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "6085:3:0"
=======
                                        "src": "5534:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 673,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "6085:7:0"
=======
                                    "src": "5534:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)",
                                          "value": "uint256"
                                        },
                                        "id": 674,
                                        "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                        "src": "6093:7:0"
=======
                                        "src": "5542:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bytes32",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "keyAtIndex",
<<<<<<< HEAD
                                              "referencedDeclaration": 4079,
=======
                                              "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "nodesIds",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3136,
=======
                                                  "referencedDeclaration": 1668,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 637,
                                                      "type": "struct DirectedGraph.Graph storage pointer",
                                                      "value": "graph"
                                                    },
                                                    "id": 675,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "6101:5:0"
=======
                                                    "src": "5550:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 676,
                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                "src": "6101:14:0"
=======
                                                "src": "5550:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 677,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "6101:25:0"
=======
                                            "src": "5550:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 659,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 678,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "6127:1:0"
=======
                                            "src": "5576:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 679,
                                        "name": "FunctionCall",
<<<<<<< HEAD
                                        "src": "6101:28:0"
=======
                                        "src": "5550:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 680,
                                    "name": "FunctionCall",
<<<<<<< HEAD
                                    "src": "6093:37:0"
=======
                                    "src": "5542:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "member_name": "BLANK",
                                      "referencedDeclaration": null,
                                      "type": "enum EMap.Label"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "Label",
<<<<<<< HEAD
                                          "referencedDeclaration": 3723,
=======
                                          "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "type(enum EMap.Label)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3912,
=======
                                              "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "type(library EMap)",
                                              "value": "EMap"
                                            },
                                            "id": 681,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "6132:4:0"
=======
                                            "src": "5581:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 682,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "6132:10:0"
=======
                                        "src": "5581:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 683,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "6132:16:0"
=======
                                    "src": "5581:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 684,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "6085:64:0"
=======
                                "src": "5534:64:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 685,
                            "name": "ExpressionStatement",
<<<<<<< HEAD
                            "src": "6085:64:0"
=======
                            "src": "5534:64:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 686,
                        "name": "Block",
<<<<<<< HEAD
                        "src": "6070:91:0"
=======
                        "src": "5520:89:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 687,
                    "name": "ForStatement",
<<<<<<< HEAD
                    "src": "6017:144:0"
=======
                    "src": "5467:142:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1436,
                              "type": "function (uint256,uint256,uint256)",
                              "value": "_findPreferredExtensions"
                            },
                            "id": 688,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "6171:24:0"
=======
                            "src": "5618:24:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24,
                                  "type": "uint256",
                                  "value": "labsNum"
                                },
                                "id": 689,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "6196:7:0"
=======
                                "src": "5643:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 690,
                            "name": "UnaryOperation",
<<<<<<< HEAD
                            "src": "6196:9:0"
=======
                            "src": "5643:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 30,
                                  "type": "uint256",
                                  "value": "prefExtensionsNum"
                                },
                                "id": 691,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "6207:17:0"
=======
                                "src": "5654:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 692,
                            "name": "UnaryOperation",
<<<<<<< HEAD
                            "src": "6207:19:0"
=======
                            "src": "5654:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 628,
                              "type": "uint256",
                              "value": "graphId"
                            },
                            "id": 693,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "6228:7:0"
=======
                            "src": "5675:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 694,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "6171:65:0"
=======
                        "src": "5618:65:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 695,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "6171:65:0"
=======
                    "src": "5618:65:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256[] memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 632,
                              "type": "uint256[] memory",
                              "value": "args"
                            },
                            "id": 696,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "6249:4:0"
=======
                            "src": "5694:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256[] memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "function (uint256) pure returns (uint256[] memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "length": null,
                                      "type": "uint256[]"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 697,
                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                        "src": "6260:7:0"
=======
                                        "src": "5705:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 698,
                                    "name": "ArrayTypeName",
<<<<<<< HEAD
                                    "src": "6260:9:0"
=======
                                    "src": "5705:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 699,
                                "name": "NewExpression",
<<<<<<< HEAD
                                "src": "6256:13:0"
=======
                                "src": "5701:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "count",
<<<<<<< HEAD
                                      "referencedDeclaration": 4036,
=======
                                      "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 645,
                                          "type": "struct HitchensUnorderedKeySetLib.Set storage pointer",
                                          "value": "ext"
                                        },
                                        "id": 700,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "6270:3:0"
=======
                                        "src": "5715:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 701,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "6270:9:0"
=======
                                    "src": "5715:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 702,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "6270:11:0"
=======
                                "src": "5715:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 703,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "6256:26:0"
=======
                            "src": "5701:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 704,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "6249:33:0"
=======
                        "src": "5694:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 705,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "6249:33:0"
=======
                    "src": "5694:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            707
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 730,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 706,
                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "6298:7:0"
=======
                                "src": "5742:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 707,
                            "name": "VariableDeclaration",
<<<<<<< HEAD
                            "src": "6298:9:0"
=======
                            "src": "5742:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 708,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "6310:1:0"
=======
                            "src": "5754:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 709,
                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "6298:13:0"
=======
                        "src": "5742:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 707,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 710,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "6313:1:0"
=======
                            "src": "5757:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "count",
<<<<<<< HEAD
                                  "referencedDeclaration": 4036,
=======
                                  "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 645,
                                      "type": "struct HitchensUnorderedKeySetLib.Set storage pointer",
                                      "value": "ext"
                                    },
                                    "id": 711,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "6317:3:0"
=======
                                    "src": "5761:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 712,
                                "name": "MemberAccess",
<<<<<<< HEAD
                                "src": "6317:9:0"
=======
                                "src": "5761:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 713,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "6317:11:0"
=======
                            "src": "5761:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 714,
                        "name": "BinaryOperation",
<<<<<<< HEAD
                        "src": "6313:15:0"
=======
                        "src": "5757:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 707,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 715,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "6330:1:0"
=======
                                "src": "5774:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 716,
                            "name": "UnaryOperation",
<<<<<<< HEAD
                            "src": "6330:3:0"
=======
                            "src": "5774:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 717,
                        "name": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "6330:3:0"
=======
                        "src": "5774:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 632,
                                          "type": "uint256[] memory",
                                          "value": "args"
                                        },
                                        "id": 718,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "6350:4:0"
=======
                                        "src": "5793:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 707,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 719,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "6355:1:0"
=======
                                        "src": "5798:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 720,
                                    "name": "IndexAccess",
<<<<<<< HEAD
                                    "src": "6350:7:0"
=======
                                    "src": "5793:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)",
                                          "value": "uint256"
                                        },
                                        "id": 721,
                                        "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                        "src": "6360:7:0"
=======
                                        "src": "5803:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bytes32",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "keyAtIndex",
<<<<<<< HEAD
                                              "referencedDeclaration": 4079,
=======
                                              "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 645,
                                                  "type": "struct HitchensUnorderedKeySetLib.Set storage pointer",
                                                  "value": "ext"
                                                },
                                                "id": 722,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "6368:3:0"
=======
                                                "src": "5811:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 723,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "6368:14:0"
=======
                                            "src": "5811:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 707,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 724,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "6383:1:0"
=======
                                            "src": "5826:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 725,
                                        "name": "FunctionCall",
<<<<<<< HEAD
                                        "src": "6368:17:0"
=======
                                        "src": "5811:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 726,
                                    "name": "FunctionCall",
<<<<<<< HEAD
                                    "src": "6360:26:0"
=======
                                    "src": "5803:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 727,
                                "name": "Assignment",
<<<<<<< HEAD
                                "src": "6350:36:0"
=======
                                "src": "5793:36:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 728,
                            "name": "ExpressionStatement",
<<<<<<< HEAD
                            "src": "6350:36:0"
=======
                            "src": "5793:36:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 729,
                        "name": "Block",
<<<<<<< HEAD
                        "src": "6335:63:0"
=======
                        "src": "5779:61:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 730,
                    "name": "ForStatement",
<<<<<<< HEAD
                    "src": "6293:105:0"
=======
                    "src": "5737:103:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 39,
                              "type": "function (uint256[] memory)",
                              "value": "PreferredExtensions"
                            },
                            "id": 731,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "6415:19:0"
=======
                            "src": "5855:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 632,
                              "type": "uint256[] memory",
                              "value": "args"
                            },
                            "id": 732,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "6435:4:0"
=======
                            "src": "5875:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 733,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "6415:25:0"
=======
                        "src": "5855:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 734,
                    "name": "EmitStatement",
<<<<<<< HEAD
                    "src": "6410:30:0"
=======
                    "src": "5850:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 735,
                "name": "Block",
<<<<<<< HEAD
                "src": "5779:669:0"
=======
                "src": "5235:652:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 736,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "5660:788:0"
=======
            "src": "5119:768:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_findPreferredExtensions",
              "scope": 1644,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "labId",
                      "scope": 1436,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 737,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "6500:7:0"
=======
                        "src": "5936:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 738,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "6500:13:0"
=======
                    "src": "5936:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "prefExtensionId",
                      "scope": 1436,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 739,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "6524:7:0"
=======
                        "src": "5959:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 740,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "6524:23:0"
=======
                    "src": "5959:23:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "graphId",
                      "scope": 1436,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 741,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "6558:7:0"
=======
                        "src": "5992:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 742,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "6558:15:0"
=======
                    "src": "5992:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 743,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "6489:91:0"
=======
                "src": "5926:87:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 744,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "6589:0:0"
=======
                "src": "6022:0:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        748
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "graph",
                          "scope": 1435,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct DirectedGraph.Graph",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "DirectedGraph.Graph",
<<<<<<< HEAD
                              "referencedDeclaration": 3147,
=======
                              "referencedDeclaration": 1679,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct DirectedGraph.Graph"
                            },
                            "id": 747,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "6600:19:0"
=======
                            "src": "6032:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 748,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "6600:33:0"
=======
                        "src": "6032:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct DirectedGraph.Graph storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 18,
                              "type": "mapping(uint256 => struct DirectedGraph.Graph storage ref)",
                              "value": "graphs"
                            },
                            "id": 749,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "6636:6:0"
=======
                            "src": "6068:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 742,
                              "type": "uint256",
                              "value": "graphId"
                            },
                            "id": 750,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "6643:7:0"
=======
                            "src": "6075:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 751,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "6636:15:0"
=======
                        "src": "6068:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 752,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "6600:51:0"
=======
                    "src": "6032:51:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        756
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "lab",
                          "scope": 1435,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct EMap.LabelMap",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "EMap.LabelMap",
<<<<<<< HEAD
                              "referencedDeclaration": 3726,
=======
                              "referencedDeclaration": 2258,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.LabelMap"
                            },
                            "id": 755,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "6662:13:0"
=======
                            "src": "6093:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 756,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "6662:25:0"
=======
                        "src": "6093:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct EMap.LabelMap storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "mapping(uint256 => struct EMap.LabelMap storage ref)",
                              "value": "labs"
                            },
                            "id": 757,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "6690:4:0"
=======
                            "src": "6121:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 738,
                              "type": "uint256",
                              "value": "labId"
                            },
                            "id": 758,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "6695:5:0"
=======
                            "src": "6126:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 759,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "6690:11:0"
=======
                        "src": "6121:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 760,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "6662:39:0"
=======
                    "src": "6093:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        764
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "flags",
                          "scope": 1435,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "bool[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "bool[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "bool",
                                  "type": "bool"
                                },
                                "id": 762,
                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "6712:4:0"
=======
                                "src": "6142:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 763,
                            "name": "ArrayTypeName",
<<<<<<< HEAD
                            "src": "6712:6:0"
=======
                            "src": "6142:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 764,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "6712:19:0"
=======
                        "src": "6142:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (bool[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "length": null,
                                  "type": "bool[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "bool",
                                      "type": "bool"
                                    },
                                    "id": 765,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "6738:4:0"
=======
                                    "src": "6168:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 766,
                                "name": "ArrayTypeName",
<<<<<<< HEAD
                                "src": "6738:6:0"
=======
                                "src": "6168:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 767,
                            "name": "NewExpression",
<<<<<<< HEAD
                            "src": "6734:10:0"
=======
                            "src": "6164:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "35",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 5",
                              "value": "5"
                            },
                            "id": 768,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "6745:1:0"
=======
                            "src": "6175:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 769,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "6734:13:0"
=======
                        "src": "6164:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 770,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "6712:35:0"
=======
                    "src": "6142:35:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!",
                          "prefix": true,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 764,
                                  "type": "bool[] memory",
                                  "value": "flags"
                                },
                                "id": 771,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "6817:5:0"
=======
                                "src": "6244:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 772,
                                "name": "Literal",
<<<<<<< HEAD
                                "src": "6823:1:0"
=======
                                "src": "6250:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 773,
                            "name": "IndexAccess",
<<<<<<< HEAD
                            "src": "6817:8:0"
=======
                            "src": "6244:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 774,
                        "name": "UnaryOperation",
<<<<<<< HEAD
                        "src": "6816:9:0"
=======
                        "src": "6243:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                778,
                                780
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "argIds",
                                  "scope": 1371,
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "type": "uint256[]",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "length": null,
                                      "type": "uint256[]"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 776,
                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                        "src": "6843:7:0"
=======
                                        "src": "6269:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 777,
                                    "name": "ArrayTypeName",
<<<<<<< HEAD
                                    "src": "6843:9:0"
=======
                                    "src": "6269:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 778,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "6843:23:0"
=======
                                "src": "6269:23:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "argIdsLen",
                                  "scope": 1371,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 779,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "6868:7:0"
=======
                                    "src": "6294:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 780,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "6868:17:0"
=======
                                "src": "6294:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple(uint256[] memory,uint256)",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1505,
                                      "type": "function (uint256) view returns (uint256[] memory,uint256)",
                                      "value": "_getBlank"
                                    },
                                    "id": 781,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "6889:9:0"
=======
                                    "src": "6315:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 738,
                                      "type": "uint256",
                                      "value": "labId"
                                    },
                                    "id": 782,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "6899:5:0"
=======
                                    "src": "6325:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 783,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "6889:16:0"
=======
                                "src": "6315:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 784,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "6842:63:0"
=======
                            "src": "6268:63:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 780,
                                      "type": "uint256",
                                      "value": "argIdsLen"
                                    },
                                    "id": 785,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "6924:9:0"
=======
                                    "src": "6349:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 786,
                                    "name": "Literal",
<<<<<<< HEAD
                                    "src": "6937:1:0"
=======
                                    "src": "6362:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 787,
                                "name": "BinaryOperation",
<<<<<<< HEAD
                                "src": "6924:14:0"
=======
                                "src": "6349:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 764,
                                                  "type": "bool[] memory",
                                                  "value": "flags"
                                                },
                                                "id": 788,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "6959:5:0"
=======
                                                "src": "6383:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "hexvalue": "30",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "subdenomination": null,
                                                  "token": "number",
                                                  "type": "int_const 0",
                                                  "value": "0"
                                                },
                                                "id": 789,
                                                "name": "Literal",
<<<<<<< HEAD
                                                "src": "6965:1:0"
=======
                                                "src": "6389:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 790,
                                            "name": "IndexAccess",
<<<<<<< HEAD
                                            "src": "6959:8:0"
=======
                                            "src": "6383:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "74727565",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "bool",
                                              "type": "bool",
                                              "value": "true"
                                            },
                                            "id": 791,
                                            "name": "Literal",
<<<<<<< HEAD
                                            "src": "6970:4:0"
=======
                                            "src": "6394:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 792,
                                        "name": "Assignment",
<<<<<<< HEAD
                                        "src": "6959:15:0"
=======
                                        "src": "6383:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 793,
                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "6959:15:0"
=======
                                    "src": "6383:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 794,
                                "name": "Block",
<<<<<<< HEAD
                                "src": "6940:50:0"
=======
                                "src": "6365:48:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "assignments": [
                                        796
                                      ]
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "constant": false,
                                          "name": "y",
                                          "scope": 1369,
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "type": "uint256",
                                          "value": null,
                                          "visibility": "internal"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "uint256",
                                              "type": "uint256"
                                            },
                                            "id": 795,
                                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                                            "src": "7015:7:0"
=======
                                            "src": "6437:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 796,
                                        "name": "VariableDeclaration",
<<<<<<< HEAD
                                        "src": "7015:9:0"
=======
                                        "src": "6437:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 797,
                                        "name": "Literal",
<<<<<<< HEAD
                                        "src": "7027:1:0"
=======
                                        "src": "6449:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 798,
                                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                    "src": "7015:13:0"
=======
                                    "src": "6437:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 764,
                                                  "type": "bool[] memory",
                                                  "value": "flags"
                                                },
                                                "id": 799,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "7143:5:0"
=======
                                                "src": "6563:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "hexvalue": "31",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "subdenomination": null,
                                                  "token": "number",
                                                  "type": "int_const 1",
                                                  "value": "1"
                                                },
                                                "id": 800,
                                                "name": "Literal",
<<<<<<< HEAD
                                                "src": "7149:1:0"
=======
                                                "src": "6569:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 801,
                                            "name": "IndexAccess",
<<<<<<< HEAD
                                            "src": "7143:8:0"
=======
                                            "src": "6563:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "66616c7365",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "bool",
                                              "type": "bool",
                                              "value": "false"
                                            },
                                            "id": 802,
                                            "name": "Literal",
<<<<<<< HEAD
                                            "src": "7154:5:0"
=======
                                            "src": "6574:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 803,
                                        "name": "Assignment",
<<<<<<< HEAD
                                        "src": "7143:16:0"
=======
                                        "src": "6563:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 804,
                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "7143:16:0"
=======
                                    "src": "6563:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "assignments": [
                                            806
                                          ]
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "constant": false,
                                              "name": "i",
                                              "scope": 913,
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "type": "uint256",
                                              "value": null,
                                              "visibility": "internal"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "uint256",
                                                  "type": "uint256"
                                                },
                                                "id": 805,
                                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                "src": "7183:7:0"
=======
                                                "src": "6602:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 806,
                                            "name": "VariableDeclaration",
<<<<<<< HEAD
                                            "src": "7183:9:0"
=======
                                            "src": "6602:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 807,
                                            "name": "Literal",
<<<<<<< HEAD
                                            "src": "7195:1:0"
=======
                                            "src": "6614:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 808,
                                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                        "src": "7183:13:0"
=======
                                        "src": "6602:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "&&",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "<",
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 806,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 809,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "7198:1:0"
=======
                                                "src": "6617:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 780,
                                                  "type": "uint256",
                                                  "value": "argIdsLen"
                                                },
                                                "id": 810,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "7202:9:0"
=======
                                                "src": "6621:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 811,
                                            "name": "BinaryOperation",
<<<<<<< HEAD
                                            "src": "7198:13:0"
=======
                                            "src": "6617:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "!",
                                              "prefix": true,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 764,
                                                      "type": "bool[] memory",
                                                      "value": "flags"
                                                    },
                                                    "id": 812,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "7216:5:0"
=======
                                                    "src": "6635:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "hexvalue": "31",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "subdenomination": null,
                                                      "token": "number",
                                                      "type": "int_const 1",
                                                      "value": "1"
                                                    },
                                                    "id": 813,
                                                    "name": "Literal",
<<<<<<< HEAD
                                                    "src": "7222:1:0"
=======
                                                    "src": "6641:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 814,
                                                "name": "IndexAccess",
<<<<<<< HEAD
                                                "src": "7216:8:0"
=======
                                                "src": "6635:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 815,
                                            "name": "UnaryOperation",
<<<<<<< HEAD
                                            "src": "7215:9:0"
=======
                                            "src": "6634:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 816,
                                        "name": "BinaryOperation",
<<<<<<< HEAD
                                        "src": "7198:26:0"
=======
                                        "src": "6617:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "++",
                                              "prefix": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 806,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 817,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "7226:1:0"
=======
                                                "src": "6645:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 818,
                                            "name": "UnaryOperation",
<<<<<<< HEAD
                                            "src": "7226:3:0"
=======
                                            "src": "6645:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 819,
                                        "name": "ExpressionStatement",
<<<<<<< HEAD
                                        "src": "7226:3:0"
=======
                                        "src": "6645:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "=",
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 796,
                                                      "type": "uint256",
                                                      "value": "y"
                                                    },
                                                    "id": 820,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "7254:1:0"
=======
                                                    "src": "6672:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 778,
                                                          "type": "uint256[] memory",
                                                          "value": "argIds"
                                                        },
                                                        "id": 821,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "7258:6:0"
=======
                                                        "src": "6676:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 806,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 822,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "7265:1:0"
=======
                                                        "src": "6683:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 823,
                                                    "name": "IndexAccess",
<<<<<<< HEAD
                                                    "src": "7258:9:0"
=======
                                                    "src": "6676:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 824,
                                                "name": "Assignment",
<<<<<<< HEAD
                                                "src": "7254:13:0"
=======
                                                "src": "6672:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 825,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "7254:13:0"
=======
                                            "src": "6672:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "assignments": [
                                                829
                                              ]
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "constant": false,
                                                  "name": "y_temp",
                                                  "scope": 912,
                                                  "stateVariable": false,
                                                  "storageLocation": "storage",
                                                  "type": "struct DirectedGraph.Node",
                                                  "value": null,
                                                  "visibility": "internal"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "contractScope": null,
                                                      "name": "DirectedGraph.Node",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3127,
=======
                                                      "referencedDeclaration": 1659,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "struct DirectedGraph.Node"
                                                    },
                                                    "id": 828,
                                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                                    "src": "7290:18:0"
=======
                                                    "src": "6707:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 829,
                                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                                "src": "7290:33:0"
=======
                                                "src": "6707:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct DirectedGraph.Node storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "nodes",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3140,
=======
                                                      "referencedDeclaration": 1672,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 748,
                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                          "value": "graph"
                                                        },
                                                        "id": 830,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "7326:5:0"
=======
                                                        "src": "6743:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 831,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "7326:11:0"
=======
                                                    "src": "6743:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 796,
                                                      "type": "uint256",
                                                      "value": "y"
                                                    },
                                                    "id": 832,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "7338:1:0"
=======
                                                    "src": "6755:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 833,
                                                "name": "IndexAccess",
<<<<<<< HEAD
                                                "src": "7326:14:0"
=======
                                                "src": "6743:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 834,
                                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                            "src": "7290:50:0"
=======
                                            "src": "6707:50:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "=",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": true,
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 764,
                                                          "type": "bool[] memory",
                                                          "value": "flags"
                                                        },
                                                        "id": 835,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "7363:5:0"
=======
                                                        "src": "6779:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "hexvalue": "32",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "subdenomination": null,
                                                          "token": "number",
                                                          "type": "int_const 2",
                                                          "value": "2"
                                                        },
                                                        "id": 836,
                                                        "name": "Literal",
<<<<<<< HEAD
                                                        "src": "7369:1:0"
=======
                                                        "src": "6785:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 837,
                                                    "name": "IndexAccess",
<<<<<<< HEAD
                                                    "src": "7363:8:0"
=======
                                                    "src": "6779:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "hexvalue": "66616c7365",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "subdenomination": null,
                                                      "token": "bool",
                                                      "type": "bool",
                                                      "value": "false"
                                                    },
                                                    "id": 838,
                                                    "name": "Literal",
<<<<<<< HEAD
                                                    "src": "7374:5:0"
=======
                                                    "src": "6790:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 839,
                                                "name": "Assignment",
<<<<<<< HEAD
                                                "src": "7363:16:0"
=======
                                                "src": "6779:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 840,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "7363:16:0"
=======
                                            "src": "6779:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "assignments": [
                                                    842
                                                  ]
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "constant": false,
                                                      "name": "j",
                                                      "scope": 902,
                                                      "stateVariable": false,
                                                      "storageLocation": "default",
                                                      "type": "uint256",
                                                      "value": null,
                                                      "visibility": "internal"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "name": "uint256",
                                                          "type": "uint256"
                                                        },
                                                        "id": 841,
                                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                        "src": "7433:7:0"
=======
                                                        "src": "6847:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 842,
                                                    "name": "VariableDeclaration",
<<<<<<< HEAD
                                                    "src": "7433:9:0"
=======
                                                    "src": "6847:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "hexvalue": "30",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "subdenomination": null,
                                                      "token": "number",
                                                      "type": "int_const 0",
                                                      "value": "0"
                                                    },
                                                    "id": 843,
                                                    "name": "Literal",
<<<<<<< HEAD
                                                    "src": "7445:1:0"
=======
                                                    "src": "6859:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 844,
                                                "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                "src": "7433:13:0"
=======
                                                "src": "6847:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "&&",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "<",
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 842,
                                                          "type": "uint256",
                                                          "value": "j"
                                                        },
                                                        "id": 845,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "7473:1:0"
=======
                                                        "src": "6886:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "arguments": [
                                                            null
                                                          ],
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "isStructConstructorCall": false,
                                                          "lValueRequested": false,
                                                          "names": [
                                                            null
                                                          ],
                                                          "type": "uint256",
                                                          "type_conversion": false
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": [
                                                                null
                                                              ],
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "count",
<<<<<<< HEAD
                                                              "referencedDeclaration": 4036,
=======
                                                              "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": true,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "member_name": "edgesIn",
<<<<<<< HEAD
                                                                  "referencedDeclaration": 3120,
=======
                                                                  "referencedDeclaration": 1652,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 829,
                                                                      "type": "struct DirectedGraph.Node storage pointer",
                                                                      "value": "y_temp"
                                                                    },
                                                                    "id": 846,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "7477:6:0"
=======
                                                                    "src": "6890:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 847,
                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                "src": "7477:14:0"
=======
                                                                "src": "6890:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 848,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "7477:20:0"
=======
                                                            "src": "6890:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 849,
                                                        "name": "FunctionCall",
<<<<<<< HEAD
                                                        "src": "7477:22:0"
=======
                                                        "src": "6890:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 850,
                                                    "name": "BinaryOperation",
<<<<<<< HEAD
                                                    "src": "7473:26:0"
=======
                                                    "src": "6886:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "!",
                                                      "prefix": true,
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 764,
                                                              "type": "bool[] memory",
                                                              "value": "flags"
                                                            },
                                                            "id": 851,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "7504:5:0"
=======
                                                            "src": "6917:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "hexvalue": "32",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "subdenomination": null,
                                                              "token": "number",
                                                              "type": "int_const 2",
                                                              "value": "2"
                                                            },
                                                            "id": 852,
                                                            "name": "Literal",
<<<<<<< HEAD
                                                            "src": "7510:1:0"
=======
                                                            "src": "6923:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 853,
                                                        "name": "IndexAccess",
<<<<<<< HEAD
                                                        "src": "7504:8:0"
=======
                                                        "src": "6917:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 854,
                                                    "name": "UnaryOperation",
<<<<<<< HEAD
                                                    "src": "7503:9:0"
=======
                                                    "src": "6916:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 855,
                                                "name": "BinaryOperation",
<<<<<<< HEAD
                                                "src": "7473:39:0"
=======
                                                "src": "6886:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "++",
                                                      "prefix": false,
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 842,
                                                          "type": "uint256",
                                                          "value": "j"
                                                        },
                                                        "id": 856,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "7539:1:0"
=======
                                                        "src": "6951:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 857,
                                                    "name": "UnaryOperation",
<<<<<<< HEAD
                                                    "src": "7539:3:0"
=======
                                                    "src": "6951:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 858,
                                                "name": "ExpressionStatement",
<<<<<<< HEAD
                                                "src": "7539:3:0"
=======
                                                "src": "6951:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "assignments": [
                                                        862
                                                      ]
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "constant": false,
                                                          "name": "edge",
                                                          "scope": 901,
                                                          "stateVariable": false,
                                                          "storageLocation": "storage",
                                                          "type": "struct DirectedGraph.Edge",
                                                          "value": null,
                                                          "visibility": "internal"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "contractScope": null,
                                                              "name": "DirectedGraph.Edge",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3134,
=======
                                                              "referencedDeclaration": 1666,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "struct DirectedGraph.Edge"
                                                            },
                                                            "id": 861,
                                                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                                            "src": "7593:18:0"
=======
                                                            "src": "7003:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 862,
                                                        "name": "VariableDeclaration",
<<<<<<< HEAD
                                                        "src": "7593:31:0"
=======
                                                        "src": "7003:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct DirectedGraph.Edge storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "edges",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3146,
=======
                                                              "referencedDeclaration": 1678,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 748,
                                                                  "type": "struct DirectedGraph.Graph storage pointer",
                                                                  "value": "graph"
                                                                },
                                                                "id": 863,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "7627:5:0"
=======
                                                                "src": "7037:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 864,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "7627:11:0"
=======
                                                            "src": "7037:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "isStructConstructorCall": false,
                                                              "lValueRequested": false,
                                                              "names": [
                                                                null
                                                              ],
                                                              "type": "uint256",
                                                              "type_conversion": true
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": [
                                                                    {
                                                                      "typeIdentifier": "t_bytes32",
                                                                      "typeString": "bytes32"
                                                                    }
                                                                  ],
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "type": "type(uint256)",
                                                                  "value": "uint256"
                                                                },
                                                                "id": 865,
                                                                "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                                "src": "7669:7:0"
=======
                                                                "src": "7078:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "isStructConstructorCall": false,
                                                                  "lValueRequested": false,
                                                                  "names": [
                                                                    null
                                                                  ],
                                                                  "type": "bytes32",
                                                                  "type_conversion": false
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": [
                                                                        {
                                                                          "typeIdentifier": "t_uint256",
                                                                          "typeString": "uint256"
                                                                        }
                                                                      ],
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "keyAtIndex",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 4079,
=======
                                                                      "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": true,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "member_name": "edgesIn",
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3120,
=======
                                                                          "referencedDeclaration": 1652,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
                                                                              "referencedDeclaration": 829,
                                                                              "type": "struct DirectedGraph.Node storage pointer",
                                                                              "value": "y_temp"
                                                                            },
                                                                            "id": 866,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "7677:6:0"
=======
                                                                            "src": "7086:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 867,
                                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                                        "src": "7677:14:0"
=======
                                                                        "src": "7086:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 868,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "7677:25:0"
=======
                                                                    "src": "7086:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 842,
                                                                      "type": "uint256",
                                                                      "value": "j"
                                                                    },
                                                                    "id": 869,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "7703:1:0"
=======
                                                                    "src": "7112:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 870,
                                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                                "src": "7677:28:0"
=======
                                                                "src": "7086:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 871,
                                                            "name": "FunctionCall",
<<<<<<< HEAD
                                                            "src": "7669:37:0"
=======
                                                            "src": "7078:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 872,
                                                        "name": "IndexAccess",
<<<<<<< HEAD
                                                        "src": "7627:106:0"
=======
                                                        "src": "7037:104:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 873,
                                                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                    "src": "7593:140:0"
=======
                                                    "src": "7003:138:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "falseBody": null
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "&&",
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "commonType": {
<<<<<<< HEAD
                                                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                "typeString": "enum EMap.Label"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "!=",
                                                              "type": "bool"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "isStructConstructorCall": false,
                                                                  "lValueRequested": false,
                                                                  "names": [
                                                                    null
                                                                  ],
                                                                  "type": "enum EMap.Label",
                                                                  "type_conversion": false
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": [
                                                                        {
                                                                          "typeIdentifier": "t_uint256",
                                                                          "typeString": "uint256"
                                                                        }
                                                                      ],
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "get",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3886,
=======
                                                                      "referencedDeclaration": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 756,
                                                                          "type": "struct EMap.LabelMap storage pointer",
                                                                          "value": "lab"
                                                                        },
                                                                        "id": 874,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "7794:3:0"
=======
                                                                        "src": "7200:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 875,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "7794:7:0"
=======
                                                                    "src": "7200:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "source",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3129,
=======
                                                                      "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "uint256"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 862,
                                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                                          "value": "edge"
                                                                        },
                                                                        "id": 876,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "7802:4:0"
=======
                                                                        "src": "7208:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 877,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "7802:11:0"
=======
                                                                    "src": "7208:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 878,
                                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                                "src": "7794:20:0"
=======
                                                                "src": "7200:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "member_name": "OUT",
                                                                  "referencedDeclaration": null,
                                                                  "type": "enum EMap.Label"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "Label",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3723,
=======
                                                                      "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "type(enum EMap.Label)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3912,
=======
                                                                          "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "type(library EMap)",
                                                                          "value": "EMap"
                                                                        },
                                                                        "id": 879,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "7818:4:0"
=======
                                                                        "src": "7224:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 880,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "7818:10:0"
=======
                                                                    "src": "7224:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 881,
                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                "src": "7818:14:0"
=======
                                                                "src": "7224:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 882,
                                                            "name": "BinaryOperation",
<<<<<<< HEAD
                                                            "src": "7794:38:0"
=======
                                                            "src": "7200:38:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "commonType": {
<<<<<<< HEAD
                                                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                "typeString": "enum EMap.Label"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "!=",
                                                              "type": "bool"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "isStructConstructorCall": false,
                                                                  "lValueRequested": false,
                                                                  "names": [
                                                                    null
                                                                  ],
                                                                  "type": "enum EMap.Label",
                                                                  "type_conversion": false
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": [
                                                                        {
                                                                          "typeIdentifier": "t_uint256",
                                                                          "typeString": "uint256"
                                                                        }
                                                                      ],
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "get",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3886,
=======
                                                                      "referencedDeclaration": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 756,
                                                                          "type": "struct EMap.LabelMap storage pointer",
                                                                          "value": "lab"
                                                                        },
                                                                        "id": 883,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "7865:3:0"
=======
                                                                        "src": "7270:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 884,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "7865:7:0"
=======
                                                                    "src": "7270:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "source",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3129,
=======
                                                                      "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "uint256"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 862,
                                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                                          "value": "edge"
                                                                        },
                                                                        "id": 885,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "7873:4:0"
=======
                                                                        "src": "7278:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 886,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "7873:11:0"
=======
                                                                    "src": "7278:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 887,
                                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                                "src": "7865:20:0"
=======
                                                                "src": "7270:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "member_name": "MUST_OUT",
                                                                  "referencedDeclaration": null,
                                                                  "type": "enum EMap.Label"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "Label",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3723,
=======
                                                                      "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "type(enum EMap.Label)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3912,
=======
                                                                          "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "type(library EMap)",
                                                                          "value": "EMap"
                                                                        },
                                                                        "id": 888,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "7889:4:0"
=======
                                                                        "src": "7294:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 889,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "7889:10:0"
=======
                                                                    "src": "7294:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 890,
                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                "src": "7889:19:0"
=======
                                                                "src": "7294:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 891,
                                                            "name": "BinaryOperation",
<<<<<<< HEAD
                                                            "src": "7865:43:0"
=======
                                                            "src": "7270:43:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 892,
                                                        "name": "BinaryOperation",
<<<<<<< HEAD
                                                        "src": "7794:114:0"
=======
                                                        "src": "7200:113:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "children": [
                                                          {
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "operator": "=",
                                                                  "type": "bool"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": true,
                                                                      "type": "bool"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 764,
                                                                          "type": "bool[] memory",
                                                                          "value": "flags"
                                                                        },
                                                                        "id": 893,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "7967:5:0"
=======
                                                                        "src": "7370:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      },
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "hexvalue": "32",
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "subdenomination": null,
                                                                          "token": "number",
                                                                          "type": "int_const 2",
                                                                          "value": "2"
                                                                        },
                                                                        "id": 894,
                                                                        "name": "Literal",
<<<<<<< HEAD
                                                                        "src": "7973:1:0"
=======
                                                                        "src": "7376:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 895,
                                                                    "name": "IndexAccess",
<<<<<<< HEAD
                                                                    "src": "7967:8:0"
=======
                                                                    "src": "7370:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "hexvalue": "74727565",
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "subdenomination": null,
                                                                      "token": "bool",
                                                                      "type": "bool",
                                                                      "value": "true"
                                                                    },
                                                                    "id": 896,
                                                                    "name": "Literal",
<<<<<<< HEAD
                                                                    "src": "7978:4:0"
=======
                                                                    "src": "7381:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 897,
                                                                "name": "Assignment",
<<<<<<< HEAD
                                                                "src": "7967:15:0"
=======
                                                                "src": "7370:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 898,
                                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                                            "src": "7967:15:0"
=======
                                                            "src": "7370:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 899,
                                                        "name": "Block",
<<<<<<< HEAD
                                                        "src": "7936:74:0"
=======
                                                        "src": "7340:72:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 900,
                                                    "name": "IfStatement",
<<<<<<< HEAD
                                                    "src": "7760:250:0"
=======
                                                    "src": "7167:245:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 901,
                                                "name": "Block",
<<<<<<< HEAD
                                                "src": "7566:467:0"
=======
                                                "src": "6977:457:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 902,
                                            "name": "ForStatement",
<<<<<<< HEAD
                                            "src": "7402:631:0"
=======
                                            "src": "6817:617:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "=",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": true,
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 764,
                                                          "type": "bool[] memory",
                                                          "value": "flags"
                                                        },
                                                        "id": 903,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "8055:5:0"
=======
                                                        "src": "7455:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "hexvalue": "31",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "subdenomination": null,
                                                          "token": "number",
                                                          "type": "int_const 1",
                                                          "value": "1"
                                                        },
                                                        "id": 904,
                                                        "name": "Literal",
<<<<<<< HEAD
                                                        "src": "8061:1:0"
=======
                                                        "src": "7461:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 905,
                                                    "name": "IndexAccess",
<<<<<<< HEAD
                                                    "src": "8055:8:0"
=======
                                                    "src": "7455:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "!",
                                                      "prefix": true,
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 764,
                                                              "type": "bool[] memory",
                                                              "value": "flags"
                                                            },
                                                            "id": 906,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "8067:5:0"
=======
                                                            "src": "7467:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "hexvalue": "32",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "subdenomination": null,
                                                              "token": "number",
                                                              "type": "int_const 2",
                                                              "value": "2"
                                                            },
                                                            "id": 907,
                                                            "name": "Literal",
<<<<<<< HEAD
                                                            "src": "8073:1:0"
=======
                                                            "src": "7473:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 908,
                                                        "name": "IndexAccess",
<<<<<<< HEAD
                                                        "src": "8067:8:0"
=======
                                                        "src": "7467:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 909,
                                                    "name": "UnaryOperation",
<<<<<<< HEAD
                                                    "src": "8066:9:0"
=======
                                                    "src": "7466:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 910,
                                                "name": "Assignment",
<<<<<<< HEAD
                                                "src": "8055:20:0"
=======
                                                "src": "7455:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 911,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "8055:20:0"
=======
                                            "src": "7455:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 912,
                                        "name": "Block",
<<<<<<< HEAD
                                        "src": "7231:864:0"
=======
                                        "src": "6650:844:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 913,
                                    "name": "ForStatement",
<<<<<<< HEAD
                                    "src": "7178:917:0"
=======
                                    "src": "6597:897:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "falseBody": null
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!",
                                          "prefix": true,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 764,
                                                  "type": "bool[] memory",
                                                  "value": "flags"
                                                },
                                                "id": 914,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "8312:5:0"
=======
                                                "src": "7707:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "hexvalue": "31",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "subdenomination": null,
                                                  "token": "number",
                                                  "type": "int_const 1",
                                                  "value": "1"
                                                },
                                                "id": 915,
                                                "name": "Literal",
<<<<<<< HEAD
                                                "src": "8318:1:0"
=======
                                                "src": "7713:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 916,
                                            "name": "IndexAccess",
<<<<<<< HEAD
                                            "src": "8312:8:0"
=======
                                            "src": "7707:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 917,
                                        "name": "UnaryOperation",
<<<<<<< HEAD
                                        "src": "8311:9:0"
=======
                                        "src": "7706:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "assignments": [
                                                919
                                              ]
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "constant": false,
                                                  "name": "max",
                                                  "scope": 1008,
                                                  "stateVariable": false,
                                                  "storageLocation": "default",
                                                  "type": "uint256",
                                                  "value": null,
                                                  "visibility": "internal"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "name": "uint256",
                                                      "type": "uint256"
                                                    },
                                                    "id": 918,
                                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                    "src": "8345:7:0"
=======
                                                    "src": "7739:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 919,
                                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                                "src": "8345:11:0"
=======
                                                "src": "7739:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "hexvalue": "30",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "subdenomination": null,
                                                  "token": "number",
                                                  "type": "int_const 0",
                                                  "value": "0"
                                                },
                                                "id": 920,
                                                "name": "Literal",
<<<<<<< HEAD
                                                "src": "8359:1:0"
=======
                                                "src": "7753:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 921,
                                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                            "src": "8345:15:0"
=======
                                            "src": "7739:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "assignments": [
                                                    923
                                                  ]
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "constant": false,
                                                      "name": "i",
                                                      "scope": 1007,
                                                      "stateVariable": false,
                                                      "storageLocation": "default",
                                                      "type": "uint256",
                                                      "value": null,
                                                      "visibility": "internal"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "name": "uint256",
                                                          "type": "uint256"
                                                        },
                                                        "id": 922,
                                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                        "src": "8388:7:0"
=======
                                                        "src": "7781:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 923,
                                                    "name": "VariableDeclaration",
<<<<<<< HEAD
                                                    "src": "8388:9:0"
=======
                                                    "src": "7781:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "hexvalue": "30",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "subdenomination": null,
                                                      "token": "number",
                                                      "type": "int_const 0",
                                                      "value": "0"
                                                    },
                                                    "id": 924,
                                                    "name": "Literal",
<<<<<<< HEAD
                                                    "src": "8400:1:0"
=======
                                                    "src": "7793:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 925,
                                                "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                "src": "8388:13:0"
=======
                                                "src": "7781:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "<",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 923,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 926,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "8403:1:0"
=======
                                                    "src": "7796:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 780,
                                                      "type": "uint256",
                                                      "value": "argIdsLen"
                                                    },
                                                    "id": 927,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "8407:9:0"
=======
                                                    "src": "7800:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 928,
                                                "name": "BinaryOperation",
<<<<<<< HEAD
                                                "src": "8403:13:0"
=======
                                                "src": "7796:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "++",
                                                      "prefix": false,
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 923,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 929,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "8418:1:0"
=======
                                                        "src": "7811:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 930,
                                                    "name": "UnaryOperation",
<<<<<<< HEAD
                                                    "src": "8418:3:0"
=======
                                                    "src": "7811:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 931,
                                                "name": "ExpressionStatement",
<<<<<<< HEAD
                                                "src": "8418:3:0"
=======
                                                "src": "7811:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "assignments": [
                                                        935
                                                      ]
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "constant": false,
                                                          "name": "y_temp",
                                                          "scope": 1006,
                                                          "stateVariable": false,
                                                          "storageLocation": "storage",
                                                          "type": "struct DirectedGraph.Node",
                                                          "value": null,
                                                          "visibility": "internal"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "contractScope": null,
                                                              "name": "DirectedGraph.Node",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3127,
=======
                                                              "referencedDeclaration": 1659,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "struct DirectedGraph.Node"
                                                            },
                                                            "id": 934,
                                                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                                            "src": "8450:18:0"
=======
                                                            "src": "7842:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 935,
                                                        "name": "VariableDeclaration",
<<<<<<< HEAD
                                                        "src": "8450:33:0"
=======
                                                        "src": "7842:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct DirectedGraph.Node storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "nodes",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3140,
=======
                                                              "referencedDeclaration": 1672,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 748,
                                                                  "type": "struct DirectedGraph.Graph storage pointer",
                                                                  "value": "graph"
                                                                },
                                                                "id": 936,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "8486:5:0"
=======
                                                                "src": "7878:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 937,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "8486:11:0"
=======
                                                            "src": "7878:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 778,
                                                                  "type": "uint256[] memory",
                                                                  "value": "argIds"
                                                                },
                                                                "id": 938,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "8528:6:0"
=======
                                                                "src": "7919:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 923,
                                                                  "type": "uint256",
                                                                  "value": "i"
                                                                },
                                                                "id": 939,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "8535:1:0"
=======
                                                                "src": "7926:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 940,
                                                            "name": "IndexAccess",
<<<<<<< HEAD
                                                            "src": "8528:9:0"
=======
                                                            "src": "7919:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 941,
                                                        "name": "IndexAccess",
<<<<<<< HEAD
                                                        "src": "8486:78:0"
=======
                                                        "src": "7878:76:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 942,
                                                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                    "src": "8450:114:0"
=======
                                                    "src": "7842:112:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "assignments": [
                                                        944
                                                      ]
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "constant": false,
                                                          "name": "y_temp_num",
                                                          "scope": 1006,
                                                          "stateVariable": false,
                                                          "storageLocation": "default",
                                                          "type": "uint256",
                                                          "value": null,
                                                          "visibility": "internal"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "name": "uint256",
                                                              "type": "uint256"
                                                            },
                                                            "id": 943,
                                                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                            "src": "8591:7:0"
=======
                                                            "src": "7980:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 944,
                                                        "name": "VariableDeclaration",
<<<<<<< HEAD
                                                        "src": "8591:18:0"
=======
                                                        "src": "7980:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "hexvalue": "30",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "subdenomination": null,
                                                          "token": "number",
                                                          "type": "int_const 0",
                                                          "value": "0"
                                                        },
                                                        "id": 945,
                                                        "name": "Literal",
<<<<<<< HEAD
                                                        "src": "8612:1:0"
=======
                                                        "src": "8001:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 946,
                                                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                    "src": "8591:22:0"
=======
                                                    "src": "7980:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "assignments": [
                                                            948
                                                          ]
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "constant": false,
                                                              "name": "j",
                                                              "scope": 990,
                                                              "stateVariable": false,
                                                              "storageLocation": "default",
                                                              "type": "uint256",
                                                              "value": null,
                                                              "visibility": "internal"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "name": "uint256",
                                                                  "type": "uint256"
                                                                },
                                                                "id": 947,
                                                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                                "src": "8645:7:0"
=======
                                                                "src": "8033:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 948,
                                                            "name": "VariableDeclaration",
<<<<<<< HEAD
                                                            "src": "8645:9:0"
=======
                                                            "src": "8033:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "hexvalue": "30",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "subdenomination": null,
                                                              "token": "number",
                                                              "type": "int_const 0",
                                                              "value": "0"
                                                            },
                                                            "id": 949,
                                                            "name": "Literal",
<<<<<<< HEAD
                                                            "src": "8657:1:0"
=======
                                                            "src": "8045:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 950,
                                                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                        "src": "8645:13:0"
=======
                                                        "src": "8033:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "<",
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 948,
                                                              "type": "uint256",
                                                              "value": "j"
                                                            },
                                                            "id": 951,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "8660:1:0"
=======
                                                            "src": "8048:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "arguments": [
                                                                null
                                                              ],
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "isStructConstructorCall": false,
                                                              "lValueRequested": false,
                                                              "names": [
                                                                null
                                                              ],
                                                              "type": "uint256",
                                                              "type_conversion": false
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": [
                                                                    null
                                                                  ],
                                                                  "isConstant": false,
                                                                  "isLValue": true,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "member_name": "count",
<<<<<<< HEAD
                                                                  "referencedDeclaration": 4036,
=======
                                                                  "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "edgesOut",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3122,
=======
                                                                      "referencedDeclaration": 1654,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 935,
                                                                          "type": "struct DirectedGraph.Node storage pointer",
                                                                          "value": "y_temp"
                                                                        },
                                                                        "id": 952,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "8664:6:0"
=======
                                                                        "src": "8052:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 953,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "8664:15:0"
=======
                                                                    "src": "8052:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 954,
                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                "src": "8664:21:0"
=======
                                                                "src": "8052:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 955,
                                                            "name": "FunctionCall",
<<<<<<< HEAD
                                                            "src": "8664:23:0"
=======
                                                            "src": "8052:23:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 956,
                                                        "name": "BinaryOperation",
<<<<<<< HEAD
                                                        "src": "8660:27:0"
=======
                                                        "src": "8048:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "++",
                                                              "prefix": false,
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 948,
                                                                  "type": "uint256",
                                                                  "value": "j"
                                                                },
                                                                "id": 957,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "8689:1:0"
=======
                                                                "src": "8077:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 958,
                                                            "name": "UnaryOperation",
<<<<<<< HEAD
                                                            "src": "8689:3:0"
=======
                                                            "src": "8077:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 959,
                                                        "name": "ExpressionStatement",
<<<<<<< HEAD
                                                        "src": "8689:3:0"
=======
                                                        "src": "8077:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "assignments": [
                                                                963
                                                              ]
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "constant": false,
                                                                  "name": "edge",
                                                                  "scope": 989,
                                                                  "stateVariable": false,
                                                                  "storageLocation": "storage",
                                                                  "type": "struct DirectedGraph.Edge",
                                                                  "value": null,
                                                                  "visibility": "internal"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "contractScope": null,
                                                                      "name": "DirectedGraph.Edge",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3134,
=======
                                                                      "referencedDeclaration": 1666,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "struct DirectedGraph.Edge"
                                                                    },
                                                                    "id": 962,
                                                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                                                    "src": "8725:18:0"
=======
                                                                    "src": "8112:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 963,
                                                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                                                "src": "8725:31:0"
=======
                                                                "src": "8112:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": true,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "type": "struct DirectedGraph.Edge storage ref"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "edges",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3146,
=======
                                                                      "referencedDeclaration": 1678,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 748,
                                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                                          "value": "graph"
                                                                        },
                                                                        "id": 964,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "8759:5:0"
=======
                                                                        "src": "8146:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 965,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "8759:11:0"
=======
                                                                    "src": "8146:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "isStructConstructorCall": false,
                                                                      "lValueRequested": false,
                                                                      "names": [
                                                                        null
                                                                      ],
                                                                      "type": "uint256",
                                                                      "type_conversion": true
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": [
                                                                            {
                                                                              "typeIdentifier": "t_bytes32",
                                                                              "typeString": "bytes32"
                                                                            }
                                                                          ],
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "type": "type(uint256)",
                                                                          "value": "uint256"
                                                                        },
                                                                        "id": 966,
                                                                        "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                                        "src": "8805:7:0"
=======
                                                                        "src": "8191:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      },
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "isStructConstructorCall": false,
                                                                          "lValueRequested": false,
                                                                          "names": [
                                                                            null
                                                                          ],
                                                                          "type": "bytes32",
                                                                          "type_conversion": false
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": [
                                                                                {
                                                                                  "typeIdentifier": "t_uint256",
                                                                                  "typeString": "uint256"
                                                                                }
                                                                              ],
                                                                              "isConstant": false,
                                                                              "isLValue": true,
                                                                              "isPure": false,
                                                                              "lValueRequested": false,
                                                                              "member_name": "keyAtIndex",
<<<<<<< HEAD
                                                                              "referencedDeclaration": 4079,
=======
                                                                              "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                                                            },
                                                                            "children": [
                                                                              {
                                                                                "attributes": {
                                                                                  "argumentTypes": null,
                                                                                  "isConstant": false,
                                                                                  "isLValue": true,
                                                                                  "isPure": false,
                                                                                  "lValueRequested": false,
                                                                                  "member_name": "edgesOut",
<<<<<<< HEAD
                                                                                  "referencedDeclaration": 3122,
=======
                                                                                  "referencedDeclaration": 1654,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                                                },
                                                                                "children": [
                                                                                  {
                                                                                    "attributes": {
                                                                                      "argumentTypes": null,
                                                                                      "overloadedDeclarations": [
                                                                                        null
                                                                                      ],
                                                                                      "referencedDeclaration": 935,
                                                                                      "type": "struct DirectedGraph.Node storage pointer",
                                                                                      "value": "y_temp"
                                                                                    },
                                                                                    "id": 967,
                                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                                    "src": "8813:6:0"
=======
                                                                                    "src": "8199:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                                  }
                                                                                ],
                                                                                "id": 968,
                                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                                "src": "8813:15:0"
=======
                                                                                "src": "8199:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                              }
                                                                            ],
                                                                            "id": 969,
                                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                                            "src": "8813:26:0"
=======
                                                                            "src": "8199:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          },
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
                                                                              "referencedDeclaration": 948,
                                                                              "type": "uint256",
                                                                              "value": "j"
                                                                            },
                                                                            "id": 970,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "8840:1:0"
=======
                                                                            "src": "8226:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 971,
                                                                        "name": "FunctionCall",
<<<<<<< HEAD
                                                                        "src": "8813:29:0"
=======
                                                                        "src": "8199:29:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 972,
                                                                    "name": "FunctionCall",
<<<<<<< HEAD
                                                                    "src": "8805:38:0"
=======
                                                                    "src": "8191:38:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 973,
                                                                "name": "IndexAccess",
<<<<<<< HEAD
                                                                "src": "8759:115:0"
=======
                                                                "src": "8146:113:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 974,
                                                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                            "src": "8725:149:0"
=======
                                                            "src": "8112:147:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "falseBody": null
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "commonType": {
<<<<<<< HEAD
                                                                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                    "typeString": "enum EMap.Label"
                                                                  },
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "operator": "!=",
                                                                  "type": "bool"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "isStructConstructorCall": false,
                                                                      "lValueRequested": false,
                                                                      "names": [
                                                                        null
                                                                      ],
                                                                      "type": "enum EMap.Label",
                                                                      "type_conversion": false
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": [
                                                                            {
                                                                              "typeIdentifier": "t_uint256",
                                                                              "typeString": "uint256"
                                                                            }
                                                                          ],
                                                                          "isConstant": false,
                                                                          "isLValue": true,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "member_name": "get",
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3886,
=======
                                                                          "referencedDeclaration": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
                                                                              "referencedDeclaration": 756,
                                                                              "type": "struct EMap.LabelMap storage pointer",
                                                                              "value": "lab"
                                                                            },
                                                                            "id": 975,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "8909:3:0"
=======
                                                                            "src": "8293:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 976,
                                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                                        "src": "8909:7:0"
=======
                                                                        "src": "8293:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      },
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": true,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "member_name": "target",
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3131,
=======
                                                                          "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "uint256"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
                                                                              "referencedDeclaration": 963,
                                                                              "type": "struct DirectedGraph.Edge storage pointer",
                                                                              "value": "edge"
                                                                            },
                                                                            "id": 977,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "8917:4:0"
=======
                                                                            "src": "8301:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 978,
                                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                                        "src": "8917:11:0"
=======
                                                                        "src": "8301:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 979,
                                                                    "name": "FunctionCall",
<<<<<<< HEAD
                                                                    "src": "8909:20:0"
=======
                                                                    "src": "8293:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "member_name": "OUT",
                                                                      "referencedDeclaration": null,
                                                                      "type": "enum EMap.Label"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "member_name": "Label",
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3723,
=======
                                                                          "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "type(enum EMap.Label)"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
<<<<<<< HEAD
                                                                              "referencedDeclaration": 3912,
=======
                                                                              "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                              "type": "type(library EMap)",
                                                                              "value": "EMap"
                                                                            },
                                                                            "id": 980,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "8933:4:0"
=======
                                                                            "src": "8317:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 981,
                                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                                        "src": "8933:10:0"
=======
                                                                        "src": "8317:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 982,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "8933:14:0"
=======
                                                                    "src": "8317:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 983,
                                                                "name": "BinaryOperation",
<<<<<<< HEAD
                                                                "src": "8909:38:0"
=======
                                                                "src": "8293:38:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "children": [
                                                                  {
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "operator": "++",
                                                                          "prefix": false,
                                                                          "type": "uint256"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
                                                                              "referencedDeclaration": 944,
                                                                              "type": "uint256",
                                                                              "value": "y_temp_num"
                                                                            },
                                                                            "id": 984,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "8984:10:0"
=======
                                                                            "src": "8367:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 985,
                                                                        "name": "UnaryOperation",
<<<<<<< HEAD
                                                                        "src": "8984:12:0"
=======
                                                                        "src": "8367:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 986,
                                                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                                                    "src": "8984:12:0"
=======
                                                                    "src": "8367:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 987,
                                                                "name": "Block",
<<<<<<< HEAD
                                                                "src": "8949:79:0"
=======
                                                                "src": "8333:77:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 988,
                                                            "name": "IfStatement",
<<<<<<< HEAD
                                                            "src": "8905:123:0"
=======
                                                            "src": "8289:121:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 989,
                                                        "name": "Block",
<<<<<<< HEAD
                                                        "src": "8694:361:0"
=======
                                                        "src": "8082:354:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 990,
                                                    "name": "ForStatement",
<<<<<<< HEAD
                                                    "src": "8640:415:0"
=======
                                                    "src": "8028:408:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "falseBody": null
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": ">",
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 944,
                                                              "type": "uint256",
                                                              "value": "y_temp_num"
                                                            },
                                                            "id": 991,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "9085:10:0"
=======
                                                            "src": "8465:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 919,
                                                              "type": "uint256",
                                                              "value": "max"
                                                            },
                                                            "id": 992,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "9098:3:0"
=======
                                                            "src": "8478:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 993,
                                                        "name": "BinaryOperation",
<<<<<<< HEAD
                                                        "src": "9085:16:0"
=======
                                                        "src": "8465:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "children": [
                                                          {
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "operator": "=",
                                                                  "type": "uint256"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 919,
                                                                      "type": "uint256",
                                                                      "value": "max"
                                                                    },
                                                                    "id": 994,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "9134:3:0"
=======
                                                                    "src": "8513:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 944,
                                                                      "type": "uint256",
                                                                      "value": "y_temp_num"
                                                                    },
                                                                    "id": 995,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "9140:10:0"
=======
                                                                    "src": "8519:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 996,
                                                                "name": "Assignment",
<<<<<<< HEAD
                                                                "src": "9134:16:0"
=======
                                                                "src": "8513:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 997,
                                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                                            "src": "9134:16:0"
=======
                                                            "src": "8513:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "operator": "=",
                                                                  "type": "uint256"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 796,
                                                                      "type": "uint256",
                                                                      "value": "y"
                                                                    },
                                                                    "id": 998,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "9181:1:0"
=======
                                                                    "src": "8559:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "type": "uint256"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 778,
                                                                          "type": "uint256[] memory",
                                                                          "value": "argIds"
                                                                        },
                                                                        "id": 999,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "9185:6:0"
=======
                                                                        "src": "8563:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      },
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 923,
                                                                          "type": "uint256",
                                                                          "value": "i"
                                                                        },
                                                                        "id": 1000,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "9192:1:0"
=======
                                                                        "src": "8570:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1001,
                                                                    "name": "IndexAccess",
<<<<<<< HEAD
                                                                    "src": "9185:9:0"
=======
                                                                    "src": "8563:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1002,
                                                                "name": "Assignment",
<<<<<<< HEAD
                                                                "src": "9181:13:0"
=======
                                                                "src": "8559:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1003,
                                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                                            "src": "9181:13:0"
=======
                                                            "src": "8559:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1004,
                                                        "name": "Block",
<<<<<<< HEAD
                                                        "src": "9103:119:0"
=======
                                                        "src": "8483:116:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1005,
                                                    "name": "IfStatement",
<<<<<<< HEAD
                                                    "src": "9081:141:0"
=======
                                                    "src": "8461:138:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1006,
                                                "name": "Block",
<<<<<<< HEAD
                                                "src": "8423:822:0"
=======
                                                "src": "7816:805:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1007,
                                            "name": "ForStatement",
<<<<<<< HEAD
                                            "src": "8383:862:0"
=======
                                            "src": "7776:845:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1008,
                                        "name": "Block",
<<<<<<< HEAD
                                        "src": "8322:942:0"
=======
                                        "src": "7717:922:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1009,
                                    "name": "IfStatement",
<<<<<<< HEAD
                                    "src": "8307:957:0"
=======
                                    "src": "7702:937:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "assignments": [
                                        1011
                                      ]
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "constant": false,
                                          "name": "lab1Id",
                                          "scope": 1369,
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "type": "uint256",
                                          "value": null,
                                          "visibility": "internal"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "uint256",
                                              "type": "uint256"
                                            },
                                            "id": 1010,
                                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                                            "src": "9318:7:0"
=======
                                            "src": "8691:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1011,
                                        "name": "VariableDeclaration",
<<<<<<< HEAD
                                        "src": "9318:14:0"
=======
                                        "src": "8691:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "++",
                                          "prefix": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 24,
                                              "type": "uint256",
                                              "value": "labsNum"
                                            },
                                            "id": 1012,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "9335:7:0"
=======
                                            "src": "8708:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1013,
                                        "name": "UnaryOperation",
<<<<<<< HEAD
                                        "src": "9335:9:0"
=======
                                        "src": "8708:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1014,
                                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                    "src": "9318:26:0"
=======
                                    "src": "8691:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "assignments": [
                                        1018
                                      ]
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "constant": false,
                                          "name": "lab1",
                                          "scope": 1369,
                                          "stateVariable": false,
                                          "storageLocation": "storage",
                                          "type": "struct EMap.LabelMap",
                                          "value": null,
                                          "visibility": "internal"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "contractScope": null,
                                              "name": "EMap.LabelMap",
<<<<<<< HEAD
                                              "referencedDeclaration": 3726,
=======
                                              "referencedDeclaration": 2258,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "struct EMap.LabelMap"
                                            },
                                            "id": 1017,
                                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                            "src": "9363:13:0"
=======
                                            "src": "8735:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1018,
                                        "name": "VariableDeclaration",
<<<<<<< HEAD
                                        "src": "9363:26:0"
=======
                                        "src": "8735:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct EMap.LabelMap storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 28,
                                              "type": "mapping(uint256 => struct EMap.LabelMap storage ref)",
                                              "value": "labs"
                                            },
                                            "id": 1019,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "9392:4:0"
=======
                                            "src": "8764:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1011,
                                              "type": "uint256",
                                              "value": "lab1Id"
                                            },
                                            "id": 1020,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "9397:6:0"
=======
                                            "src": "8769:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1021,
                                        "name": "IndexAccess",
<<<<<<< HEAD
                                        "src": "9392:12:0"
=======
                                        "src": "8764:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1022,
                                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                    "src": "9363:41:0"
=======
                                    "src": "8735:41:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "assignments": [
                                            1024
                                          ]
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "constant": false,
                                              "name": "i",
                                              "scope": 1052,
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "type": "uint256",
                                              "value": null,
                                              "visibility": "internal"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "uint256",
                                                  "type": "uint256"
                                                },
                                                "id": 1023,
                                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                "src": "9428:7:0"
=======
                                                "src": "8799:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1024,
                                            "name": "VariableDeclaration",
<<<<<<< HEAD
                                            "src": "9428:9:0"
=======
                                            "src": "8799:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 1025,
                                            "name": "Literal",
<<<<<<< HEAD
                                            "src": "9440:1:0"
=======
                                            "src": "8811:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1026,
                                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                        "src": "9428:13:0"
=======
                                        "src": "8799:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "<",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1024,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 1027,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "9443:1:0"
=======
                                            "src": "8814:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                null
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    null
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "length",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3800,
=======
                                                  "referencedDeclaration": 2332,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "type": "function (struct EMap.LabelMap storage pointer) view returns (uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 756,
                                                      "type": "struct EMap.LabelMap storage pointer",
                                                      "value": "lab"
                                                    },
                                                    "id": 1028,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "9447:3:0"
=======
                                                    "src": "8818:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1029,
                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                "src": "9447:10:0"
=======
                                                "src": "8818:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1030,
                                            "name": "FunctionCall",
<<<<<<< HEAD
                                            "src": "9447:12:0"
=======
                                            "src": "8818:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1031,
                                        "name": "BinaryOperation",
<<<<<<< HEAD
                                        "src": "9443:16:0"
=======
                                        "src": "8814:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "++",
                                              "prefix": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1024,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 1032,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "9461:1:0"
=======
                                                "src": "8832:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1033,
                                            "name": "UnaryOperation",
<<<<<<< HEAD
                                            "src": "9461:3:0"
=======
                                            "src": "8832:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1034,
                                        "name": "ExpressionStatement",
<<<<<<< HEAD
                                        "src": "9461:3:0"
=======
                                        "src": "8832:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "assignments": [
                                                1036,
                                                1038
                                              ]
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "constant": false,
                                                  "name": "arg",
                                                  "scope": 1051,
                                                  "stateVariable": false,
                                                  "storageLocation": "default",
                                                  "type": "uint256",
                                                  "value": null,
                                                  "visibility": "internal"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "name": "uint256",
                                                      "type": "uint256"
                                                    },
                                                    "id": 1035,
                                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                    "src": "9490:7:0"
=======
                                                    "src": "8860:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1036,
                                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                                "src": "9490:11:0"
=======
                                                "src": "8860:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "constant": false,
                                                  "name": "argLabel",
                                                  "scope": 1051,
                                                  "stateVariable": false,
                                                  "storageLocation": "default",
                                                  "type": "enum EMap.Label",
                                                  "value": null,
                                                  "visibility": "internal"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "contractScope": null,
                                                      "name": "EMap.Label",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3723,
=======
                                                      "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "enum EMap.Label"
                                                    },
                                                    "id": 1037,
                                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                                    "src": "9503:10:0"
=======
                                                    "src": "8873:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1038,
                                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                                "src": "9503:19:0"
=======
                                                "src": "8873:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "tuple(uint256,enum EMap.Label)",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "at",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3832,
=======
                                                      "referencedDeclaration": 2364,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (uint256,enum EMap.Label)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 756,
                                                          "type": "struct EMap.LabelMap storage pointer",
                                                          "value": "lab"
                                                        },
                                                        "id": 1039,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "9526:3:0"
=======
                                                        "src": "8896:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1040,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "9526:6:0"
=======
                                                    "src": "8896:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1024,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 1041,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "9533:1:0"
=======
                                                    "src": "8903:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1042,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "9526:9:0"
=======
                                                "src": "8896:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1043,
                                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                            "src": "9489:46:0"
=======
                                            "src": "8859:46:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "bool",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        },
                                                        {
<<<<<<< HEAD
                                                          "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                          "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeString": "enum EMap.Label"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "set",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3751,
=======
                                                      "referencedDeclaration": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 1018,
                                                          "type": "struct EMap.LabelMap storage pointer",
                                                          "value": "lab1"
                                                        },
                                                        "id": 1044,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "9558:4:0"
=======
                                                        "src": "8927:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1046,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "9558:8:0"
=======
                                                    "src": "8927:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1036,
                                                      "type": "uint256",
                                                      "value": "arg"
                                                    },
                                                    "id": 1047,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "9567:3:0"
=======
                                                    "src": "8936:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1038,
                                                      "type": "enum EMap.Label",
                                                      "value": "argLabel"
                                                    },
                                                    "id": 1048,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "9572:8:0"
=======
                                                    "src": "8941:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1049,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "9558:23:0"
=======
                                                "src": "8927:23:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1050,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "9558:23:0"
=======
                                            "src": "8927:23:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1051,
                                        "name": "Block",
<<<<<<< HEAD
                                        "src": "9466:135:0"
=======
                                        "src": "8837:132:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1052,
                                    "name": "ForStatement",
<<<<<<< HEAD
                                    "src": "9423:178:0"
=======
                                    "src": "8794:175:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bool",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
<<<<<<< HEAD
                                                  "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                  "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "typeString": "enum EMap.Label"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "set",
<<<<<<< HEAD
                                              "referencedDeclaration": 3751,
=======
                                              "referencedDeclaration": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1018,
                                                  "type": "struct EMap.LabelMap storage pointer",
                                                  "value": "lab1"
                                                },
                                                "id": 1053,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "9658:4:0"
=======
                                                "src": "9024:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1055,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "9658:8:0"
=======
                                            "src": "9024:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 796,
                                              "type": "uint256",
                                              "value": "y"
                                            },
                                            "id": 1056,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "9667:1:0"
=======
                                            "src": "9033:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "member_name": "IN",
                                              "referencedDeclaration": null,
                                              "type": "enum EMap.Label"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "Label",
<<<<<<< HEAD
                                                  "referencedDeclaration": 3723,
=======
                                                  "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "type": "type(enum EMap.Label)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
<<<<<<< HEAD
                                                      "referencedDeclaration": 3912,
=======
                                                      "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "type(library EMap)",
                                                      "value": "EMap"
                                                    },
                                                    "id": 1057,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "9670:4:0"
=======
                                                    "src": "9036:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1058,
                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                "src": "9670:10:0"
=======
                                                "src": "9036:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1059,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "9670:13:0"
=======
                                            "src": "9036:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1060,
                                        "name": "FunctionCall",
<<<<<<< HEAD
                                        "src": "9658:26:0"
=======
                                        "src": "9024:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1061,
                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "9658:26:0"
=======
                                    "src": "9024:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "assignments": [
                                        1065
                                      ]
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "constant": false,
                                          "name": "y_node",
                                          "scope": 1369,
                                          "stateVariable": false,
                                          "storageLocation": "storage",
                                          "type": "struct DirectedGraph.Node",
                                          "value": null,
                                          "visibility": "internal"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "contractScope": null,
                                              "name": "DirectedGraph.Node",
<<<<<<< HEAD
                                              "referencedDeclaration": 3127,
=======
                                              "referencedDeclaration": 1659,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "struct DirectedGraph.Node"
                                            },
                                            "id": 1064,
                                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                            "src": "9765:18:0"
=======
                                            "src": "9129:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1065,
                                        "name": "VariableDeclaration",
<<<<<<< HEAD
                                        "src": "9765:33:0"
=======
                                        "src": "9129:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct DirectedGraph.Node storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "nodes",
<<<<<<< HEAD
                                              "referencedDeclaration": 3140,
=======
                                              "referencedDeclaration": 1672,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 748,
                                                  "type": "struct DirectedGraph.Graph storage pointer",
                                                  "value": "graph"
                                                },
                                                "id": 1066,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "9801:5:0"
=======
                                                "src": "9165:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1067,
                                            "name": "MemberAccess",
<<<<<<< HEAD
                                            "src": "9801:11:0"
=======
                                            "src": "9165:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 796,
                                              "type": "uint256",
                                              "value": "y"
                                            },
                                            "id": 1068,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "9813:1:0"
=======
                                            "src": "9177:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1069,
                                        "name": "IndexAccess",
<<<<<<< HEAD
                                        "src": "9801:14:0"
=======
                                        "src": "9165:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1070,
                                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                    "src": "9765:50:0"
=======
                                    "src": "9129:50:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "assignments": [
                                            1072
                                          ]
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "constant": false,
                                              "name": "j",
                                              "scope": 1110,
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "type": "uint256",
                                              "value": null,
                                              "visibility": "internal"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "uint256",
                                                  "type": "uint256"
                                                },
                                                "id": 1071,
                                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                "src": "9839:7:0"
=======
                                                "src": "9202:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1072,
                                            "name": "VariableDeclaration",
<<<<<<< HEAD
                                            "src": "9839:9:0"
=======
                                            "src": "9202:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 1073,
                                            "name": "Literal",
<<<<<<< HEAD
                                            "src": "9851:1:0"
=======
                                            "src": "9214:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1074,
                                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                        "src": "9839:13:0"
=======
                                        "src": "9202:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "<",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1072,
                                              "type": "uint256",
                                              "value": "j"
                                            },
                                            "id": 1075,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "9854:1:0"
=======
                                            "src": "9217:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                null
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    null
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "count",
<<<<<<< HEAD
                                                  "referencedDeclaration": 4036,
=======
                                                  "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "edgesOut",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3122,
=======
                                                      "referencedDeclaration": 1654,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 1065,
                                                          "type": "struct DirectedGraph.Node storage pointer",
                                                          "value": "y_node"
                                                        },
                                                        "id": 1076,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "9858:6:0"
=======
                                                        "src": "9221:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1077,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "9858:15:0"
=======
                                                    "src": "9221:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1078,
                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                "src": "9858:21:0"
=======
                                                "src": "9221:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1079,
                                            "name": "FunctionCall",
<<<<<<< HEAD
                                            "src": "9858:23:0"
=======
                                            "src": "9221:23:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1080,
                                        "name": "BinaryOperation",
<<<<<<< HEAD
                                        "src": "9854:27:0"
=======
                                        "src": "9217:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "++",
                                              "prefix": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1072,
                                                  "type": "uint256",
                                                  "value": "j"
                                                },
                                                "id": 1081,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "9883:1:0"
=======
                                                "src": "9246:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1082,
                                            "name": "UnaryOperation",
<<<<<<< HEAD
                                            "src": "9883:3:0"
=======
                                            "src": "9246:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1083,
                                        "name": "ExpressionStatement",
<<<<<<< HEAD
                                        "src": "9883:3:0"
=======
                                        "src": "9246:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "assignments": [
                                                1087
                                              ]
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "constant": false,
                                                  "name": "edge",
                                                  "scope": 1109,
                                                  "stateVariable": false,
                                                  "storageLocation": "storage",
                                                  "type": "struct DirectedGraph.Edge",
                                                  "value": null,
                                                  "visibility": "internal"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "contractScope": null,
                                                      "name": "DirectedGraph.Edge",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3134,
=======
                                                      "referencedDeclaration": 1666,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "struct DirectedGraph.Edge"
                                                    },
                                                    "id": 1086,
                                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                                    "src": "9911:18:0"
=======
                                                    "src": "9273:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1087,
                                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                                "src": "9911:31:0"
=======
                                                "src": "9273:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct DirectedGraph.Edge storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "edges",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3146,
=======
                                                      "referencedDeclaration": 1678,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 748,
                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                          "value": "graph"
                                                        },
                                                        "id": 1088,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "9945:5:0"
=======
                                                        "src": "9307:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1089,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "9945:11:0"
=======
                                                    "src": "9307:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "isStructConstructorCall": false,
                                                      "lValueRequested": false,
                                                      "names": [
                                                        null
                                                      ],
                                                      "type": "uint256",
                                                      "type_conversion": true
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_bytes32",
                                                              "typeString": "bytes32"
                                                            }
                                                          ],
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "type": "type(uint256)",
                                                          "value": "uint256"
                                                        },
                                                        "id": 1090,
                                                        "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                        "src": "9983:7:0"
=======
                                                        "src": "9344:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "isStructConstructorCall": false,
                                                          "lValueRequested": false,
                                                          "names": [
                                                            null
                                                          ],
                                                          "type": "bytes32",
                                                          "type_conversion": false
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              ],
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "keyAtIndex",
<<<<<<< HEAD
                                                              "referencedDeclaration": 4079,
=======
                                                              "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": true,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "member_name": "edgesOut",
<<<<<<< HEAD
                                                                  "referencedDeclaration": 3122,
=======
                                                                  "referencedDeclaration": 1654,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 1065,
                                                                      "type": "struct DirectedGraph.Node storage pointer",
                                                                      "value": "y_node"
                                                                    },
                                                                    "id": 1091,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "9991:6:0"
=======
                                                                    "src": "9352:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1092,
                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                "src": "9991:15:0"
=======
                                                                "src": "9352:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1093,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "9991:26:0"
=======
                                                            "src": "9352:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 1072,
                                                              "type": "uint256",
                                                              "value": "j"
                                                            },
                                                            "id": 1094,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "10018:1:0"
=======
                                                            "src": "9379:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1095,
                                                        "name": "FunctionCall",
<<<<<<< HEAD
                                                        "src": "9991:29:0"
=======
                                                        "src": "9352:29:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1096,
                                                    "name": "FunctionCall",
<<<<<<< HEAD
                                                    "src": "9983:38:0"
=======
                                                    "src": "9344:38:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1097,
                                                "name": "IndexAccess",
<<<<<<< HEAD
                                                "src": "9945:99:0"
=======
                                                "src": "9307:97:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1098,
                                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                            "src": "9911:133:0"
=======
                                            "src": "9273:131:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "bool",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        },
                                                        {
<<<<<<< HEAD
                                                          "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                          "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "typeString": "enum EMap.Label"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "set",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3751,
=======
                                                      "referencedDeclaration": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 1018,
                                                          "type": "struct EMap.LabelMap storage pointer",
                                                          "value": "lab1"
                                                        },
                                                        "id": 1099,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "10067:4:0"
=======
                                                        "src": "9426:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1101,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "10067:8:0"
=======
                                                    "src": "9426:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "target",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3131,
=======
                                                      "referencedDeclaration": 1663,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 1087,
                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                          "value": "edge"
                                                        },
                                                        "id": 1102,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "10076:4:0"
=======
                                                        "src": "9435:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1103,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "10076:11:0"
=======
                                                    "src": "9435:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "member_name": "OUT",
                                                      "referencedDeclaration": null,
                                                      "type": "enum EMap.Label"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "Label",
<<<<<<< HEAD
                                                          "referencedDeclaration": 3723,
=======
                                                          "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "type": "type(enum EMap.Label)"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
<<<<<<< HEAD
                                                              "referencedDeclaration": 3912,
=======
                                                              "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "type(library EMap)",
                                                              "value": "EMap"
                                                            },
                                                            "id": 1104,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "10089:4:0"
=======
                                                            "src": "9448:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1105,
                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                        "src": "10089:10:0"
=======
                                                        "src": "9448:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1106,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "10089:14:0"
=======
                                                    "src": "9448:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1107,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "10067:37:0"
=======
                                                "src": "9426:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1108,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "10067:37:0"
=======
                                            "src": "9426:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1109,
                                        "name": "Block",
<<<<<<< HEAD
                                        "src": "9888:236:0"
=======
                                        "src": "9251:231:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1110,
                                    "name": "ForStatement",
<<<<<<< HEAD
                                    "src": "9834:290:0"
=======
                                    "src": "9197:285:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 764,
                                                  "type": "bool[] memory",
                                                  "value": "flags"
                                                },
                                                "id": 1111,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "10186:5:0"
=======
                                                "src": "9542:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "hexvalue": "33",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "subdenomination": null,
                                                  "token": "number",
                                                  "type": "int_const 3",
                                                  "value": "3"
                                                },
                                                "id": 1112,
                                                "name": "Literal",
<<<<<<< HEAD
                                                "src": "10192:1:0"
=======
                                                "src": "9548:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1113,
                                            "name": "IndexAccess",
<<<<<<< HEAD
                                            "src": "10186:8:0"
=======
                                            "src": "9542:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "66616c7365",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "bool",
                                              "type": "bool",
                                              "value": "false"
                                            },
                                            "id": 1114,
                                            "name": "Literal",
<<<<<<< HEAD
                                            "src": "10197:5:0"
=======
                                            "src": "9553:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1115,
                                        "name": "Assignment",
<<<<<<< HEAD
                                        "src": "10186:16:0"
=======
                                        "src": "9542:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1116,
                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "10186:16:0"
=======
                                    "src": "9542:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "assignments": [
                                            1118
                                          ]
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "constant": false,
                                              "name": "j",
                                              "scope": 1263,
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "type": "uint256",
                                              "value": null,
                                              "visibility": "internal"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "uint256",
                                                  "type": "uint256"
                                                },
                                                "id": 1117,
                                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                "src": "10248:7:0"
=======
                                                "src": "9602:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1118,
                                            "name": "VariableDeclaration",
<<<<<<< HEAD
                                            "src": "10248:9:0"
=======
                                            "src": "9602:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 1119,
                                            "name": "Literal",
<<<<<<< HEAD
                                            "src": "10260:1:0"
=======
                                            "src": "9614:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1120,
                                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                        "src": "10248:13:0"
=======
                                        "src": "9602:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "&&",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "<",
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1118,
                                                  "type": "uint256",
                                                  "value": "j"
                                                },
                                                "id": 1121,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "10284:1:0"
=======
                                                "src": "9637:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    null
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "uint256",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        null
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "count",
<<<<<<< HEAD
                                                      "referencedDeclaration": 4036,
=======
                                                      "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "edgesIn",
<<<<<<< HEAD
                                                          "referencedDeclaration": 3120,
=======
                                                          "referencedDeclaration": 1652,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 1065,
                                                              "type": "struct DirectedGraph.Node storage pointer",
                                                              "value": "y_node"
                                                            },
                                                            "id": 1122,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "10288:6:0"
=======
                                                            "src": "9641:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1123,
                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                        "src": "10288:14:0"
=======
                                                        "src": "9641:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1124,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "10288:20:0"
=======
                                                    "src": "9641:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1125,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "10288:22:0"
=======
                                                "src": "9641:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1126,
                                            "name": "BinaryOperation",
<<<<<<< HEAD
                                            "src": "10284:26:0"
=======
                                            "src": "9637:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "!",
                                              "prefix": true,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 764,
                                                      "type": "bool[] memory",
                                                      "value": "flags"
                                                    },
                                                    "id": 1127,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "10315:5:0"
=======
                                                    "src": "9668:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "hexvalue": "33",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "subdenomination": null,
                                                      "token": "number",
                                                      "type": "int_const 3",
                                                      "value": "3"
                                                    },
                                                    "id": 1128,
                                                    "name": "Literal",
<<<<<<< HEAD
                                                    "src": "10321:1:0"
=======
                                                    "src": "9674:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1129,
                                                "name": "IndexAccess",
<<<<<<< HEAD
                                                "src": "10315:8:0"
=======
                                                "src": "9668:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1130,
                                            "name": "UnaryOperation",
<<<<<<< HEAD
                                            "src": "10314:9:0"
=======
                                            "src": "9667:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1131,
                                        "name": "BinaryOperation",
<<<<<<< HEAD
                                        "src": "10284:39:0"
=======
                                        "src": "9637:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "++",
                                              "prefix": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1118,
                                                  "type": "uint256",
                                                  "value": "j"
                                                },
                                                "id": 1132,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "10346:1:0"
=======
                                                "src": "9698:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1133,
                                            "name": "UnaryOperation",
<<<<<<< HEAD
                                            "src": "10346:3:0"
=======
                                            "src": "9698:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1134,
                                        "name": "ExpressionStatement",
<<<<<<< HEAD
                                        "src": "10346:3:0"
=======
                                        "src": "9698:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "assignments": [
                                                1138
                                              ]
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "constant": false,
                                                  "name": "edge",
                                                  "scope": 1262,
                                                  "stateVariable": false,
                                                  "storageLocation": "storage",
                                                  "type": "struct DirectedGraph.Edge",
                                                  "value": null,
                                                  "visibility": "internal"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "contractScope": null,
                                                      "name": "DirectedGraph.Edge",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3134,
=======
                                                      "referencedDeclaration": 1666,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "struct DirectedGraph.Edge"
                                                    },
                                                    "id": 1137,
                                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                                    "src": "10392:18:0"
=======
                                                    "src": "9742:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1138,
                                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                                "src": "10392:31:0"
=======
                                                "src": "9742:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct DirectedGraph.Edge storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "edges",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3146,
=======
                                                      "referencedDeclaration": 1678,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 748,
                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                          "value": "graph"
                                                        },
                                                        "id": 1139,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "10426:5:0"
=======
                                                        "src": "9776:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1140,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "10426:11:0"
=======
                                                    "src": "9776:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "isStructConstructorCall": false,
                                                      "lValueRequested": false,
                                                      "names": [
                                                        null
                                                      ],
                                                      "type": "uint256",
                                                      "type_conversion": true
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_bytes32",
                                                              "typeString": "bytes32"
                                                            }
                                                          ],
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "type": "type(uint256)",
                                                          "value": "uint256"
                                                        },
                                                        "id": 1141,
                                                        "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                        "src": "10464:7:0"
=======
                                                        "src": "9813:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "isStructConstructorCall": false,
                                                          "lValueRequested": false,
                                                          "names": [
                                                            null
                                                          ],
                                                          "type": "bytes32",
                                                          "type_conversion": false
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              ],
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "keyAtIndex",
<<<<<<< HEAD
                                                              "referencedDeclaration": 4079,
=======
                                                              "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": true,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "member_name": "edgesIn",
<<<<<<< HEAD
                                                                  "referencedDeclaration": 3120,
=======
                                                                  "referencedDeclaration": 1652,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 1065,
                                                                      "type": "struct DirectedGraph.Node storage pointer",
                                                                      "value": "y_node"
                                                                    },
                                                                    "id": 1142,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "10472:6:0"
=======
                                                                    "src": "9821:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1143,
                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                "src": "10472:14:0"
=======
                                                                "src": "9821:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1144,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "10472:25:0"
=======
                                                            "src": "9821:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 1118,
                                                              "type": "uint256",
                                                              "value": "j"
                                                            },
                                                            "id": 1145,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "10498:1:0"
=======
                                                            "src": "9847:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1146,
                                                        "name": "FunctionCall",
<<<<<<< HEAD
                                                        "src": "10472:28:0"
=======
                                                        "src": "9821:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1147,
                                                    "name": "FunctionCall",
<<<<<<< HEAD
                                                    "src": "10464:37:0"
=======
                                                    "src": "9813:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1148,
                                                "name": "IndexAccess",
<<<<<<< HEAD
                                                "src": "10426:98:0"
=======
                                                "src": "9776:96:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1149,
                                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                            "src": "10392:132:0"
=======
                                            "src": "9742:130:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "falseBody": null
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "||",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "commonType": {
<<<<<<< HEAD
                                                        "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                        "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "enum EMap.Label"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "==",
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "isStructConstructorCall": false,
                                                          "lValueRequested": false,
                                                          "names": [
                                                            null
                                                          ],
                                                          "type": "enum EMap.Label",
                                                          "type_conversion": false
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              ],
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "get",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3886,
=======
                                                              "referencedDeclaration": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 1018,
                                                                  "type": "struct EMap.LabelMap storage pointer",
                                                                  "value": "lab1"
                                                                },
                                                                "id": 1150,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "10665:4:0"
=======
                                                                "src": "10010:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1151,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "10665:8:0"
=======
                                                            "src": "10010:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "source",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3129,
=======
                                                              "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 1138,
                                                                  "type": "struct DirectedGraph.Edge storage pointer",
                                                                  "value": "edge"
                                                                },
                                                                "id": 1152,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "10674:4:0"
=======
                                                                "src": "10019:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1153,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "10674:11:0"
=======
                                                            "src": "10019:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1154,
                                                        "name": "FunctionCall",
<<<<<<< HEAD
                                                        "src": "10665:21:0"
=======
                                                        "src": "10010:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "member_name": "UNDEC",
                                                          "referencedDeclaration": null,
                                                          "type": "enum EMap.Label"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "Label",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3723,
=======
                                                              "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "type(enum EMap.Label)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
<<<<<<< HEAD
                                                                  "referencedDeclaration": 3912,
=======
                                                                  "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  "type": "type(library EMap)",
                                                                  "value": "EMap"
                                                                },
                                                                "id": 1155,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "10690:4:0"
=======
                                                                "src": "10035:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1156,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "10690:10:0"
=======
                                                            "src": "10035:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1157,
                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                        "src": "10690:16:0"
=======
                                                        "src": "10035:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1158,
                                                    "name": "BinaryOperation",
<<<<<<< HEAD
                                                    "src": "10665:41:0"
=======
                                                    "src": "10010:41:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "commonType": {
<<<<<<< HEAD
                                                        "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                        "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                        "typeString": "enum EMap.Label"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "==",
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "isStructConstructorCall": false,
                                                          "lValueRequested": false,
                                                          "names": [
                                                            null
                                                          ],
                                                          "type": "enum EMap.Label",
                                                          "type_conversion": false
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              ],
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "get",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3886,
=======
                                                              "referencedDeclaration": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 1018,
                                                                  "type": "struct EMap.LabelMap storage pointer",
                                                                  "value": "lab1"
                                                                },
                                                                "id": 1159,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "10735:4:0"
=======
                                                                "src": "10079:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1160,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "10735:8:0"
=======
                                                            "src": "10079:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "source",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3129,
=======
                                                              "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 1138,
                                                                  "type": "struct DirectedGraph.Edge storage pointer",
                                                                  "value": "edge"
                                                                },
                                                                "id": 1161,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "10744:4:0"
=======
                                                                "src": "10088:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1162,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "10744:11:0"
=======
                                                            "src": "10088:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1163,
                                                        "name": "FunctionCall",
<<<<<<< HEAD
                                                        "src": "10735:21:0"
=======
                                                        "src": "10079:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "member_name": "BLANK",
                                                          "referencedDeclaration": null,
                                                          "type": "enum EMap.Label"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "Label",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3723,
=======
                                                              "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "type(enum EMap.Label)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
<<<<<<< HEAD
                                                                  "referencedDeclaration": 3912,
=======
                                                                  "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  "type": "type(library EMap)",
                                                                  "value": "EMap"
                                                                },
                                                                "id": 1164,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "10760:4:0"
=======
                                                                "src": "10104:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1165,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "10760:10:0"
=======
                                                            "src": "10104:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1166,
                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                        "src": "10760:16:0"
=======
                                                        "src": "10104:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1167,
                                                    "name": "BinaryOperation",
<<<<<<< HEAD
                                                    "src": "10735:41:0"
=======
                                                    "src": "10079:41:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1168,
                                                "name": "BinaryOperation",
<<<<<<< HEAD
                                                "src": "10665:111:0"
=======
                                                "src": "10010:110:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "isStructConstructorCall": false,
                                                          "lValueRequested": false,
                                                          "names": [
                                                            null
                                                          ],
                                                          "type": "bool",
                                                          "type_conversion": false
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                },
                                                                {
<<<<<<< HEAD
                                                                  "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                                  "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  "typeString": "enum EMap.Label"
                                                                }
                                                              ],
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "set",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3751,
=======
                                                              "referencedDeclaration": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 1018,
                                                                  "type": "struct EMap.LabelMap storage pointer",
                                                                  "value": "lab1"
                                                                },
                                                                "id": 1169,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "10827:4:0"
=======
                                                                "src": "10169:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1171,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "10827:8:0"
=======
                                                            "src": "10169:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "source",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3129,
=======
                                                              "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 1138,
                                                                  "type": "struct DirectedGraph.Edge storage pointer",
                                                                  "value": "edge"
                                                                },
                                                                "id": 1172,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "10836:4:0"
=======
                                                                "src": "10178:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1173,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "10836:11:0"
=======
                                                            "src": "10178:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "member_name": "MUST_OUT",
                                                              "referencedDeclaration": null,
                                                              "type": "enum EMap.Label"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "member_name": "Label",
<<<<<<< HEAD
                                                                  "referencedDeclaration": 3723,
=======
                                                                  "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  "type": "type(enum EMap.Label)"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3912,
=======
                                                                      "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "type(library EMap)",
                                                                      "value": "EMap"
                                                                    },
                                                                    "id": 1174,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "10849:4:0"
=======
                                                                    "src": "10191:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1175,
                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                "src": "10849:10:0"
=======
                                                                "src": "10191:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1176,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "10849:19:0"
=======
                                                            "src": "10191:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1177,
                                                        "name": "FunctionCall",
<<<<<<< HEAD
                                                        "src": "10827:42:0"
=======
                                                        "src": "10169:42:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1178,
                                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                                    "src": "10827:42:0"
=======
                                                    "src": "10169:42:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "assignments": [
                                                        1182
                                                      ]
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "constant": false,
                                                          "name": "z_node",
                                                          "scope": 1260,
                                                          "stateVariable": false,
                                                          "storageLocation": "storage",
                                                          "type": "struct DirectedGraph.Node",
                                                          "value": null,
                                                          "visibility": "internal"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "contractScope": null,
                                                              "name": "DirectedGraph.Node",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3127,
=======
                                                              "referencedDeclaration": 1659,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "struct DirectedGraph.Node"
                                                            },
                                                            "id": 1181,
                                                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                                            "src": "10988:18:0"
=======
                                                            "src": "10328:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1182,
                                                        "name": "VariableDeclaration",
<<<<<<< HEAD
                                                        "src": "10988:33:0"
=======
                                                        "src": "10328:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct DirectedGraph.Node storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "nodes",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3140,
=======
                                                              "referencedDeclaration": 1672,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "mapping(uint256 => struct DirectedGraph.Node storage ref)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 748,
                                                                  "type": "struct DirectedGraph.Graph storage pointer",
                                                                  "value": "graph"
                                                                },
                                                                "id": 1183,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "11024:5:0"
=======
                                                                "src": "10364:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1184,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "11024:11:0"
=======
                                                            "src": "10364:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "source",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3129,
=======
                                                              "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 1138,
                                                                  "type": "struct DirectedGraph.Edge storage pointer",
                                                                  "value": "edge"
                                                                },
                                                                "id": 1185,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "11066:4:0"
=======
                                                                "src": "10405:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1186,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "11066:11:0"
=======
                                                            "src": "10405:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1187,
                                                        "name": "IndexAccess",
<<<<<<< HEAD
                                                        "src": "11024:80:0"
=======
                                                        "src": "10364:78:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1188,
                                                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                    "src": "10988:116:0"
=======
                                                    "src": "10328:114:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "=",
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": true,
                                                              "type": "bool"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 764,
                                                                  "type": "bool[] memory",
                                                                  "value": "flags"
                                                                },
                                                                "id": 1189,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "11131:5:0"
=======
                                                                "src": "10468:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "hexvalue": "33",
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "subdenomination": null,
                                                                  "token": "number",
                                                                  "type": "int_const 3",
                                                                  "value": "3"
                                                                },
                                                                "id": 1190,
                                                                "name": "Literal",
<<<<<<< HEAD
                                                                "src": "11137:1:0"
=======
                                                                "src": "10474:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1191,
                                                            "name": "IndexAccess",
<<<<<<< HEAD
                                                            "src": "11131:8:0"
=======
                                                            "src": "10468:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "hexvalue": "74727565",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "subdenomination": null,
                                                              "token": "bool",
                                                              "type": "bool",
                                                              "value": "true"
                                                            },
                                                            "id": 1192,
                                                            "name": "Literal",
<<<<<<< HEAD
                                                            "src": "11142:4:0"
=======
                                                            "src": "10479:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1193,
                                                        "name": "Assignment",
<<<<<<< HEAD
                                                        "src": "11131:15:0"
=======
                                                        "src": "10468:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1194,
                                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                                    "src": "11131:15:0"
=======
                                                    "src": "10468:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "assignments": [
                                                            1196
                                                          ]
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "constant": false,
                                                              "name": "k",
                                                              "scope": 1245,
                                                              "stateVariable": false,
                                                              "storageLocation": "default",
                                                              "type": "uint256",
                                                              "value": null,
                                                              "visibility": "internal"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "name": "uint256",
                                                                  "type": "uint256"
                                                                },
                                                                "id": 1195,
                                                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                                "src": "11208:7:0"
=======
                                                                "src": "10543:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1196,
                                                            "name": "VariableDeclaration",
<<<<<<< HEAD
                                                            "src": "11208:9:0"
=======
                                                            "src": "10543:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "hexvalue": "30",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "subdenomination": null,
                                                              "token": "number",
                                                              "type": "int_const 0",
                                                              "value": "0"
                                                            },
                                                            "id": 1197,
                                                            "name": "Literal",
<<<<<<< HEAD
                                                            "src": "11220:1:0"
=======
                                                            "src": "10555:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1198,
                                                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                        "src": "11208:13:0"
=======
                                                        "src": "10543:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "&&",
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "<",
                                                              "type": "bool"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 1196,
                                                                  "type": "uint256",
                                                                  "value": "k"
                                                                },
                                                                "id": 1199,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "11252:1:0"
=======
                                                                "src": "10586:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "arguments": [
                                                                    null
                                                                  ],
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "isStructConstructorCall": false,
                                                                  "lValueRequested": false,
                                                                  "names": [
                                                                    null
                                                                  ],
                                                                  "type": "uint256",
                                                                  "type_conversion": false
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": [
                                                                        null
                                                                      ],
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "count",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 4036,
=======
                                                                      "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": true,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "member_name": "edgesIn",
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3120,
=======
                                                                          "referencedDeclaration": 1652,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
                                                                              "referencedDeclaration": 1182,
                                                                              "type": "struct DirectedGraph.Node storage pointer",
                                                                              "value": "z_node"
                                                                            },
                                                                            "id": 1200,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "11256:6:0"
=======
                                                                            "src": "10590:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 1201,
                                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                                        "src": "11256:14:0"
=======
                                                                        "src": "10590:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1202,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "11256:20:0"
=======
                                                                    "src": "10590:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1203,
                                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                                "src": "11256:22:0"
=======
                                                                "src": "10590:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1204,
                                                            "name": "BinaryOperation",
<<<<<<< HEAD
                                                            "src": "11252:26:0"
=======
                                                            "src": "10586:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "type": "bool"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 764,
                                                                  "type": "bool[] memory",
                                                                  "value": "flags"
                                                                },
                                                                "id": 1205,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "11282:5:0"
=======
                                                                "src": "10616:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "hexvalue": "33",
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "subdenomination": null,
                                                                  "token": "number",
                                                                  "type": "int_const 3",
                                                                  "value": "3"
                                                                },
                                                                "id": 1206,
                                                                "name": "Literal",
<<<<<<< HEAD
                                                                "src": "11288:1:0"
=======
                                                                "src": "10622:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1207,
                                                            "name": "IndexAccess",
<<<<<<< HEAD
                                                            "src": "11282:8:0"
=======
                                                            "src": "10616:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1208,
                                                        "name": "BinaryOperation",
<<<<<<< HEAD
                                                        "src": "11252:38:0"
=======
                                                        "src": "10586:38:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "++",
                                                              "prefix": false,
                                                              "type": "uint256"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 1196,
                                                                  "type": "uint256",
                                                                  "value": "k"
                                                                },
                                                                "id": 1209,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "11321:1:0"
=======
                                                                "src": "10654:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1210,
                                                            "name": "UnaryOperation",
<<<<<<< HEAD
                                                            "src": "11321:3:0"
=======
                                                            "src": "10654:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1211,
                                                        "name": "ExpressionStatement",
<<<<<<< HEAD
                                                        "src": "11321:3:0"
=======
                                                        "src": "10654:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "assignments": [
                                                                1215
                                                              ]
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "constant": false,
                                                                  "name": "edgeZ",
                                                                  "scope": 1244,
                                                                  "stateVariable": false,
                                                                  "storageLocation": "storage",
                                                                  "type": "struct DirectedGraph.Edge",
                                                                  "value": null,
                                                                  "visibility": "internal"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "contractScope": null,
                                                                      "name": "DirectedGraph.Edge",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3134,
=======
                                                                      "referencedDeclaration": 1666,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "struct DirectedGraph.Edge"
                                                                    },
                                                                    "id": 1214,
                                                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                                                    "src": "11383:18:0"
=======
                                                                    "src": "10714:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1215,
                                                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                                                "src": "11383:32:0"
=======
                                                                "src": "10714:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": true,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "type": "struct DirectedGraph.Edge storage ref"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "edges",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3146,
=======
                                                                      "referencedDeclaration": 1678,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 748,
                                                                          "type": "struct DirectedGraph.Graph storage pointer",
                                                                          "value": "graph"
                                                                        },
                                                                        "id": 1216,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "11418:5:0"
=======
                                                                        "src": "10749:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1217,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "11418:11:0"
=======
                                                                    "src": "10749:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "isStructConstructorCall": false,
                                                                      "lValueRequested": false,
                                                                      "names": [
                                                                        null
                                                                      ],
                                                                      "type": "uint256",
                                                                      "type_conversion": true
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": [
                                                                            {
                                                                              "typeIdentifier": "t_bytes32",
                                                                              "typeString": "bytes32"
                                                                            }
                                                                          ],
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "type": "type(uint256)",
                                                                          "value": "uint256"
                                                                        },
                                                                        "id": 1218,
                                                                        "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                                        "src": "11464:7:0"
=======
                                                                        "src": "10794:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      },
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "isStructConstructorCall": false,
                                                                          "lValueRequested": false,
                                                                          "names": [
                                                                            null
                                                                          ],
                                                                          "type": "bytes32",
                                                                          "type_conversion": false
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": [
                                                                                {
                                                                                  "typeIdentifier": "t_uint256",
                                                                                  "typeString": "uint256"
                                                                                }
                                                                              ],
                                                                              "isConstant": false,
                                                                              "isLValue": true,
                                                                              "isPure": false,
                                                                              "lValueRequested": false,
                                                                              "member_name": "keyAtIndex",
<<<<<<< HEAD
                                                                              "referencedDeclaration": 4079,
=======
                                                                              "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                                                            },
                                                                            "children": [
                                                                              {
                                                                                "attributes": {
                                                                                  "argumentTypes": null,
                                                                                  "isConstant": false,
                                                                                  "isLValue": true,
                                                                                  "isPure": false,
                                                                                  "lValueRequested": false,
                                                                                  "member_name": "edgesIn",
<<<<<<< HEAD
                                                                                  "referencedDeclaration": 3120,
=======
                                                                                  "referencedDeclaration": 1652,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                                                },
                                                                                "children": [
                                                                                  {
                                                                                    "attributes": {
                                                                                      "argumentTypes": null,
                                                                                      "overloadedDeclarations": [
                                                                                        null
                                                                                      ],
                                                                                      "referencedDeclaration": 1182,
                                                                                      "type": "struct DirectedGraph.Node storage pointer",
                                                                                      "value": "z_node"
                                                                                    },
                                                                                    "id": 1219,
                                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                                    "src": "11472:6:0"
=======
                                                                                    "src": "10802:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                                  }
                                                                                ],
                                                                                "id": 1220,
                                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                                "src": "11472:14:0"
=======
                                                                                "src": "10802:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                              }
                                                                            ],
                                                                            "id": 1221,
                                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                                            "src": "11472:25:0"
=======
                                                                            "src": "10802:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          },
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
                                                                              "referencedDeclaration": 1196,
                                                                              "type": "uint256",
                                                                              "value": "k"
                                                                            },
                                                                            "id": 1222,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "11498:1:0"
=======
                                                                            "src": "10828:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 1223,
                                                                        "name": "FunctionCall",
<<<<<<< HEAD
                                                                        "src": "11472:28:0"
=======
                                                                        "src": "10802:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1224,
                                                                    "name": "FunctionCall",
<<<<<<< HEAD
                                                                    "src": "11464:37:0"
=======
                                                                    "src": "10794:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1225,
                                                                "name": "IndexAccess",
<<<<<<< HEAD
                                                                "src": "11418:114:0"
=======
                                                                "src": "10749:112:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1226,
                                                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                            "src": "11383:149:0"
=======
                                                            "src": "10714:147:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "falseBody": null
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "commonType": {
<<<<<<< HEAD
                                                                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                    "typeString": "enum EMap.Label"
                                                                  },
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "operator": "==",
                                                                  "type": "bool"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "isStructConstructorCall": false,
                                                                      "lValueRequested": false,
                                                                      "names": [
                                                                        null
                                                                      ],
                                                                      "type": "enum EMap.Label",
                                                                      "type_conversion": false
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": [
                                                                            {
                                                                              "typeIdentifier": "t_uint256",
                                                                              "typeString": "uint256"
                                                                            }
                                                                          ],
                                                                          "isConstant": false,
                                                                          "isLValue": true,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "member_name": "get",
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3886,
=======
                                                                          "referencedDeclaration": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
                                                                              "referencedDeclaration": 1018,
                                                                              "type": "struct EMap.LabelMap storage pointer",
                                                                              "value": "lab1"
                                                                            },
                                                                            "id": 1227,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "11567:4:0"
=======
                                                                            "src": "10895:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 1228,
                                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                                        "src": "11567:8:0"
=======
                                                                        "src": "10895:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      },
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": true,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "member_name": "source",
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3129,
=======
                                                                          "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "uint256"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
                                                                              "referencedDeclaration": 1215,
                                                                              "type": "struct DirectedGraph.Edge storage pointer",
                                                                              "value": "edgeZ"
                                                                            },
                                                                            "id": 1229,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "11576:5:0"
=======
                                                                            "src": "10904:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 1230,
                                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                                        "src": "11576:12:0"
=======
                                                                        "src": "10904:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1231,
                                                                    "name": "FunctionCall",
<<<<<<< HEAD
                                                                    "src": "11567:22:0"
=======
                                                                    "src": "10895:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "member_name": "BLANK",
                                                                      "referencedDeclaration": null,
                                                                      "type": "enum EMap.Label"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "member_name": "Label",
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3723,
=======
                                                                          "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "type(enum EMap.Label)"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
<<<<<<< HEAD
                                                                              "referencedDeclaration": 3912,
=======
                                                                              "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                              "type": "type(library EMap)",
                                                                              "value": "EMap"
                                                                            },
                                                                            "id": 1232,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "11593:4:0"
=======
                                                                            "src": "10921:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 1233,
                                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                                        "src": "11593:10:0"
=======
                                                                        "src": "10921:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1234,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "11593:16:0"
=======
                                                                    "src": "10921:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1235,
                                                                "name": "BinaryOperation",
<<<<<<< HEAD
                                                                "src": "11567:42:0"
=======
                                                                "src": "10895:42:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "children": [
                                                                  {
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "operator": "=",
                                                                          "type": "bool"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "isConstant": false,
                                                                              "isLValue": true,
                                                                              "isPure": false,
                                                                              "lValueRequested": true,
                                                                              "type": "bool"
                                                                            },
                                                                            "children": [
                                                                              {
                                                                                "attributes": {
                                                                                  "argumentTypes": null,
                                                                                  "overloadedDeclarations": [
                                                                                    null
                                                                                  ],
                                                                                  "referencedDeclaration": 764,
                                                                                  "type": "bool[] memory",
                                                                                  "value": "flags"
                                                                                },
                                                                                "id": 1236,
                                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                                "src": "11646:5:0"
=======
                                                                                "src": "10973:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                              },
                                                                              {
                                                                                "attributes": {
                                                                                  "argumentTypes": null,
                                                                                  "hexvalue": "33",
                                                                                  "isConstant": false,
                                                                                  "isLValue": false,
                                                                                  "isPure": true,
                                                                                  "lValueRequested": false,
                                                                                  "subdenomination": null,
                                                                                  "token": "number",
                                                                                  "type": "int_const 3",
                                                                                  "value": "3"
                                                                                },
                                                                                "id": 1237,
                                                                                "name": "Literal",
<<<<<<< HEAD
                                                                                "src": "11652:1:0"
=======
                                                                                "src": "10979:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                              }
                                                                            ],
                                                                            "id": 1238,
                                                                            "name": "IndexAccess",
<<<<<<< HEAD
                                                                            "src": "11646:8:0"
=======
                                                                            "src": "10973:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          },
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "hexvalue": "66616c7365",
                                                                              "isConstant": false,
                                                                              "isLValue": false,
                                                                              "isPure": true,
                                                                              "lValueRequested": false,
                                                                              "subdenomination": null,
                                                                              "token": "bool",
                                                                              "type": "bool",
                                                                              "value": "false"
                                                                            },
                                                                            "id": 1239,
                                                                            "name": "Literal",
<<<<<<< HEAD
                                                                            "src": "11657:5:0"
=======
                                                                            "src": "10984:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 1240,
                                                                        "name": "Assignment",
<<<<<<< HEAD
                                                                        "src": "11646:16:0"
=======
                                                                        "src": "10973:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1241,
                                                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                                                    "src": "11646:16:0"
=======
                                                                    "src": "10973:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1242,
                                                                "name": "Block",
<<<<<<< HEAD
                                                                "src": "11611:83:0"
=======
                                                                "src": "10939:81:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1243,
                                                            "name": "IfStatement",
<<<<<<< HEAD
                                                            "src": "11563:131:0"
=======
                                                            "src": "10891:129:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1244,
                                                        "name": "Block",
<<<<<<< HEAD
                                                        "src": "11352:369:0"
=======
                                                        "src": "10684:362:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1245,
                                                    "name": "ForStatement",
<<<<<<< HEAD
                                                    "src": "11173:548:0"
=======
                                                    "src": "10509:537:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "falseBody": null
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 764,
                                                              "type": "bool[] memory",
                                                              "value": "flags"
                                                            },
                                                            "id": 1246,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "11751:5:0"
=======
                                                            "src": "11075:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "hexvalue": "33",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "subdenomination": null,
                                                              "token": "number",
                                                              "type": "int_const 3",
                                                              "value": "3"
                                                            },
                                                            "id": 1247,
                                                            "name": "Literal",
<<<<<<< HEAD
                                                            "src": "11757:1:0"
=======
                                                            "src": "11081:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1248,
                                                        "name": "IndexAccess",
<<<<<<< HEAD
                                                        "src": "11751:8:0"
=======
                                                        "src": "11075:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "children": [
                                                          {
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "isStructConstructorCall": false,
                                                                  "lValueRequested": false,
                                                                  "names": [
                                                                    null
                                                                  ],
                                                                  "type": "bool",
                                                                  "type_conversion": false
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": [
                                                                        {
                                                                          "typeIdentifier": "t_uint256",
                                                                          "typeString": "uint256"
                                                                        },
                                                                        {
<<<<<<< HEAD
                                                                          "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                                          "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "typeString": "enum EMap.Label"
                                                                        }
                                                                      ],
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "set",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3751,
=======
                                                                      "referencedDeclaration": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 756,
                                                                          "type": "struct EMap.LabelMap storage pointer",
                                                                          "value": "lab"
                                                                        },
                                                                        "id": 1249,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "11792:3:0"
=======
                                                                        "src": "11115:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1251,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "11792:7:0"
=======
                                                                    "src": "11115:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 796,
                                                                      "type": "uint256",
                                                                      "value": "y"
                                                                    },
                                                                    "id": 1252,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "11800:1:0"
=======
                                                                    "src": "11123:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "member_name": "UNDEC",
                                                                      "referencedDeclaration": null,
                                                                      "type": "enum EMap.Label"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "member_name": "Label",
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3723,
=======
                                                                          "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "type(enum EMap.Label)"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
<<<<<<< HEAD
                                                                              "referencedDeclaration": 3912,
=======
                                                                              "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                              "type": "type(library EMap)",
                                                                              "value": "EMap"
                                                                            },
                                                                            "id": 1253,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "11803:4:0"
=======
                                                                            "src": "11126:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 1254,
                                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                                        "src": "11803:10:0"
=======
                                                                        "src": "11126:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1255,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "11803:16:0"
=======
                                                                    "src": "11126:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1256,
                                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                                "src": "11792:28:0"
=======
                                                                "src": "11115:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1257,
                                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                                            "src": "11792:28:0"
=======
                                                            "src": "11115:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1258,
                                                        "name": "Block",
<<<<<<< HEAD
                                                        "src": "11761:132:0"
=======
                                                        "src": "11085:129:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1259,
                                                    "name": "IfStatement",
<<<<<<< HEAD
                                                    "src": "11747:146:0"
=======
                                                    "src": "11071:143:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1260,
                                                "name": "Block",
<<<<<<< HEAD
                                                "src": "10800:1116:0"
=======
                                                "src": "10143:1093:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1261,
                                            "name": "IfStatement",
<<<<<<< HEAD
                                            "src": "10635:1281:0"
=======
                                            "src": "9981:1255:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1262,
                                        "name": "Block",
<<<<<<< HEAD
                                        "src": "10369:1566:0"
=======
                                        "src": "9720:1534:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1263,
                                    "name": "ForStatement",
<<<<<<< HEAD
                                    "src": "10221:1714:0"
=======
                                    "src": "9576:1678:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "falseBody": null
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!",
                                          "prefix": true,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 764,
                                                  "type": "bool[] memory",
                                                  "value": "flags"
                                                },
                                                "id": 1264,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "11958:5:0"
=======
                                                "src": "11276:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "hexvalue": "33",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "subdenomination": null,
                                                  "token": "number",
                                                  "type": "int_const 3",
                                                  "value": "3"
                                                },
                                                "id": 1265,
                                                "name": "Literal",
<<<<<<< HEAD
                                                "src": "11964:1:0"
=======
                                                "src": "11282:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1266,
                                            "name": "IndexAccess",
<<<<<<< HEAD
                                            "src": "11958:8:0"
=======
                                            "src": "11276:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1267,
                                        "name": "UnaryOperation",
<<<<<<< HEAD
                                        "src": "11957:9:0"
=======
                                        "src": "11275:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "tuple()",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        },
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        },
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1436,
                                                      "type": "function (uint256,uint256,uint256)",
                                                      "value": "_findPreferredExtensions"
                                                    },
                                                    "id": 1268,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "12056:24:0"
=======
                                                    "src": "11372:24:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1011,
                                                      "type": "uint256",
                                                      "value": "lab1Id"
                                                    },
                                                    "id": 1269,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "12081:6:0"
=======
                                                    "src": "11397:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 740,
                                                      "type": "uint256",
                                                      "value": "prefExtensionId"
                                                    },
                                                    "id": 1270,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "12089:15:0"
=======
                                                    "src": "11405:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 742,
                                                      "type": "uint256",
                                                      "value": "graphId"
                                                    },
                                                    "id": 1271,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "12106:7:0"
=======
                                                    "src": "11422:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1272,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "12056:58:0"
=======
                                                "src": "11372:58:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1273,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "12056:58:0"
=======
                                            "src": "11372:58:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "=",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": true,
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 764,
                                                          "type": "bool[] memory",
                                                          "value": "flags"
                                                        },
                                                        "id": 1274,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "12229:5:0"
=======
                                                        "src": "11543:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "hexvalue": "34",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "subdenomination": null,
                                                          "token": "number",
                                                          "type": "int_const 4",
                                                          "value": "4"
                                                        },
                                                        "id": 1275,
                                                        "name": "Literal",
<<<<<<< HEAD
                                                        "src": "12235:1:0"
=======
                                                        "src": "11549:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1276,
                                                    "name": "IndexAccess",
<<<<<<< HEAD
                                                    "src": "12229:8:0"
=======
                                                    "src": "11543:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "hexvalue": "66616c7365",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "subdenomination": null,
                                                      "token": "bool",
                                                      "type": "bool",
                                                      "value": "false"
                                                    },
                                                    "id": 1277,
                                                    "name": "Literal",
<<<<<<< HEAD
                                                    "src": "12240:5:0"
=======
                                                    "src": "11554:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1278,
                                                "name": "Assignment",
<<<<<<< HEAD
                                                "src": "12229:16:0"
=======
                                                "src": "11543:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1279,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "12229:16:0"
=======
                                            "src": "11543:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "assignments": [
                                                    1281
                                                  ]
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "constant": false,
                                                      "name": "j",
                                                      "scope": 1350,
                                                      "stateVariable": false,
                                                      "storageLocation": "default",
                                                      "type": "uint256",
                                                      "value": null,
                                                      "visibility": "internal"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "name": "uint256",
                                                          "type": "uint256"
                                                        },
                                                        "id": 1280,
                                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                                        "src": "12299:7:0"
=======
                                                        "src": "11611:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1281,
                                                    "name": "VariableDeclaration",
<<<<<<< HEAD
                                                    "src": "12299:9:0"
=======
                                                    "src": "11611:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "hexvalue": "30",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "subdenomination": null,
                                                      "token": "number",
                                                      "type": "int_const 0",
                                                      "value": "0"
                                                    },
                                                    "id": 1282,
                                                    "name": "Literal",
<<<<<<< HEAD
                                                    "src": "12311:1:0"
=======
                                                    "src": "11623:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1283,
                                                "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                "src": "12299:13:0"
=======
                                                "src": "11611:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "&&",
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "<",
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 1281,
                                                          "type": "uint256",
                                                          "value": "j"
                                                        },
                                                        "id": 1284,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "12339:1:0"
=======
                                                        "src": "11650:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "arguments": [
                                                            null
                                                          ],
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "isStructConstructorCall": false,
                                                          "lValueRequested": false,
                                                          "names": [
                                                            null
                                                          ],
                                                          "type": "uint256",
                                                          "type_conversion": false
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": [
                                                                null
                                                              ],
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "count",
<<<<<<< HEAD
                                                              "referencedDeclaration": 4036,
=======
                                                              "referencedDeclaration": 2568,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer) view returns (uint256)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": true,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "member_name": "edgesIn",
<<<<<<< HEAD
                                                                  "referencedDeclaration": 3120,
=======
                                                                  "referencedDeclaration": 1652,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 1065,
                                                                      "type": "struct DirectedGraph.Node storage pointer",
                                                                      "value": "y_node"
                                                                    },
                                                                    "id": 1285,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "12343:6:0"
=======
                                                                    "src": "11654:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1286,
                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                "src": "12343:14:0"
=======
                                                                "src": "11654:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1287,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "12343:20:0"
=======
                                                            "src": "11654:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1288,
                                                        "name": "FunctionCall",
<<<<<<< HEAD
                                                        "src": "12343:22:0"
=======
                                                        "src": "11654:22:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1289,
                                                    "name": "BinaryOperation",
<<<<<<< HEAD
                                                    "src": "12339:26:0"
=======
                                                    "src": "11650:26:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "!",
                                                      "prefix": true,
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 764,
                                                              "type": "bool[] memory",
                                                              "value": "flags"
                                                            },
                                                            "id": 1290,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "12370:5:0"
=======
                                                            "src": "11681:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "hexvalue": "34",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "subdenomination": null,
                                                              "token": "number",
                                                              "type": "int_const 4",
                                                              "value": "4"
                                                            },
                                                            "id": 1291,
                                                            "name": "Literal",
<<<<<<< HEAD
                                                            "src": "12376:1:0"
=======
                                                            "src": "11687:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1292,
                                                        "name": "IndexAccess",
<<<<<<< HEAD
                                                        "src": "12370:8:0"
=======
                                                        "src": "11681:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1293,
                                                    "name": "UnaryOperation",
<<<<<<< HEAD
                                                    "src": "12369:9:0"
=======
                                                    "src": "11680:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1294,
                                                "name": "BinaryOperation",
<<<<<<< HEAD
                                                "src": "12339:39:0"
=======
                                                "src": "11650:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "++",
                                                      "prefix": false,
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 1281,
                                                          "type": "uint256",
                                                          "value": "j"
                                                        },
                                                        "id": 1295,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "12405:1:0"
=======
                                                        "src": "11715:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1296,
                                                    "name": "UnaryOperation",
<<<<<<< HEAD
                                                    "src": "12405:3:0"
=======
                                                    "src": "11715:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1297,
                                                "name": "ExpressionStatement",
<<<<<<< HEAD
                                                "src": "12405:3:0"
=======
                                                "src": "11715:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "assignments": [
                                                        1301
                                                      ]
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "constant": false,
                                                          "name": "edge",
                                                          "scope": 1349,
                                                          "stateVariable": false,
                                                          "storageLocation": "storage",
                                                          "type": "struct DirectedGraph.Edge",
                                                          "value": null,
                                                          "visibility": "internal"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "contractScope": null,
                                                              "name": "DirectedGraph.Edge",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3134,
=======
                                                              "referencedDeclaration": 1666,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "struct DirectedGraph.Edge"
                                                            },
                                                            "id": 1300,
                                                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                                            "src": "12459:18:0"
=======
                                                            "src": "11767:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1301,
                                                        "name": "VariableDeclaration",
<<<<<<< HEAD
                                                        "src": "12459:31:0"
=======
                                                        "src": "11767:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "struct DirectedGraph.Edge storage ref"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "member_name": "edges",
<<<<<<< HEAD
                                                              "referencedDeclaration": 3146,
=======
                                                              "referencedDeclaration": 1678,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              "type": "mapping(uint256 => struct DirectedGraph.Edge storage ref)"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 748,
                                                                  "type": "struct DirectedGraph.Graph storage pointer",
                                                                  "value": "graph"
                                                                },
                                                                "id": 1302,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "12493:5:0"
=======
                                                                "src": "11801:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1303,
                                                            "name": "MemberAccess",
<<<<<<< HEAD
                                                            "src": "12493:11:0"
=======
                                                            "src": "11801:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "isStructConstructorCall": false,
                                                              "lValueRequested": false,
                                                              "names": [
                                                                null
                                                              ],
                                                              "type": "uint256",
                                                              "type_conversion": true
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": [
                                                                    {
                                                                      "typeIdentifier": "t_bytes32",
                                                                      "typeString": "bytes32"
                                                                    }
                                                                  ],
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "type": "type(uint256)",
                                                                  "value": "uint256"
                                                                },
                                                                "id": 1304,
                                                                "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                                "src": "12535:7:0"
=======
                                                                "src": "11842:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "isStructConstructorCall": false,
                                                                  "lValueRequested": false,
                                                                  "names": [
                                                                    null
                                                                  ],
                                                                  "type": "bytes32",
                                                                  "type_conversion": false
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": [
                                                                        {
                                                                          "typeIdentifier": "t_uint256",
                                                                          "typeString": "uint256"
                                                                        }
                                                                      ],
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "keyAtIndex",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 4079,
=======
                                                                      "referencedDeclaration": 2611,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,uint256) view returns (bytes32)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": true,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "member_name": "edgesIn",
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3120,
=======
                                                                          "referencedDeclaration": 1652,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
                                                                              "referencedDeclaration": 1065,
                                                                              "type": "struct DirectedGraph.Node storage pointer",
                                                                              "value": "y_node"
                                                                            },
                                                                            "id": 1305,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "12543:6:0"
=======
                                                                            "src": "11850:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 1306,
                                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                                        "src": "12543:14:0"
=======
                                                                        "src": "11850:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1307,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "12543:25:0"
=======
                                                                    "src": "11850:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 1281,
                                                                      "type": "uint256",
                                                                      "value": "j"
                                                                    },
                                                                    "id": 1308,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "12569:1:0"
=======
                                                                    "src": "11876:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1309,
                                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                                "src": "12543:28:0"
=======
                                                                "src": "11850:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1310,
                                                            "name": "FunctionCall",
<<<<<<< HEAD
                                                            "src": "12535:37:0"
=======
                                                            "src": "11842:37:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1311,
                                                        "name": "IndexAccess",
<<<<<<< HEAD
                                                        "src": "12493:106:0"
=======
                                                        "src": "11801:104:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1312,
                                                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                                    "src": "12459:140:0"
=======
                                                    "src": "11767:138:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "falseBody": null
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "||",
                                                          "type": "bool"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "commonType": {
<<<<<<< HEAD
                                                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                "typeString": "enum EMap.Label"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "==",
                                                              "type": "bool"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "isStructConstructorCall": false,
                                                                  "lValueRequested": false,
                                                                  "names": [
                                                                    null
                                                                  ],
                                                                  "type": "enum EMap.Label",
                                                                  "type_conversion": false
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": [
                                                                        {
                                                                          "typeIdentifier": "t_uint256",
                                                                          "typeString": "uint256"
                                                                        }
                                                                      ],
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "get",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3886,
=======
                                                                      "referencedDeclaration": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 756,
                                                                          "type": "struct EMap.LabelMap storage pointer",
                                                                          "value": "lab"
                                                                        },
                                                                        "id": 1313,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "12752:3:0"
=======
                                                                        "src": "12055:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1314,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "12752:7:0"
=======
                                                                    "src": "12055:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "source",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3129,
=======
                                                                      "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "uint256"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 1301,
                                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                                          "value": "edge"
                                                                        },
                                                                        "id": 1315,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "12760:4:0"
=======
                                                                        "src": "12063:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1316,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "12760:11:0"
=======
                                                                    "src": "12063:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1317,
                                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                                "src": "12752:20:0"
=======
                                                                "src": "12055:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "member_name": "UNDEC",
                                                                  "referencedDeclaration": null,
                                                                  "type": "enum EMap.Label"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "Label",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3723,
=======
                                                                      "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "type(enum EMap.Label)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3912,
=======
                                                                          "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "type(library EMap)",
                                                                          "value": "EMap"
                                                                        },
                                                                        "id": 1318,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "12776:4:0"
=======
                                                                        "src": "12079:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1319,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "12776:10:0"
=======
                                                                    "src": "12079:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1320,
                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                "src": "12776:16:0"
=======
                                                                "src": "12079:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1321,
                                                            "name": "BinaryOperation",
<<<<<<< HEAD
                                                            "src": "12752:40:0"
=======
                                                            "src": "12055:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "commonType": {
<<<<<<< HEAD
                                                                "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                                "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                "typeString": "enum EMap.Label"
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "operator": "==",
                                                              "type": "bool"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "isStructConstructorCall": false,
                                                                  "lValueRequested": false,
                                                                  "names": [
                                                                    null
                                                                  ],
                                                                  "type": "enum EMap.Label",
                                                                  "type_conversion": false
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": [
                                                                        {
                                                                          "typeIdentifier": "t_uint256",
                                                                          "typeString": "uint256"
                                                                        }
                                                                      ],
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "get",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3886,
=======
                                                                      "referencedDeclaration": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (enum EMap.Label)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 756,
                                                                          "type": "struct EMap.LabelMap storage pointer",
                                                                          "value": "lab"
                                                                        },
                                                                        "id": 1322,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "12825:3:0"
=======
                                                                        "src": "12127:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1323,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "12825:7:0"
=======
                                                                    "src": "12127:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "source",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3129,
=======
                                                                      "referencedDeclaration": 1661,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "uint256"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 1301,
                                                                          "type": "struct DirectedGraph.Edge storage pointer",
                                                                          "value": "edge"
                                                                        },
                                                                        "id": 1324,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "12833:4:0"
=======
                                                                        "src": "12135:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1325,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "12833:11:0"
=======
                                                                    "src": "12135:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1326,
                                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                                "src": "12825:20:0"
=======
                                                                "src": "12127:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "member_name": "BLANK",
                                                                  "referencedDeclaration": null,
                                                                  "type": "enum EMap.Label"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "Label",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3723,
=======
                                                                      "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "type(enum EMap.Label)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3912,
=======
                                                                          "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "type(library EMap)",
                                                                          "value": "EMap"
                                                                        },
                                                                        "id": 1327,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "12849:4:0"
=======
                                                                        "src": "12151:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1328,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "12849:10:0"
=======
                                                                    "src": "12151:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1329,
                                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                                "src": "12849:16:0"
=======
                                                                "src": "12151:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1330,
                                                            "name": "BinaryOperation",
<<<<<<< HEAD
                                                            "src": "12825:40:0"
=======
                                                            "src": "12127:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1331,
                                                        "name": "BinaryOperation",
<<<<<<< HEAD
                                                        "src": "12752:113:0"
=======
                                                        "src": "12055:112:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "children": [
                                                          {
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "isStructConstructorCall": false,
                                                                  "lValueRequested": false,
                                                                  "names": [
                                                                    null
                                                                  ],
                                                                  "type": "bool",
                                                                  "type_conversion": false
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": [
                                                                        {
                                                                          "typeIdentifier": "t_uint256",
                                                                          "typeString": "uint256"
                                                                        },
                                                                        {
<<<<<<< HEAD
                                                                          "typeIdentifier": "t_enum$_Label_$3723",
=======
                                                                          "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "typeString": "enum EMap.Label"
                                                                        }
                                                                      ],
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "member_name": "set",
<<<<<<< HEAD
                                                                      "referencedDeclaration": 3751,
=======
                                                                      "referencedDeclaration": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      "type": "function (struct EMap.LabelMap storage pointer,uint256,enum EMap.Label) returns (bool)"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 756,
                                                                          "type": "struct EMap.LabelMap storage pointer",
                                                                          "value": "lab"
                                                                        },
                                                                        "id": 1332,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "12924:3:0"
=======
                                                                        "src": "12224:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1334,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "12924:7:0"
=======
                                                                    "src": "12224:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "overloadedDeclarations": [
                                                                        null
                                                                      ],
                                                                      "referencedDeclaration": 796,
                                                                      "type": "uint256",
                                                                      "value": "y"
                                                                    },
                                                                    "id": 1335,
                                                                    "name": "Identifier",
<<<<<<< HEAD
                                                                    "src": "12932:1:0"
=======
                                                                    "src": "12232:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "member_name": "MUST_OUT",
                                                                      "referencedDeclaration": null,
                                                                      "type": "enum EMap.Label"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "member_name": "Label",
<<<<<<< HEAD
                                                                          "referencedDeclaration": 3723,
=======
                                                                          "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          "type": "type(enum EMap.Label)"
                                                                        },
                                                                        "children": [
                                                                          {
                                                                            "attributes": {
                                                                              "argumentTypes": null,
                                                                              "overloadedDeclarations": [
                                                                                null
                                                                              ],
<<<<<<< HEAD
                                                                              "referencedDeclaration": 3912,
=======
                                                                              "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                              "type": "type(library EMap)",
                                                                              "value": "EMap"
                                                                            },
                                                                            "id": 1336,
                                                                            "name": "Identifier",
<<<<<<< HEAD
                                                                            "src": "12935:4:0"
=======
                                                                            "src": "12235:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                          }
                                                                        ],
                                                                        "id": 1337,
                                                                        "name": "MemberAccess",
<<<<<<< HEAD
                                                                        "src": "12935:10:0"
=======
                                                                        "src": "12235:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1338,
                                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                                    "src": "12935:19:0"
=======
                                                                    "src": "12235:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1339,
                                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                                "src": "12924:31:0"
=======
                                                                "src": "12224:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1340,
                                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                                            "src": "12924:31:0"
=======
                                                            "src": "12224:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "operator": "=",
                                                                  "type": "bool"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "isConstant": false,
                                                                      "isLValue": true,
                                                                      "isPure": false,
                                                                      "lValueRequested": true,
                                                                      "type": "bool"
                                                                    },
                                                                    "children": [
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "overloadedDeclarations": [
                                                                            null
                                                                          ],
                                                                          "referencedDeclaration": 764,
                                                                          "type": "bool[] memory",
                                                                          "value": "flags"
                                                                        },
                                                                        "id": 1341,
                                                                        "name": "Identifier",
<<<<<<< HEAD
                                                                        "src": "12986:5:0"
=======
                                                                        "src": "12285:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      },
                                                                      {
                                                                        "attributes": {
                                                                          "argumentTypes": null,
                                                                          "hexvalue": "34",
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "subdenomination": null,
                                                                          "token": "number",
                                                                          "type": "int_const 4",
                                                                          "value": "4"
                                                                        },
                                                                        "id": 1342,
                                                                        "name": "Literal",
<<<<<<< HEAD
                                                                        "src": "12992:1:0"
=======
                                                                        "src": "12291:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                      }
                                                                    ],
                                                                    "id": 1343,
                                                                    "name": "IndexAccess",
<<<<<<< HEAD
                                                                    "src": "12986:8:0"
=======
                                                                    "src": "12285:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  },
                                                                  {
                                                                    "attributes": {
                                                                      "argumentTypes": null,
                                                                      "hexvalue": "74727565",
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "subdenomination": null,
                                                                      "token": "bool",
                                                                      "type": "bool",
                                                                      "value": "true"
                                                                    },
                                                                    "id": 1344,
                                                                    "name": "Literal",
<<<<<<< HEAD
                                                                    "src": "12997:4:0"
=======
                                                                    "src": "12296:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                                  }
                                                                ],
                                                                "id": 1345,
                                                                "name": "Assignment",
<<<<<<< HEAD
                                                                "src": "12986:15:0"
=======
                                                                "src": "12285:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1346,
                                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                                            "src": "12986:15:0"
=======
                                                            "src": "12285:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1347,
                                                        "name": "Block",
<<<<<<< HEAD
                                                        "src": "12893:136:0"
=======
                                                        "src": "12194:133:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1348,
                                                    "name": "IfStatement",
<<<<<<< HEAD
                                                    "src": "12718:311:0"
=======
                                                    "src": "12022:305:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1349,
                                                "name": "Block",
<<<<<<< HEAD
                                                "src": "12432:620:0"
=======
                                                "src": "11741:608:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1350,
                                            "name": "ForStatement",
<<<<<<< HEAD
                                            "src": "12268:784:0"
=======
                                            "src": "11581:768:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "falseBody": null
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "!",
                                                  "prefix": true,
                                                  "type": "bool"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "bool"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 764,
                                                          "type": "bool[] memory",
                                                          "value": "flags"
                                                        },
                                                        "id": 1351,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "13125:5:0"
=======
                                                        "src": "12420:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "hexvalue": "34",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "subdenomination": null,
                                                          "token": "number",
                                                          "type": "int_const 4",
                                                          "value": "4"
                                                        },
                                                        "id": 1352,
                                                        "name": "Literal",
<<<<<<< HEAD
                                                        "src": "13131:1:0"
=======
                                                        "src": "12426:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1353,
                                                    "name": "IndexAccess",
<<<<<<< HEAD
                                                    "src": "13125:8:0"
=======
                                                    "src": "12420:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1354,
                                                "name": "UnaryOperation",
<<<<<<< HEAD
                                                "src": "13124:9:0"
=======
                                                "src": "12419:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "children": [
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "=",
                                                          "type": "struct EMap.LabelMap storage pointer"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 756,
                                                              "type": "struct EMap.LabelMap storage pointer",
                                                              "value": "lab"
                                                            },
                                                            "id": 1355,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "13162:3:0"
=======
                                                            "src": "12456:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "type": "struct EMap.LabelMap storage ref"
                                                            },
                                                            "children": [
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 28,
                                                                  "type": "mapping(uint256 => struct EMap.LabelMap storage ref)",
                                                                  "value": "labs"
                                                                },
                                                                "id": 1356,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "13168:4:0"
=======
                                                                "src": "12462:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              },
                                                              {
                                                                "attributes": {
                                                                  "argumentTypes": null,
                                                                  "overloadedDeclarations": [
                                                                    null
                                                                  ],
                                                                  "referencedDeclaration": 1011,
                                                                  "type": "uint256",
                                                                  "value": "lab1Id"
                                                                },
                                                                "id": 1357,
                                                                "name": "Identifier",
<<<<<<< HEAD
                                                                "src": "13173:6:0"
=======
                                                                "src": "12467:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                              }
                                                            ],
                                                            "id": 1358,
                                                            "name": "IndexAccess",
<<<<<<< HEAD
                                                            "src": "13168:12:0"
=======
                                                            "src": "12462:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1359,
                                                        "name": "Assignment",
<<<<<<< HEAD
                                                        "src": "13162:18:0"
=======
                                                        "src": "12456:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1360,
                                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                                    "src": "13162:18:0"
=======
                                                    "src": "12456:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "=",
                                                          "type": "uint256"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 738,
                                                              "type": "uint256",
                                                              "value": "labId"
                                                            },
                                                            "id": 1361,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "13207:5:0"
=======
                                                            "src": "12500:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 1011,
                                                              "type": "uint256",
                                                              "value": "lab1Id"
                                                            },
                                                            "id": 1362,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "13215:6:0"
=======
                                                            "src": "12508:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1363,
                                                        "name": "Assignment",
<<<<<<< HEAD
                                                        "src": "13207:14:0"
=======
                                                        "src": "12500:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1364,
                                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                                    "src": "13207:14:0"
=======
                                                    "src": "12500:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1365,
                                                "name": "Block",
<<<<<<< HEAD
                                                "src": "13135:110:0"
=======
                                                "src": "12430:107:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1366,
                                            "name": "IfStatement",
<<<<<<< HEAD
                                            "src": "13120:125:0"
=======
                                            "src": "12415:122:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1367,
                                        "name": "Block",
<<<<<<< HEAD
                                        "src": "11968:1296:0"
=======
                                        "src": "11286:1269:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1368,
                                    "name": "IfStatement",
<<<<<<< HEAD
                                    "src": "11953:1311:0"
=======
                                    "src": "11271:1284:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1369,
                                "name": "Block",
<<<<<<< HEAD
                                "src": "6996:6283:0"
=======
                                "src": "6419:6150:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1370,
                            "name": "IfStatement",
<<<<<<< HEAD
                            "src": "6920:6359:0"
=======
                            "src": "6345:6224:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1371,
                        "name": "Block",
<<<<<<< HEAD
                        "src": "6827:6463:0"
=======
                        "src": "6254:6325:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1372,
                    "name": "WhileStatement",
<<<<<<< HEAD
                    "src": "6809:6481:0"
=======
                    "src": "6236:6343:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
                        null,
                        1374
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "argMustOutIdsLen",
                          "scope": 1435,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1373,
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "13350:7:0"
=======
                            "src": "12637:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1374,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "13350:24:0"
=======
                        "src": "12637:24:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple(uint256[] memory,uint256)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1574,
                              "type": "function (uint256) view returns (uint256[] memory,uint256)",
                              "value": "_getMustOut"
                            },
                            "id": 1375,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "13378:11:0"
=======
                            "src": "12665:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 738,
                              "type": "uint256",
                              "value": "labId"
                            },
                            "id": 1376,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "13390:5:0"
=======
                            "src": "12677:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1377,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "13378:18:0"
=======
                        "src": "12665:18:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1378,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "13347:49:0"
=======
                    "src": "12634:49:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1374,
                              "type": "uint256",
                              "value": "argMustOutIdsLen"
                            },
                            "id": 1379,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "13411:16:0"
=======
                            "src": "12697:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1380,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "13431:1:0"
=======
                            "src": "12717:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1381,
                        "name": "BinaryOperation",
<<<<<<< HEAD
                        "src": "13411:21:0"
=======
                        "src": "12697:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                1385,
                                1387
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "argInIds",
                                  "scope": 1433,
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "type": "uint256[]",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "length": null,
                                      "type": "uint256[]"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 1383,
                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                        "src": "13491:7:0"
=======
                                        "src": "12775:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1384,
                                    "name": "ArrayTypeName",
<<<<<<< HEAD
                                    "src": "13491:9:0"
=======
                                    "src": "12775:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1385,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "13491:25:0"
=======
                                "src": "12775:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "argINIdsLen",
                                  "scope": 1433,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 1386,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "13518:7:0"
=======
                                    "src": "12802:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1387,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "13518:19:0"
=======
                                "src": "12802:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple(uint256[] memory,uint256)",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1643,
                                      "type": "function (uint256) view returns (uint256[] memory,uint256)",
                                      "value": "_getIn"
                                    },
                                    "id": 1388,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "13541:6:0"
=======
                                    "src": "12825:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 738,
                                      "type": "uint256",
                                      "value": "labId"
                                    },
                                    "id": 1389,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "13548:5:0"
=======
                                    "src": "12832:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1390,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "13541:13:0"
=======
                                "src": "12825:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1391,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "13490:64:0"
=======
                            "src": "12774:64:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
                                1395
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "ext",
                                  "scope": 1433,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct HitchensUnorderedKeySetLib.Set",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "HitchensUnorderedKeySetLib.Set",
<<<<<<< HEAD
                                      "referencedDeclaration": 3922,
=======
                                      "referencedDeclaration": 2454,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct HitchensUnorderedKeySetLib.Set"
                                    },
                                    "id": 1394,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "13659:30:0"
=======
                                    "src": "12941:30:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1395,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "13659:42:0"
=======
                                "src": "12941:42:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HitchensUnorderedKeySetLib.Set storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 34,
                                      "type": "mapping(uint256 => struct HitchensUnorderedKeySetLib.Set storage ref)",
                                      "value": "prefExtensions"
                                    },
                                    "id": 1396,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "13704:14:0"
=======
                                    "src": "12986:14:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 740,
                                      "type": "uint256",
                                      "value": "prefExtensionId"
                                    },
                                    "id": 1397,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "13737:15:0"
=======
                                    "src": "13018:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1398,
                                "name": "IndexAccess",
<<<<<<< HEAD
                                "src": "13704:63:0"
=======
                                "src": "12986:61:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1399,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "13659:108:0"
=======
                            "src": "12941:106:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "assignments": [
                                    1401
                                  ]
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "constant": false,
                                      "name": "i",
                                      "scope": 1432,
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "type": "uint256",
                                      "value": null,
                                      "visibility": "internal"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 1400,
                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                        "src": "13787:7:0"
=======
                                        "src": "13066:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1401,
                                    "name": "VariableDeclaration",
<<<<<<< HEAD
                                    "src": "13787:9:0"
=======
                                    "src": "13066:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 1402,
                                    "name": "Literal",
<<<<<<< HEAD
                                    "src": "13799:1:0"
=======
                                    "src": "13078:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1403,
                                "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                                "src": "13787:13:0"
=======
                                "src": "13066:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1401,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 1404,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "13802:1:0"
=======
                                    "src": "13081:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1387,
                                      "type": "uint256",
                                      "value": "argINIdsLen"
                                    },
                                    "id": 1405,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "13806:11:0"
=======
                                    "src": "13085:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1406,
                                "name": "BinaryOperation",
<<<<<<< HEAD
                                "src": "13802:15:0"
=======
                                "src": "13081:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "++",
                                      "prefix": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1401,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 1407,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "13819:1:0"
=======
                                        "src": "13098:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1408,
                                    "name": "UnaryOperation",
<<<<<<< HEAD
                                    "src": "13819:3:0"
=======
                                    "src": "13098:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1409,
                                "name": "ExpressionStatement",
<<<<<<< HEAD
                                "src": "13819:3:0"
=======
                                "src": "13098:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "falseBody": null
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "!",
                                          "prefix": true,
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "bool",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "exists",
<<<<<<< HEAD
                                                  "referencedDeclaration": 4064,
=======
                                                  "referencedDeclaration": 2596,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32) view returns (bool)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1395,
                                                      "type": "struct HitchensUnorderedKeySetLib.Set storage pointer",
                                                      "value": "ext"
                                                    },
                                                    "id": 1410,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "13848:3:0"
=======
                                                    "src": "13126:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1411,
                                                "name": "MemberAccess",
<<<<<<< HEAD
                                                "src": "13848:10:0"
=======
                                                "src": "13126:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "bytes32",
                                                  "type_conversion": true
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "type": "type(bytes32)",
                                                      "value": "bytes32"
                                                    },
                                                    "id": 1412,
                                                    "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                    "src": "13859:7:0"
=======
                                                    "src": "13137:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 1385,
                                                          "type": "uint256[] memory",
                                                          "value": "argInIds"
                                                        },
                                                        "id": 1413,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "13867:8:0"
=======
                                                        "src": "13145:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 1401,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 1414,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "13876:1:0"
=======
                                                        "src": "13154:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1415,
                                                    "name": "IndexAccess",
<<<<<<< HEAD
                                                    "src": "13867:11:0"
=======
                                                    "src": "13145:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1416,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "13859:20:0"
=======
                                                "src": "13137:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1417,
                                            "name": "FunctionCall",
<<<<<<< HEAD
                                            "src": "13848:32:0"
=======
                                            "src": "13126:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1418,
                                        "name": "UnaryOperation",
<<<<<<< HEAD
                                        "src": "13847:33:0"
=======
                                        "src": "13125:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "children": [
                                          {
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "type": "tuple()",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_bytes32",
                                                          "typeString": "bytes32"
                                                        }
                                                      ],
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "insert",
<<<<<<< HEAD
                                                      "referencedDeclaration": 3960,
=======
                                                      "referencedDeclaration": 2492,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      "type": "function (struct HitchensUnorderedKeySetLib.Set storage pointer,bytes32)"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 1395,
                                                          "type": "struct HitchensUnorderedKeySetLib.Set storage pointer",
                                                          "value": "ext"
                                                        },
                                                        "id": 1419,
                                                        "name": "Identifier",
<<<<<<< HEAD
                                                        "src": "13905:3:0"
=======
                                                        "src": "13182:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1421,
                                                    "name": "MemberAccess",
<<<<<<< HEAD
                                                    "src": "13905:10:0"
=======
                                                    "src": "13182:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "isStructConstructorCall": false,
                                                      "lValueRequested": false,
                                                      "names": [
                                                        null
                                                      ],
                                                      "type": "bytes32",
                                                      "type_conversion": true
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          ],
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "type": "type(bytes32)",
                                                          "value": "bytes32"
                                                        },
                                                        "id": 1422,
                                                        "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                                        "src": "13916:7:0"
=======
                                                        "src": "13193:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "type": "uint256"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 1385,
                                                              "type": "uint256[] memory",
                                                              "value": "argInIds"
                                                            },
                                                            "id": 1423,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "13924:8:0"
=======
                                                            "src": "13201:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          },
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 1401,
                                                              "type": "uint256",
                                                              "value": "i"
                                                            },
                                                            "id": 1424,
                                                            "name": "Identifier",
<<<<<<< HEAD
                                                            "src": "13933:1:0"
=======
                                                            "src": "13210:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                          }
                                                        ],
                                                        "id": 1425,
                                                        "name": "IndexAccess",
<<<<<<< HEAD
                                                        "src": "13924:11:0"
=======
                                                        "src": "13201:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                      }
                                                    ],
                                                    "id": 1426,
                                                    "name": "FunctionCall",
<<<<<<< HEAD
                                                    "src": "13916:20:0"
=======
                                                    "src": "13193:20:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1427,
                                                "name": "FunctionCall",
<<<<<<< HEAD
                                                "src": "13905:32:0"
=======
                                                "src": "13182:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1428,
                                            "name": "ExpressionStatement",
<<<<<<< HEAD
                                            "src": "13905:32:0"
=======
                                            "src": "13182:32:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1429,
                                        "name": "Block",
<<<<<<< HEAD
                                        "src": "13882:75:0"
=======
                                        "src": "13160:73:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1430,
                                    "name": "IfStatement",
<<<<<<< HEAD
                                    "src": "13843:114:0"
=======
                                    "src": "13121:112:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1431,
                                "name": "Block",
<<<<<<< HEAD
                                "src": "13824:148:0"
=======
                                "src": "13103:144:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1432,
                            "name": "ForStatement",
<<<<<<< HEAD
                            "src": "13782:190:0"
=======
                            "src": "13061:186:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1433,
                        "name": "Block",
<<<<<<< HEAD
                        "src": "13434:549:0"
=======
                        "src": "12720:537:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1434,
                    "name": "IfStatement",
<<<<<<< HEAD
                    "src": "13407:576:0"
=======
                    "src": "12693:564:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 1435,
                "name": "Block",
<<<<<<< HEAD
                "src": "6589:7401:0"
=======
                "src": "6022:7241:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 1436,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "6456:7534:0"
=======
            "src": "5893:7370:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_getBlank",
              "scope": 1644,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "labId",
                      "scope": 1505,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1437,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "14017:7:0"
=======
                        "src": "13288:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1438,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "14017:13:0"
=======
                    "src": "13288:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 1439,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "14016:15:0"
=======
                "src": "13287:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "argIdsTemp",
                      "scope": 1505,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1440,
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "14081:7:0"
=======
                            "src": "13349:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1441,
                        "name": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "14081:9:0"
=======
                        "src": "13349:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1442,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "14081:27:0"
=======
                    "src": "13349:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "argIdsLenTemp",
                      "scope": 1505,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1443,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "14110:7:0"
=======
                        "src": "13378:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1444,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "14110:21:0"
=======
                    "src": "13378:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 1445,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "14080:52:0"
=======
                "src": "13348:52:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1449
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "lab",
                          "scope": 1504,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct EMap.LabelMap",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "EMap.LabelMap",
<<<<<<< HEAD
                              "referencedDeclaration": 3726,
=======
                              "referencedDeclaration": 2258,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.LabelMap"
                            },
                            "id": 1448,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "14149:13:0"
=======
                            "src": "13415:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1449,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "14149:25:0"
=======
                        "src": "13415:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct EMap.LabelMap storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "mapping(uint256 => struct EMap.LabelMap storage ref)",
                              "value": "labs"
                            },
                            "id": 1450,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "14177:4:0"
=======
                            "src": "13443:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1438,
                              "type": "uint256",
                              "value": "labId"
                            },
                            "id": 1451,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "14182:5:0"
=======
                            "src": "13448:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1452,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "14177:11:0"
=======
                        "src": "13443:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1453,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "14149:39:0"
=======
                    "src": "13415:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256[] memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1442,
                              "type": "uint256[] memory",
                              "value": "argIdsTemp"
                            },
                            "id": 1454,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "14199:10:0"
=======
                            "src": "13464:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256[] memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "function (uint256) pure returns (uint256[] memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "length": null,
                                      "type": "uint256[]"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 1455,
                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                        "src": "14216:7:0"
=======
                                        "src": "13481:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1456,
                                    "name": "ArrayTypeName",
<<<<<<< HEAD
                                    "src": "14216:9:0"
=======
                                    "src": "13481:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1457,
                                "name": "NewExpression",
<<<<<<< HEAD
                                "src": "14212:13:0"
=======
                                "src": "13477:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "length",
<<<<<<< HEAD
                                      "referencedDeclaration": 3800,
=======
                                      "referencedDeclaration": 2332,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "function (struct EMap.LabelMap storage pointer) view returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1449,
                                          "type": "struct EMap.LabelMap storage pointer",
                                          "value": "lab"
                                        },
                                        "id": 1458,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "14226:3:0"
=======
                                        "src": "13491:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1459,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "14226:10:0"
=======
                                    "src": "13491:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1460,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "14226:12:0"
=======
                                "src": "13491:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1461,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "14212:27:0"
=======
                            "src": "13477:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1462,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "14199:40:0"
=======
                        "src": "13464:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1463,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "14199:40:0"
=======
                    "src": "13464:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1444,
                              "type": "uint256",
                              "value": "argIdsLenTemp"
                            },
                            "id": 1464,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "14250:13:0"
=======
                            "src": "13514:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1465,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "14266:1:0"
=======
                            "src": "13530:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1466,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "14250:17:0"
=======
                        "src": "13514:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1467,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "14250:17:0"
=======
                    "src": "13514:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            1469
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 1503,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1468,
                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "14283:7:0"
=======
                                "src": "13546:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1469,
                            "name": "VariableDeclaration",
<<<<<<< HEAD
                            "src": "14283:9:0"
=======
                            "src": "13546:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1470,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "14295:1:0"
=======
                            "src": "13558:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1471,
                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "14283:13:0"
=======
                        "src": "13546:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1469,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 1472,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "14298:1:0"
=======
                            "src": "13561:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1442,
                                  "type": "uint256[] memory",
                                  "value": "argIdsTemp"
                                },
                                "id": 1473,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "14302:10:0"
=======
                                "src": "13565:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1474,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "14302:17:0"
=======
                            "src": "13565:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1475,
                        "name": "BinaryOperation",
<<<<<<< HEAD
                        "src": "14298:21:0"
=======
                        "src": "13561:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1469,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 1476,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "14321:1:0"
=======
                                "src": "13584:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1477,
                            "name": "UnaryOperation",
<<<<<<< HEAD
                            "src": "14321:3:0"
=======
                            "src": "13584:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1478,
                        "name": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "14321:3:0"
=======
                        "src": "13584:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                1480,
                                1482
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "arg",
                                  "scope": 1502,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 1479,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "14342:7:0"
=======
                                    "src": "13604:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1480,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "14342:11:0"
=======
                                "src": "13604:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "argLabel",
                                  "scope": 1502,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "enum EMap.Label",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "EMap.Label",
<<<<<<< HEAD
                                      "referencedDeclaration": 3723,
=======
                                      "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "enum EMap.Label"
                                    },
                                    "id": 1481,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "14355:10:0"
=======
                                    "src": "13617:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1482,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "14355:19:0"
=======
                                "src": "13617:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple(uint256,enum EMap.Label)",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "at",
<<<<<<< HEAD
                                      "referencedDeclaration": 3832,
=======
                                      "referencedDeclaration": 2364,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (uint256,enum EMap.Label)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1449,
                                          "type": "struct EMap.LabelMap storage pointer",
                                          "value": "lab"
                                        },
                                        "id": 1483,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "14378:3:0"
=======
                                        "src": "13640:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1484,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "14378:6:0"
=======
                                    "src": "13640:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1469,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 1485,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "14385:1:0"
=======
                                    "src": "13647:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1486,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "14378:9:0"
=======
                                "src": "13640:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1487,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "14341:46:0"
=======
                            "src": "13603:46:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
<<<<<<< HEAD
                                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "enum EMap.Label"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1482,
                                      "type": "enum EMap.Label",
                                      "value": "argLabel"
                                    },
                                    "id": 1488,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "14406:8:0"
=======
                                    "src": "13667:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "member_name": "BLANK",
                                      "referencedDeclaration": null,
                                      "type": "enum EMap.Label"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "Label",
<<<<<<< HEAD
                                          "referencedDeclaration": 3723,
=======
                                          "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "type(enum EMap.Label)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3912,
=======
                                              "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "type(library EMap)",
                                              "value": "EMap"
                                            },
                                            "id": 1489,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "14418:4:0"
=======
                                            "src": "13679:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1490,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "14418:10:0"
=======
                                        "src": "13679:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1491,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "14418:16:0"
=======
                                    "src": "13679:16:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1492,
                                "name": "BinaryOperation",
<<<<<<< HEAD
                                "src": "14406:28:0"
=======
                                "src": "13667:28:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1442,
                                                  "type": "uint256[] memory",
                                                  "value": "argIdsTemp"
                                                },
                                                "id": 1493,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "14455:10:0"
=======
                                                "src": "13715:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "++",
                                                  "prefix": false,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1444,
                                                      "type": "uint256",
                                                      "value": "argIdsLenTemp"
                                                    },
                                                    "id": 1494,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "14466:13:0"
=======
                                                    "src": "13726:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1495,
                                                "name": "UnaryOperation",
<<<<<<< HEAD
                                                "src": "14466:15:0"
=======
                                                "src": "13726:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1496,
                                            "name": "IndexAccess",
<<<<<<< HEAD
                                            "src": "14455:27:0"
=======
                                            "src": "13715:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1480,
                                              "type": "uint256",
                                              "value": "arg"
                                            },
                                            "id": 1497,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "14485:3:0"
=======
                                            "src": "13745:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1498,
                                        "name": "Assignment",
<<<<<<< HEAD
                                        "src": "14455:33:0"
=======
                                        "src": "13715:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1499,
                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "14455:33:0"
=======
                                    "src": "13715:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1500,
                                "name": "Block",
<<<<<<< HEAD
                                "src": "14436:68:0"
=======
                                "src": "13697:66:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1501,
                            "name": "IfStatement",
<<<<<<< HEAD
                            "src": "14402:102:0"
=======
                            "src": "13663:100:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1502,
                        "name": "Block",
<<<<<<< HEAD
                        "src": "14326:189:0"
=======
                        "src": "13589:184:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1503,
                    "name": "ForStatement",
<<<<<<< HEAD
                    "src": "14278:237:0"
=======
                    "src": "13541:232:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 1504,
                "name": "Block",
<<<<<<< HEAD
                "src": "14138:384:0"
=======
                "src": "13405:374:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 1505,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "13998:524:0"
=======
            "src": "13269:510:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_getMustOut",
              "scope": 1644,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "labId",
                      "scope": 1574,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1506,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "14551:7:0"
=======
                        "src": "13806:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1507,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "14551:13:0"
=======
                    "src": "13806:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 1508,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "14550:15:0"
=======
                "src": "13805:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "argIdsTemp",
                      "scope": 1574,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1509,
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "14615:7:0"
=======
                            "src": "13867:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1510,
                        "name": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "14615:9:0"
=======
                        "src": "13867:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1511,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "14615:27:0"
=======
                    "src": "13867:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "argIdsLenTemp",
                      "scope": 1574,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1512,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "14644:7:0"
=======
                        "src": "13896:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1513,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "14644:21:0"
=======
                    "src": "13896:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 1514,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "14614:52:0"
=======
                "src": "13866:52:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1518
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "lab",
                          "scope": 1573,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct EMap.LabelMap",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "EMap.LabelMap",
<<<<<<< HEAD
                              "referencedDeclaration": 3726,
=======
                              "referencedDeclaration": 2258,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.LabelMap"
                            },
                            "id": 1517,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "14683:13:0"
=======
                            "src": "13933:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1518,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "14683:25:0"
=======
                        "src": "13933:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct EMap.LabelMap storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "mapping(uint256 => struct EMap.LabelMap storage ref)",
                              "value": "labs"
                            },
                            "id": 1519,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "14711:4:0"
=======
                            "src": "13961:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1507,
                              "type": "uint256",
                              "value": "labId"
                            },
                            "id": 1520,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "14716:5:0"
=======
                            "src": "13966:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1521,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "14711:11:0"
=======
                        "src": "13961:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1522,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "14683:39:0"
=======
                    "src": "13933:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256[] memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1511,
                              "type": "uint256[] memory",
                              "value": "argIdsTemp"
                            },
                            "id": 1523,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "14733:10:0"
=======
                            "src": "13982:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256[] memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "function (uint256) pure returns (uint256[] memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "length": null,
                                      "type": "uint256[]"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 1524,
                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                        "src": "14750:7:0"
=======
                                        "src": "13999:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1525,
                                    "name": "ArrayTypeName",
<<<<<<< HEAD
                                    "src": "14750:9:0"
=======
                                    "src": "13999:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1526,
                                "name": "NewExpression",
<<<<<<< HEAD
                                "src": "14746:13:0"
=======
                                "src": "13995:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "length",
<<<<<<< HEAD
                                      "referencedDeclaration": 3800,
=======
                                      "referencedDeclaration": 2332,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "function (struct EMap.LabelMap storage pointer) view returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1518,
                                          "type": "struct EMap.LabelMap storage pointer",
                                          "value": "lab"
                                        },
                                        "id": 1527,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "14760:3:0"
=======
                                        "src": "14009:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1528,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "14760:10:0"
=======
                                    "src": "14009:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1529,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "14760:12:0"
=======
                                "src": "14009:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1530,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "14746:27:0"
=======
                            "src": "13995:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1531,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "14733:40:0"
=======
                        "src": "13982:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1532,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "14733:40:0"
=======
                    "src": "13982:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1513,
                              "type": "uint256",
                              "value": "argIdsLenTemp"
                            },
                            "id": 1533,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "14784:13:0"
=======
                            "src": "14032:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1534,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "14800:1:0"
=======
                            "src": "14048:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1535,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "14784:17:0"
=======
                        "src": "14032:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1536,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "14784:17:0"
=======
                    "src": "14032:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            1538
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 1572,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1537,
                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "14817:7:0"
=======
                                "src": "14064:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1538,
                            "name": "VariableDeclaration",
<<<<<<< HEAD
                            "src": "14817:9:0"
=======
                            "src": "14064:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1539,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "14829:1:0"
=======
                            "src": "14076:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1540,
                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "14817:13:0"
=======
                        "src": "14064:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1538,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 1541,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "14832:1:0"
=======
                            "src": "14079:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1511,
                                  "type": "uint256[] memory",
                                  "value": "argIdsTemp"
                                },
                                "id": 1542,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "14836:10:0"
=======
                                "src": "14083:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1543,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "14836:17:0"
=======
                            "src": "14083:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1544,
                        "name": "BinaryOperation",
<<<<<<< HEAD
                        "src": "14832:21:0"
=======
                        "src": "14079:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1538,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 1545,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "14855:1:0"
=======
                                "src": "14102:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1546,
                            "name": "UnaryOperation",
<<<<<<< HEAD
                            "src": "14855:3:0"
=======
                            "src": "14102:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1547,
                        "name": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "14855:3:0"
=======
                        "src": "14102:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                1549,
                                1551
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "arg",
                                  "scope": 1571,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 1548,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "14876:7:0"
=======
                                    "src": "14122:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1549,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "14876:11:0"
=======
                                "src": "14122:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "argLabel",
                                  "scope": 1571,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "enum EMap.Label",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "EMap.Label",
<<<<<<< HEAD
                                      "referencedDeclaration": 3723,
=======
                                      "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "enum EMap.Label"
                                    },
                                    "id": 1550,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "14889:10:0"
=======
                                    "src": "14135:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1551,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "14889:19:0"
=======
                                "src": "14135:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple(uint256,enum EMap.Label)",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "at",
<<<<<<< HEAD
                                      "referencedDeclaration": 3832,
=======
                                      "referencedDeclaration": 2364,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (uint256,enum EMap.Label)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1518,
                                          "type": "struct EMap.LabelMap storage pointer",
                                          "value": "lab"
                                        },
                                        "id": 1552,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "14912:3:0"
=======
                                        "src": "14158:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1553,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "14912:6:0"
=======
                                    "src": "14158:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1538,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 1554,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "14919:1:0"
=======
                                    "src": "14165:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1555,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "14912:9:0"
=======
                                "src": "14158:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1556,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "14875:46:0"
=======
                            "src": "14121:46:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
<<<<<<< HEAD
                                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "enum EMap.Label"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1551,
                                      "type": "enum EMap.Label",
                                      "value": "argLabel"
                                    },
                                    "id": 1557,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "14940:8:0"
=======
                                    "src": "14185:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "member_name": "MUST_OUT",
                                      "referencedDeclaration": null,
                                      "type": "enum EMap.Label"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "Label",
<<<<<<< HEAD
                                          "referencedDeclaration": 3723,
=======
                                          "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "type(enum EMap.Label)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3912,
=======
                                              "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "type(library EMap)",
                                              "value": "EMap"
                                            },
                                            "id": 1558,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "14952:4:0"
=======
                                            "src": "14197:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1559,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "14952:10:0"
=======
                                        "src": "14197:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1560,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "14952:19:0"
=======
                                    "src": "14197:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1561,
                                "name": "BinaryOperation",
<<<<<<< HEAD
                                "src": "14940:31:0"
=======
                                "src": "14185:31:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1511,
                                                  "type": "uint256[] memory",
                                                  "value": "argIdsTemp"
                                                },
                                                "id": 1562,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "14992:10:0"
=======
                                                "src": "14236:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "++",
                                                  "prefix": false,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1513,
                                                      "type": "uint256",
                                                      "value": "argIdsLenTemp"
                                                    },
                                                    "id": 1563,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "15003:13:0"
=======
                                                    "src": "14247:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1564,
                                                "name": "UnaryOperation",
<<<<<<< HEAD
                                                "src": "15003:15:0"
=======
                                                "src": "14247:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1565,
                                            "name": "IndexAccess",
<<<<<<< HEAD
                                            "src": "14992:27:0"
=======
                                            "src": "14236:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1549,
                                              "type": "uint256",
                                              "value": "arg"
                                            },
                                            "id": 1566,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "15022:3:0"
=======
                                            "src": "14266:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1567,
                                        "name": "Assignment",
<<<<<<< HEAD
                                        "src": "14992:33:0"
=======
                                        "src": "14236:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1568,
                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "14992:33:0"
=======
                                    "src": "14236:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1569,
                                "name": "Block",
<<<<<<< HEAD
                                "src": "14973:68:0"
=======
                                "src": "14218:66:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1570,
                            "name": "IfStatement",
<<<<<<< HEAD
                            "src": "14936:105:0"
=======
                            "src": "14181:103:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1571,
                        "name": "Block",
<<<<<<< HEAD
                        "src": "14860:192:0"
=======
                        "src": "14107:187:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1572,
                    "name": "ForStatement",
<<<<<<< HEAD
                    "src": "14812:240:0"
=======
                    "src": "14059:235:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 1573,
                "name": "Block",
<<<<<<< HEAD
                "src": "14672:387:0"
=======
                "src": "13923:377:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 1574,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "14530:529:0"
=======
            "src": "13785:515:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_getIn",
              "scope": 1644,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "labId",
                      "scope": 1643,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1575,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "15083:7:0"
=======
                        "src": "14322:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1576,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "15083:13:0"
=======
                    "src": "14322:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 1577,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "15082:15:0"
=======
                "src": "14321:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "argIdsTemp",
                      "scope": 1643,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1578,
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "15147:7:0"
=======
                            "src": "14383:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1579,
                        "name": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "15147:9:0"
=======
                        "src": "14383:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1580,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "15147:27:0"
=======
                    "src": "14383:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "argIdsLenTemp",
                      "scope": 1643,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1581,
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "15176:7:0"
=======
                        "src": "14412:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1582,
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "15176:21:0"
=======
                    "src": "14412:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 1583,
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "15146:52:0"
=======
                "src": "14382:52:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1587
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "lab",
                          "scope": 1642,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct EMap.LabelMap",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "EMap.LabelMap",
<<<<<<< HEAD
                              "referencedDeclaration": 3726,
=======
                              "referencedDeclaration": 2258,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.LabelMap"
                            },
                            "id": 1586,
                            "name": "UserDefinedTypeName",
<<<<<<< HEAD
                            "src": "15215:13:0"
=======
                            "src": "14449:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1587,
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "15215:25:0"
=======
                        "src": "14449:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct EMap.LabelMap storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "mapping(uint256 => struct EMap.LabelMap storage ref)",
                              "value": "labs"
                            },
                            "id": 1588,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "15243:4:0"
=======
                            "src": "14477:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1576,
                              "type": "uint256",
                              "value": "labId"
                            },
                            "id": 1589,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "15248:5:0"
=======
                            "src": "14482:5:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1590,
                        "name": "IndexAccess",
<<<<<<< HEAD
                        "src": "15243:11:0"
=======
                        "src": "14477:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1591,
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "15215:39:0"
=======
                    "src": "14449:39:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256[] memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1580,
                              "type": "uint256[] memory",
                              "value": "argIdsTemp"
                            },
                            "id": 1592,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "15265:10:0"
=======
                            "src": "14498:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256[] memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "function (uint256) pure returns (uint256[] memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "length": null,
                                      "type": "uint256[]"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 1593,
                                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                                        "src": "15282:7:0"
=======
                                        "src": "14515:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1594,
                                    "name": "ArrayTypeName",
<<<<<<< HEAD
                                    "src": "15282:9:0"
=======
                                    "src": "14515:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1595,
                                "name": "NewExpression",
<<<<<<< HEAD
                                "src": "15278:13:0"
=======
                                "src": "14511:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "length",
<<<<<<< HEAD
                                      "referencedDeclaration": 3800,
=======
                                      "referencedDeclaration": 2332,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "function (struct EMap.LabelMap storage pointer) view returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1587,
                                          "type": "struct EMap.LabelMap storage pointer",
                                          "value": "lab"
                                        },
                                        "id": 1596,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "15292:3:0"
=======
                                        "src": "14525:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1597,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "15292:10:0"
=======
                                    "src": "14525:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1598,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "15292:12:0"
=======
                                "src": "14525:12:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1599,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "15278:27:0"
=======
                            "src": "14511:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1600,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "15265:40:0"
=======
                        "src": "14498:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1601,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "15265:40:0"
=======
                    "src": "14498:40:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1582,
                              "type": "uint256",
                              "value": "argIdsLenTemp"
                            },
                            "id": 1602,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "15316:13:0"
=======
                            "src": "14548:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1603,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "15332:1:0"
=======
                            "src": "14564:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1604,
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "15316:17:0"
=======
                        "src": "14548:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1605,
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "15316:17:0"
=======
                    "src": "14548:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            1607
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 1641,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1606,
                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "15349:7:0"
=======
                                "src": "14580:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1607,
                            "name": "VariableDeclaration",
<<<<<<< HEAD
                            "src": "15349:9:0"
=======
                            "src": "14580:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1608,
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "15361:1:0"
=======
                            "src": "14592:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1609,
                        "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "15349:13:0"
=======
                        "src": "14580:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1607,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 1610,
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "15364:1:0"
=======
                            "src": "14595:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1580,
                                  "type": "uint256[] memory",
                                  "value": "argIdsTemp"
                                },
                                "id": 1611,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "15368:10:0"
=======
                                "src": "14599:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1612,
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "15368:17:0"
=======
                            "src": "14599:17:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1613,
                        "name": "BinaryOperation",
<<<<<<< HEAD
                        "src": "15364:21:0"
=======
                        "src": "14595:21:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1607,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 1614,
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "15387:1:0"
=======
                                "src": "14618:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1615,
                            "name": "UnaryOperation",
<<<<<<< HEAD
                            "src": "15387:3:0"
=======
                            "src": "14618:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1616,
                        "name": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "15387:3:0"
=======
                        "src": "14618:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                1618,
                                1620
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "arg",
                                  "scope": 1640,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 1617,
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "15408:7:0"
=======
                                    "src": "14638:7:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1618,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "15408:11:0"
=======
                                "src": "14638:11:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "argLabel",
                                  "scope": 1640,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "enum EMap.Label",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "EMap.Label",
<<<<<<< HEAD
                                      "referencedDeclaration": 3723,
=======
                                      "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "enum EMap.Label"
                                    },
                                    "id": 1619,
                                    "name": "UserDefinedTypeName",
<<<<<<< HEAD
                                    "src": "15421:10:0"
=======
                                    "src": "14651:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1620,
                                "name": "VariableDeclaration",
<<<<<<< HEAD
                                "src": "15421:19:0"
=======
                                "src": "14651:19:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple(uint256,enum EMap.Label)",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "at",
<<<<<<< HEAD
                                      "referencedDeclaration": 3832,
=======
                                      "referencedDeclaration": 2364,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "function (struct EMap.LabelMap storage pointer,uint256) view returns (uint256,enum EMap.Label)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1587,
                                          "type": "struct EMap.LabelMap storage pointer",
                                          "value": "lab"
                                        },
                                        "id": 1621,
                                        "name": "Identifier",
<<<<<<< HEAD
                                        "src": "15444:3:0"
=======
                                        "src": "14674:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1622,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "15444:6:0"
=======
                                    "src": "14674:6:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1607,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 1623,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "15451:1:0"
=======
                                    "src": "14681:1:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1624,
                                "name": "FunctionCall",
<<<<<<< HEAD
                                "src": "15444:9:0"
=======
                                "src": "14674:9:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1625,
                            "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                            "src": "15407:46:0"
=======
                            "src": "14637:46:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
<<<<<<< HEAD
                                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeString": "enum EMap.Label"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1620,
                                      "type": "enum EMap.Label",
                                      "value": "argLabel"
                                    },
                                    "id": 1626,
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "15472:8:0"
=======
                                    "src": "14701:8:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "member_name": "IN",
                                      "referencedDeclaration": null,
                                      "type": "enum EMap.Label"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "Label",
<<<<<<< HEAD
                                          "referencedDeclaration": 3723,
=======
                                          "referencedDeclaration": 2255,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "type(enum EMap.Label)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3912,
=======
                                              "referencedDeclaration": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "type(library EMap)",
                                              "value": "EMap"
                                            },
                                            "id": 1627,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "15484:4:0"
=======
                                            "src": "14713:4:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1628,
                                        "name": "MemberAccess",
<<<<<<< HEAD
                                        "src": "15484:10:0"
=======
                                        "src": "14713:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1629,
                                    "name": "MemberAccess",
<<<<<<< HEAD
                                    "src": "15484:13:0"
=======
                                    "src": "14713:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1630,
                                "name": "BinaryOperation",
<<<<<<< HEAD
                                "src": "15472:25:0"
=======
                                "src": "14701:25:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1580,
                                                  "type": "uint256[] memory",
                                                  "value": "argIdsTemp"
                                                },
                                                "id": 1631,
                                                "name": "Identifier",
<<<<<<< HEAD
                                                "src": "15518:10:0"
=======
                                                "src": "14746:10:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "++",
                                                  "prefix": false,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 1582,
                                                      "type": "uint256",
                                                      "value": "argIdsLenTemp"
                                                    },
                                                    "id": 1632,
                                                    "name": "Identifier",
<<<<<<< HEAD
                                                    "src": "15529:13:0"
=======
                                                    "src": "14757:13:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                                  }
                                                ],
                                                "id": 1633,
                                                "name": "UnaryOperation",
<<<<<<< HEAD
                                                "src": "15529:15:0"
=======
                                                "src": "14757:15:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              }
                                            ],
                                            "id": 1634,
                                            "name": "IndexAccess",
<<<<<<< HEAD
                                            "src": "15518:27:0"
=======
                                            "src": "14746:27:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1618,
                                              "type": "uint256",
                                              "value": "arg"
                                            },
                                            "id": 1635,
                                            "name": "Identifier",
<<<<<<< HEAD
                                            "src": "15548:3:0"
=======
                                            "src": "14776:3:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          }
                                        ],
                                        "id": 1636,
                                        "name": "Assignment",
<<<<<<< HEAD
                                        "src": "15518:33:0"
=======
                                        "src": "14746:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      }
                                    ],
                                    "id": 1637,
                                    "name": "ExpressionStatement",
<<<<<<< HEAD
                                    "src": "15518:33:0"
=======
                                    "src": "14746:33:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  }
                                ],
                                "id": 1638,
                                "name": "Block",
<<<<<<< HEAD
                                "src": "15499:68:0"
=======
                                "src": "14728:66:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              }
                            ],
                            "id": 1639,
                            "name": "IfStatement",
<<<<<<< HEAD
                            "src": "15468:99:0"
=======
                            "src": "14697:97:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          }
                        ],
                        "id": 1640,
                        "name": "Block",
<<<<<<< HEAD
                        "src": "15392:186:0"
=======
                        "src": "14623:181:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ],
                    "id": 1641,
                    "name": "ForStatement",
<<<<<<< HEAD
                    "src": "15344:234:0"
=======
                    "src": "14575:229:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                ],
                "id": 1642,
                "name": "Block",
<<<<<<< HEAD
                "src": "15204:381:0"
=======
                "src": "14439:371:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "id": 1643,
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "15067:518:0"
=======
            "src": "14306:504:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          }
        ],
        "id": 1644,
        "name": "ContractDefinition",
<<<<<<< HEAD
        "src": "126:15462:0"
=======
        "src": "119:14693:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
      }
    ],
    "id": 1645,
    "name": "SourceUnit",
<<<<<<< HEAD
    "src": "35:15555:0"
=======
    "src": "33:14780:0"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
<<<<<<< HEAD
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x2C859D5bd3508C7D4d34622FbABb902182d1BD45",
      "transactionHash": "0xcada7302737561303ae727337af07d1f67f5d11b472b5e6e4ae22204b6dba3ec"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-04-30T13:30:22.503Z",
  "networkType": "ethereum",
=======
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-01-07T13:23:38.219Z",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}