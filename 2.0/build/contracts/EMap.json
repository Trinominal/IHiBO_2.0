{
  "contractName": "EMap",
  "abi": [],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's\\r https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\\r type.\\r  * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/\\r contracts/utils/EnumerableMap.sol\\r  * Maps have the following properties:\\r  * - Entries are added, removed, and checked for existence in constant time\\r (O(1)).\\r - Entries are enumerated in O(n). No guarantees are made on the ordering.\\r  * ```\\r contract Example {\\r    // Add the library methods\\r    using EnumerableMap for EnumerableMap.LabelMap;\\r  *     // Declare a set state variable\\r    EnumerableMap.LabelMap private myMap;\\r }\\r ```\\r  \",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/EnumerableMap.sol\":\"EMap\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/EnumerableMap.sol\":{\"keccak256\":\"0x74fd7595fc911ada4066dec427c782fac28d8c461414befd63e2a22cedb32dd2\",\"urls\":[\"bzzr://3e1e062ee965444361d8edbafee5341ed886bc8d6c26003e5fb1c5459fde403a\"]}},\"version\":1}",
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058202d8ff69f70c9250ac24612ddca9f5e5f6d03c1447a98219885f5081d5fae52eb0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058202d8ff69f70c9250ac24612ddca9f5e5f6d03c1447a98219885f5081d5fae52eb0029",
  "sourceMap": "799:9537:4:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "799:9537:4:-;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.5.1;\r\n\r\n/**\r\n * @dev Library for managing an enumerable variant of Solidity's\r\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\r\n * type.\r\n *\r\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/\r\n * contracts/utils/EnumerableMap.sol\r\n *\r\n * Maps have the following properties:\r\n *\r\n * - Entries are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableMap for EnumerableMap.LabelMap;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableMap.LabelMap private myMap;\r\n * }\r\n * ```\r\n *\r\n */\r\nlibrary EMap {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Map type with\r\n    // bytes32 keys and values.\r\n    // The Map implementation uses private functions, and user-facing\r\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\r\n    // the underlying Map.\r\n    // This means that we can only create new EnumerableMaps for types that fit\r\n    // in bytes32.\r\n\r\n    struct MapEntry {\r\n        bytes32 _key;\r\n        bytes32 _value;\r\n    }\r\n\r\n    struct Map {\r\n        // Storage of map keys and values\r\n        MapEntry[] _entries;\r\n        // Position of the entry defined by a key in the `entries` array, plus 1\r\n        // because index 0 means a key is not in the map.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\r\n     * key. O(1).\r\n     *\r\n     * Returns true if the key was added to the map, that is if it was not\r\n     * already present.\r\n     */\r\n    function _set(\r\n        Map storage map,\r\n        bytes32 key,\r\n        bytes32 value\r\n    ) private returns (bool) {\r\n        // We read and store the key's index to prevent multiple reads from the same storage slot\r\n        uint256 keyIndex = map._indexes[key];\r\n\r\n        if (keyIndex == 0) {\r\n            // Equivalent to !contains(map, key)\r\n            map._entries.push(MapEntry({_key: key, _value: value}));\r\n            // The entry is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            map._indexes[key] = map._entries.length;\r\n            return true;\r\n        } else {\r\n            map._entries[keyIndex - 1]._value = value;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a key-value pair from a map. O(1).\r\n     *\r\n     * Returns true if the key was removed from the map, that is if it was present.\r\n     */\r\n    function _remove(Map storage map, bytes32 key) private returns (bool) {\r\n        // We read and store the key's index to prevent multiple reads from the same storage slot\r\n        uint256 keyIndex = map._indexes[key];\r\n\r\n        if (keyIndex != 0) {\r\n            // Equivalent to contains(map, key)\r\n            // To delete a key-value pair from the _entries array in O(1), we swap the entry to delete with the last one\r\n            // in the array, and then remove the last entry (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = keyIndex - 1;\r\n            uint256 lastIndex = map._entries.length - 1;\r\n\r\n            // When the entry to delete is the last one, the swap operation is unnecessary. However, since this occurs\r\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\r\n\r\n            MapEntry storage lastEntry = map._entries[lastIndex];\r\n\r\n            // Move the last entry to the index where the entry to delete is\r\n            map._entries[toDeleteIndex] = lastEntry;\r\n            // Update the index for the moved entry\r\n            map._indexes[lastEntry._key] = toDeleteIndex + 1; // All indexes are 1-based\r\n\r\n            // Delete the slot where the moved entry was stored\r\n            map._entries.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete map._indexes[key];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the key is in the map. O(1).\r\n     */\r\n    function _contains(Map storage map, bytes32 key)\r\n        private\r\n        view\r\n        returns (bool)\r\n    {\r\n        return map._indexes[key] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of key-value pairs in the map. O(1).\r\n     */\r\n    function _length(Map storage map) private view returns (uint256) {\r\n        return map._entries.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of entries inside the\r\n     * array, and it may change when more entries are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Map storage map, uint256 index)\r\n        private\r\n        view\r\n        returns (bytes32, bytes32)\r\n    {\r\n        require(\r\n            map._entries.length > index,\r\n            \"EnumerableMap: index out of bounds\"\r\n        );\r\n\r\n        MapEntry storage entry = map._entries[index];\r\n        return (entry._key, entry._value);\r\n    }\r\n\r\n    /**\r\n     * @dev Tries to returns the value associated with `key`.  O(1).\r\n     * Does not revert if `key` is not in the map.\r\n     */\r\n    function _tryGet(Map storage map, bytes32 key)\r\n        private\r\n        view\r\n        returns (bool, bytes32)\r\n    {\r\n        uint256 keyIndex = map._indexes[key];\r\n        if (keyIndex == 0) return (false, 0); // Equivalent to contains(map, key)\r\n        return (true, map._entries[keyIndex - 1]._value); // All indexes are 1-based\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value associated with `key`.  O(1).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `key` must be in the map.\r\n     */\r\n    function _get(Map storage map, bytes32 key) private view returns (bytes32) {\r\n        uint256 keyIndex = map._indexes[key];\r\n        require(keyIndex != 0, \"EnumerableMap: nonexistent key\"); // Equivalent to contains(map, key)\r\n        return map._entries[keyIndex - 1]._value; // All indexes are 1-based\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\r\n     */\r\n    function _get(\r\n        Map storage map,\r\n        bytes32 key,\r\n        string memory errorMessage\r\n    ) private view returns (bytes32) {\r\n        uint256 keyIndex = map._indexes[key];\r\n        require(keyIndex != 0, errorMessage); // Equivalent to contains(map, key)\r\n        return map._entries[keyIndex - 1]._value; // All indexes are 1-based\r\n    }\r\n\r\n    // LabelMap\r\n\r\n    enum Label {IN, OUT, UNDEC, BLANK, MUST_OUT}\r\n\r\n    struct LabelMap {\r\n        Map _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\r\n     * key. O(1).\r\n     *\r\n     * Returns true if the key was added to the map, that is if it was not\r\n     * already present.\r\n     */\r\n    function set(\r\n        LabelMap storage map,\r\n        uint256 key,\r\n        Label value\r\n    ) internal returns (bool) {\r\n        return _set(map._inner, bytes32(key), bytes32(uint256(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the key was removed from the map, that is if it was present.\r\n     */\r\n    function remove(LabelMap storage map, uint256 key) internal returns (bool) {\r\n        return _remove(map._inner, bytes32(key));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the key is in the map. O(1).\r\n     */\r\n    function contains(LabelMap storage map, uint256 key)\r\n        internal\r\n        view\r\n        returns (bool)\r\n    {\r\n        return _contains(map._inner, bytes32(key));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of elements in the map. O(1).\r\n     */\r\n    function length(LabelMap storage map) internal view returns (uint256) {\r\n        return _length(map._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the element stored at position `index` in the set. O(1).\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(LabelMap storage map, uint256 index)\r\n        internal\r\n        view\r\n        returns (uint256, Label)\r\n    {\r\n        (bytes32 key, bytes32 value) = _at(map._inner, index);\r\n        return (uint256(key), Label(uint256(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Tries to returns the value associated with `key`.  O(1).\r\n     * Does not revert if `key` is not in the map.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryGet(LabelMap storage map, uint256 key)\r\n        internal\r\n        view\r\n        returns (bool, Label)\r\n    {\r\n        (bool success, bytes32 value) = _tryGet(map._inner, bytes32(key));\r\n        return (success, Label(uint256(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value associated with `key`.  O(1).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `key` must be in the map.\r\n     */\r\n    function get(LabelMap storage map, uint256 key)\r\n        internal\r\n        view\r\n        returns (Label)\r\n    {\r\n        return Label(uint256(_get(map._inner, bytes32(key))));\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryGet}.\r\n     */\r\n    function get(\r\n        LabelMap storage map,\r\n        uint256 key,\r\n        string memory errorMessage\r\n    ) internal view returns (Label) {\r\n        return Label(uint256(_get(map._inner, bytes32(key), errorMessage)));\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\vincent.dewit\\Documents\\Code\\IHiBO_2.0\\contracts\\EnumerableMap.sol",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/ contracts/utils/EnumerableMap.sol * Maps have the following properties: * - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. * ``` contract Example {    // Add the library methods    using EnumerableMap for EnumerableMap.LabelMap; *     // Declare a set state variable    EnumerableMap.LabelMap private myMap; } ``` \",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/EnumerableMap.sol\":\"EMap\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/EnumerableMap.sol\":{\"keccak256\":\"0xc43fb31d0a61e882876e5bd15019dc34bd7b4c47f5aa33ef389ac9ce08c27bde\",\"urls\":[\"bzzr://4130027171be2c0c414ce4294e4e9a466ed54d00ef9b4d90aa2d565e4264dd98\"]}},\"version\":1}",
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820ac4b9ca83e7cd4495c721f0a880bde519e51bad1ac9d8feed58d1bd42803f82a0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820ac4b9ca83e7cd4495c721f0a880bde519e51bad1ac9d8feed58d1bd42803f82a0029",
  "sourceMap": "770:9250:2:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "770:9250:2:-;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.5.1;\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/\n * contracts/utils/EnumerableMap.sol\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.LabelMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.LabelMap private myMap;\n * }\n * ```\n *\n */\nlibrary EMap {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Map type with\n    // bytes32 keys and values.\n    // The Map implementation uses private functions, and user-facing\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\n    // the underlying Map.\n    // This means that we can only create new EnumerableMaps for types that fit\n    // in bytes32.\n\n    struct MapEntry {\n        bytes32 _key;\n        bytes32 _value;\n    }\n\n    struct Map {\n        // Storage of map keys and values\n        MapEntry[] _entries;\n        // Position of the entry defined by a key in the `entries` array, plus 1\n        // because index 0 means a key is not in the map.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function _set(\n        Map storage map,\n        bytes32 key,\n        bytes32 value\n    ) private returns (bool) {\n        // We read and store the key's index to prevent multiple reads from the same storage slot\n        uint256 keyIndex = map._indexes[key];\n\n        if (keyIndex == 0) {\n            // Equivalent to !contains(map, key)\n            map._entries.push(MapEntry({_key: key, _value: value}));\n            // The entry is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            map._indexes[key] = map._entries.length;\n            return true;\n        } else {\n            map._entries[keyIndex - 1]._value = value;\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function _remove(Map storage map, bytes32 key) private returns (bool) {\n        // We read and store the key's index to prevent multiple reads from the same storage slot\n        uint256 keyIndex = map._indexes[key];\n\n        if (keyIndex != 0) {\n            // Equivalent to contains(map, key)\n            // To delete a key-value pair from the _entries array in O(1), we swap the entry to delete with the last one\n            // in the array, and then remove the last entry (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = keyIndex - 1;\n            uint256 lastIndex = map._entries.length - 1;\n\n            // When the entry to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            MapEntry storage lastEntry = map._entries[lastIndex];\n\n            // Move the last entry to the index where the entry to delete is\n            map._entries[toDeleteIndex] = lastEntry;\n            // Update the index for the moved entry\n            map._indexes[lastEntry._key] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved entry was stored\n            map._entries.pop();\n\n            // Delete the index for the deleted slot\n            delete map._indexes[key];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function _contains(Map storage map, bytes32 key)\n        private\n        view\n        returns (bool)\n    {\n        return map._indexes[key] != 0;\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function _length(Map storage map) private view returns (uint256) {\n        return map._entries.length;\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Map storage map, uint256 index)\n        private\n        view\n        returns (bytes32, bytes32)\n    {\n        require(\n            map._entries.length > index,\n            \"EnumerableMap: index out of bounds\"\n        );\n\n        MapEntry storage entry = map._entries[index];\n        return (entry._key, entry._value);\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function _tryGet(Map storage map, bytes32 key)\n        private\n        view\n        returns (bool, bytes32)\n    {\n        uint256 keyIndex = map._indexes[key];\n        if (keyIndex == 0) return (false, 0); // Equivalent to contains(map, key)\n        return (true, map._entries[keyIndex - 1]._value); // All indexes are 1-based\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function _get(Map storage map, bytes32 key) private view returns (bytes32) {\n        uint256 keyIndex = map._indexes[key];\n        require(keyIndex != 0, \"EnumerableMap: nonexistent key\"); // Equivalent to contains(map, key)\n        return map._entries[keyIndex - 1]._value; // All indexes are 1-based\n    }\n\n    /**\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\n     */\n    function _get(\n        Map storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) private view returns (bytes32) {\n        uint256 keyIndex = map._indexes[key];\n        require(keyIndex != 0, errorMessage); // Equivalent to contains(map, key)\n        return map._entries[keyIndex - 1]._value; // All indexes are 1-based\n    }\n\n    // LabelMap\n\n    enum Label {IN, OUT, UNDEC, BLANK, MUST_OUT}\n\n    struct LabelMap {\n        Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        LabelMap storage map,\n        uint256 key,\n        Label value\n    ) internal returns (bool) {\n        return _set(map._inner, bytes32(key), bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(LabelMap storage map, uint256 key) internal returns (bool) {\n        return _remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(LabelMap storage map, uint256 key)\n        internal\n        view\n        returns (bool)\n    {\n        return _contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(LabelMap storage map) internal view returns (uint256) {\n        return _length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(LabelMap storage map, uint256 index)\n        internal\n        view\n        returns (uint256, Label)\n    {\n        (bytes32 key, bytes32 value) = _at(map._inner, index);\n        return (uint256(key), Label(uint256(value)));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     *\n     * _Available since v3.4._\n     */\n    function tryGet(LabelMap storage map, uint256 key)\n        internal\n        view\n        returns (bool, Label)\n    {\n        (bool success, bytes32 value) = _tryGet(map._inner, bytes32(key));\n        return (success, Label(uint256(value)));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(LabelMap storage map, uint256 key)\n        internal\n        view\n        returns (Label)\n    {\n        return Label(uint256(_get(map._inner, bytes32(key))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        LabelMap storage map,\n        uint256 key,\n        string memory errorMessage\n    ) internal view returns (Label) {\n        return Label(uint256(_get(map._inner, bytes32(key), errorMessage)));\n    }\n}\n",
  "sourcePath": "/home/vincentdw/Documenten/Code/IHiBO_2.0/contracts/EnumerableMap.sol",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
  "ast": {
    "absolutePath": "project:/contracts/EnumerableMap.sol",
    "exportedSymbols": {
      "EMap": [
<<<<<<< HEAD
        3912
      ]
    },
    "id": 3913,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3397,
=======
        2444
      ]
    },
    "id": 2445,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1929,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
<<<<<<< HEAD
        "src": "35:23:4"
=======
        "src": "33:23:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
<<<<<<< HEAD
        "documentation": "@dev Library for managing an enumerable variant of Solidity's\r\nhttps://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\r\ntype.\r\n\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/\r\ncontracts/utils/EnumerableMap.sol\r\n\n * Maps have the following properties:\r\n\n * - Entries are added, removed, and checked for existence in constant time\r\n(O(1)).\r\n- Entries are enumerated in O(n). No guarantees are made on the ordering.\r\n\n * ```\r\ncontract Example {\r\n    // Add the library methods\r\n    using EnumerableMap for EnumerableMap.LabelMap;\r\n\n *     // Declare a set state variable\r\n    EnumerableMap.LabelMap private myMap;\r\n}\r\n```\r\n\n ",
        "fullyImplemented": true,
        "id": 3912,
        "linearizedBaseContracts": [
          3912
=======
        "documentation": "@dev Library for managing an enumerable variant of Solidity's\nhttps://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\ntype.\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/\ncontracts/utils/EnumerableMap.sol\n * Maps have the following properties:\n * - Entries are added, removed, and checked for existence in constant time\n(O(1)).\n- Entries are enumerated in O(n). No guarantees are made on the ordering.\n * ```\ncontract Example {\n    // Add the library methods\n    using EnumerableMap for EnumerableMap.LabelMap;\n *     // Declare a set state variable\n    EnumerableMap.LabelMap private myMap;\n}\n```\n ",
        "fullyImplemented": true,
        "id": 2444,
        "linearizedBaseContracts": [
          2444
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
        ],
        "name": "EMap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "EMap.MapEntry",
<<<<<<< HEAD
            "id": 3402,
            "members": [
              {
                "constant": false,
                "id": 3399,
                "name": "_key",
                "nodeType": "VariableDeclaration",
                "scope": 3402,
                "src": "1313:12:4",
=======
            "id": 1934,
            "members": [
              {
                "constant": false,
                "id": 1931,
                "name": "_key",
                "nodeType": "VariableDeclaration",
                "scope": 1934,
                "src": "1273:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 3398,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1313:7:4",
=======
                  "id": 1930,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1273:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 3401,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 3402,
                "src": "1336:14:4",
=======
                "id": 1933,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 1934,
                "src": "1295:14:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 3400,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1336:7:4",
=======
                  "id": 1932,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1295:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "MapEntry",
            "nodeType": "StructDefinition",
<<<<<<< HEAD
            "scope": 3912,
            "src": "1286:72:4",
=======
            "scope": 2444,
            "src": "1247:69:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "visibility": "public"
          },
          {
            "canonicalName": "EMap.Map",
<<<<<<< HEAD
            "id": 3410,
            "members": [
              {
                "constant": false,
                "id": 3405,
                "name": "_entries",
                "nodeType": "VariableDeclaration",
                "scope": 3410,
                "src": "1431:19:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage_ptr",
=======
            "id": 1942,
            "members": [
              {
                "constant": false,
                "id": 1937,
                "name": "_entries",
                "nodeType": "VariableDeclaration",
                "scope": 1942,
                "src": "1385:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "typeString": "struct EMap.MapEntry[]"
                },
                "typeName": {
                  "baseType": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3403,
                    "name": "MapEntry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3402,
                    "src": "1431:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MapEntry_$3402_storage_ptr",
                      "typeString": "struct EMap.MapEntry"
                    }
                  },
                  "id": 3404,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "1431:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage_ptr",
=======
                    "id": 1935,
                    "name": "MapEntry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1934,
                    "src": "1385:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MapEntry_$1934_storage_ptr",
                      "typeString": "struct EMap.MapEntry"
                    }
                  },
                  "id": 1936,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "1385:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.MapEntry[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 3409,
                "name": "_indexes",
                "nodeType": "VariableDeclaration",
                "scope": 3410,
                "src": "1602:36:4",
=======
                "id": 1941,
                "name": "_indexes",
                "nodeType": "VariableDeclaration",
                "scope": 1942,
                "src": "1553:36:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                  "typeString": "mapping(bytes32 => uint256)"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 3408,
                  "keyType": {
                    "id": 3406,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1610:7:4",
=======
                  "id": 1940,
                  "keyType": {
                    "id": 1938,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
<<<<<<< HEAD
                  "src": "1602:27:4",
=======
                  "src": "1553:27:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                    "typeString": "mapping(bytes32 => uint256)"
                  },
                  "valueType": {
<<<<<<< HEAD
                    "id": 3407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1621:7:4",
=======
                    "id": 1939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Map",
            "nodeType": "StructDefinition",
<<<<<<< HEAD
            "scope": 3912,
            "src": "1366:280:4",
=======
            "scope": 2444,
            "src": "1322:274:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3470,
              "nodeType": "Block",
              "src": "1998:621:4",
              "statements": [
                {
                  "assignments": [
                    3422
=======
              "id": 2002,
              "nodeType": "Block",
              "src": "1935:606:2",
              "statements": [
                {
                  "assignments": [
                    1954
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 3422,
                      "name": "keyIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 3470,
                      "src": "2108:16:4",
=======
                      "id": 1954,
                      "name": "keyIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 2002,
                      "src": "2043:16:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 3421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2108:7:4",
=======
                        "id": 1953,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2043:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 3427,
=======
                  "id": 1959,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 3423,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3412,
                        "src": "2127:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 3424,
=======
                        "id": 1955,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1944,
                        "src": "2062:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 1956,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_indexes",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3409,
                      "src": "2127:12:4",
=======
                      "referencedDeclaration": 1941,
                      "src": "2062:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 3426,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3425,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3414,
                      "src": "2140:3:4",
=======
                    "id": 1958,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1957,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1946,
                      "src": "2075:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "2127:17:4",
=======
                    "src": "2062:17:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "2108:36:4"
=======
                  "src": "2043:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 3430,
=======
                    "id": 1962,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 3428,
                      "name": "keyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3422,
                      "src": "2161:8:4",
=======
                      "id": 1960,
                      "name": "keyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1954,
                      "src": "2094:8:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 3429,
=======
                      "id": 1961,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "2173:1:4",
=======
                      "src": "2106:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "2161:13:4",
=======
                    "src": "2094:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
<<<<<<< HEAD
                    "id": 3468,
                    "nodeType": "Block",
                    "src": "2517:95:4",
=======
                    "id": 2000,
                    "nodeType": "Block",
                    "src": "2443:92:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3464,
=======
                          "id": 1996,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
<<<<<<< HEAD
                                  "id": 3455,
                                  "name": "map",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3412,
                                  "src": "2532:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                    "typeString": "struct EMap.Map storage pointer"
                                  }
                                },
                                "id": 3460,
=======
                                  "id": 1987,
                                  "name": "map",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1944,
                                  "src": "2457:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                    "typeString": "struct EMap.Map storage pointer"
                                  }
                                },
                                "id": 1992,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_entries",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 3405,
                                "src": "2532:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                                  "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                                }
                              },
                              "id": 3461,
=======
                                "referencedDeclaration": 1937,
                                "src": "2457:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                                  "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                                }
                              },
                              "id": 1993,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "indexExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
<<<<<<< HEAD
                                "id": 3459,
=======
                                "id": 1991,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
<<<<<<< HEAD
                                  "id": 3457,
                                  "name": "keyIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3422,
                                  "src": "2545:8:4",
=======
                                  "id": 1989,
                                  "name": "keyIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1954,
                                  "src": "2470:8:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
<<<<<<< HEAD
                                  "id": 3458,
=======
                                  "id": 1990,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
<<<<<<< HEAD
                                  "src": "2556:1:4",
=======
                                  "src": "2481:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
<<<<<<< HEAD
                                "src": "2545:12:4",
=======
                                "src": "2470:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "2532:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MapEntry_$3402_storage",
                                "typeString": "struct EMap.MapEntry storage ref"
                              }
                            },
                            "id": 3462,
=======
                              "src": "2457:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MapEntry_$1934_storage",
                                "typeString": "struct EMap.MapEntry storage ref"
                              }
                            },
                            "id": 1994,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "_value",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3401,
                            "src": "2532:33:4",
=======
                            "referencedDeclaration": 1933,
                            "src": "2457:33:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 3463,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3416,
                            "src": "2568:5:4",
=======
                            "id": 1995,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1948,
                            "src": "2493:5:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
<<<<<<< HEAD
                          "src": "2532:41:4",
=======
                          "src": "2457:41:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
<<<<<<< HEAD
                        "id": 3465,
                        "nodeType": "ExpressionStatement",
                        "src": "2532:41:4"
=======
                        "id": 1997,
                        "nodeType": "ExpressionStatement",
                        "src": "2457:41:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
<<<<<<< HEAD
                          "id": 3466,
=======
                          "id": 1998,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "2595:5:4",
=======
                          "src": "2519:5:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
<<<<<<< HEAD
                        "functionReturnParameters": 3420,
                        "id": 3467,
                        "nodeType": "Return",
                        "src": "2588:12:4"
                      }
                    ]
                  },
                  "id": 3469,
                  "nodeType": "IfStatement",
                  "src": "2157:455:4",
                  "trueBody": {
                    "id": 3454,
                    "nodeType": "Block",
                    "src": "2176:335:4",
=======
                        "functionReturnParameters": 1952,
                        "id": 1999,
                        "nodeType": "Return",
                        "src": "2512:12:2"
                      }
                    ]
                  },
                  "id": 2001,
                  "nodeType": "IfStatement",
                  "src": "2090:445:2",
                  "trueBody": {
                    "id": 1986,
                    "nodeType": "Block",
                    "src": "2109:328:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
<<<<<<< HEAD
                                  "id": 3437,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3414,
                                  "src": "2275:3:4",
=======
                                  "id": 1969,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1946,
                                  "src": "2206:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
<<<<<<< HEAD
                                  "id": 3438,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3416,
                                  "src": "2288:5:4",
=======
                                  "id": 1970,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1948,
                                  "src": "2219:5:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3436,
                                "name": "MapEntry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3402,
                                "src": "2259:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_MapEntry_$3402_storage_ptr_$",
                                  "typeString": "type(struct EMap.MapEntry storage pointer)"
                                }
                              },
                              "id": 3439,
=======
                                "id": 1968,
                                "name": "MapEntry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1934,
                                "src": "2190:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_MapEntry_$1934_storage_ptr_$",
                                  "typeString": "type(struct EMap.MapEntry storage pointer)"
                                }
                              },
                              "id": 1971,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "_key",
                                "_value"
                              ],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "2259:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MapEntry_$3402_memory",
=======
                              "src": "2190:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MapEntry_$1934_memory",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct EMap.MapEntry memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_struct$_MapEntry_$3402_memory",
=======
                                "typeIdentifier": "t_struct$_MapEntry_$1934_memory",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct EMap.MapEntry memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3431,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3412,
                                "src": "2241:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 3434,
=======
                                "id": 1963,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1944,
                                "src": "2172:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 1966,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_entries",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3405,
                              "src": "2241:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                                "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                              }
                            },
                            "id": 3435,
=======
                              "referencedDeclaration": 1937,
                              "src": "2172:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                                "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                              }
                            },
                            "id": 1967,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
<<<<<<< HEAD
                            "src": "2241:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_MapEntry_$3402_storage_$returns$_t_uint256_$",
                              "typeString": "function (struct EMap.MapEntry storage ref) returns (uint256)"
                            }
                          },
                          "id": 3440,
=======
                            "src": "2172:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_MapEntry_$1934_storage_$returns$_t_uint256_$",
                              "typeString": "function (struct EMap.MapEntry storage ref) returns (uint256)"
                            }
                          },
                          "id": 1972,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2241:55:4",
=======
                          "src": "2172:55:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 3441,
                        "nodeType": "ExpressionStatement",
                        "src": "2241:55:4"
=======
                        "id": 1973,
                        "nodeType": "ExpressionStatement",
                        "src": "2172:55:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3450,
=======
                          "id": 1982,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3442,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3412,
                                "src": "2434:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 3445,
=======
                                "id": 1974,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1944,
                                "src": "2362:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 1977,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_indexes",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3409,
                              "src": "2434:12:4",
=======
                              "referencedDeclaration": 1941,
                              "src": "2362:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
<<<<<<< HEAD
                            "id": 3446,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3444,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3414,
                              "src": "2447:3:4",
=======
                            "id": 1978,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1976,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1946,
                              "src": "2375:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "2434:17:4",
=======
                            "src": "2362:17:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3447,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3412,
                                "src": "2454:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 3448,
=======
                                "id": 1979,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1944,
                                "src": "2382:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 1980,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_entries",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3405,
                              "src": "2454:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                                "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                              }
                            },
                            "id": 3449,
=======
                              "referencedDeclaration": 1937,
                              "src": "2382:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                                "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                              }
                            },
                            "id": 1981,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
<<<<<<< HEAD
                            "src": "2454:19:4",
=======
                            "src": "2382:19:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "2434:39:4",
=======
                          "src": "2362:39:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 3451,
                        "nodeType": "ExpressionStatement",
                        "src": "2434:39:4"
=======
                        "id": 1983,
                        "nodeType": "ExpressionStatement",
                        "src": "2362:39:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 3452,
=======
                          "id": 1984,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "2495:4:4",
=======
                          "src": "2422:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "functionReturnParameters": 3420,
                        "id": 3453,
                        "nodeType": "Return",
                        "src": "2488:11:4"
=======
                        "functionReturnParameters": 1952,
                        "id": 1985,
                        "nodeType": "Return",
                        "src": "2415:11:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ]
                  }
                }
              ]
            },
<<<<<<< HEAD
            "documentation": "@dev Adds a key-value pair to a map, or updates the value for an existing\r\nkey. O(1).\r\n\n     * Returns true if the key was added to the map, that is if it was not\r\nalready present.\r",
            "id": 3471,
=======
            "documentation": "@dev Adds a key-value pair to a map, or updates the value for an existing\nkey. O(1).\n     * Returns true if the key was added to the map, that is if it was not\nalready present.",
            "id": 2003,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_set",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3417,
=======
              "id": 1949,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3412,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3471,
                  "src": "1906:15:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                  "id": 1944,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "1846:15:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.Map"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3411,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3410,
                    "src": "1906:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                    "id": 1943,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1942,
                    "src": "1846:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.Map"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3414,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3471,
                  "src": "1932:11:4",
=======
                  "id": 1946,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "1871:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3413,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1932:7:4",
=======
                    "id": 1945,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3416,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3471,
                  "src": "1954:13:4",
=======
                  "id": 1948,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "1892:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3415,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1954:7:4",
=======
                    "id": 1947,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1895:79:4"
            },
            "returnParameters": {
              "id": 3420,
=======
              "src": "1836:75:2"
            },
            "returnParameters": {
              "id": 1952,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3419,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3471,
                  "src": "1992:4:4",
=======
                  "id": 1951,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "1929:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3418,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:4:4",
=======
                    "id": 1950,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1991:6:4"
            },
            "scope": 3912,
            "src": "1882:737:4",
=======
              "src": "1928:6:2"
            },
            "scope": 2444,
            "src": "1823:718:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3550,
              "nodeType": "Block",
              "src": "2864:1492:4",
              "statements": [
                {
                  "assignments": [
                    3481
=======
              "id": 2082,
              "nodeType": "Block",
              "src": "2779:1459:2",
              "statements": [
                {
                  "assignments": [
                    2013
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 3481,
                      "name": "keyIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 3550,
                      "src": "2974:16:4",
=======
                      "id": 2013,
                      "name": "keyIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 2082,
                      "src": "2887:16:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 3480,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2974:7:4",
=======
                        "id": 2012,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2887:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 3486,
=======
                  "id": 2018,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 3482,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3473,
                        "src": "2993:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 3483,
=======
                        "id": 2014,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2005,
                        "src": "2906:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 2015,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_indexes",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3409,
                      "src": "2993:12:4",
=======
                      "referencedDeclaration": 1941,
                      "src": "2906:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 3485,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3484,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3475,
                      "src": "3006:3:4",
=======
                    "id": 2017,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2016,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2007,
                      "src": "2919:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "2993:17:4",
=======
                    "src": "2906:17:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "2974:36:4"
=======
                  "src": "2887:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 3489,
=======
                    "id": 2021,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 3487,
                      "name": "keyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3481,
                      "src": "3027:8:4",
=======
                      "id": 2019,
                      "name": "keyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2013,
                      "src": "2938:8:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 3488,
=======
                      "id": 2020,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3039:1:4",
=======
                      "src": "2950:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "3027:13:4",
=======
                    "src": "2938:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
<<<<<<< HEAD
                    "id": 3548,
                    "nodeType": "Block",
                    "src": "4310:39:4",
=======
                    "id": 2080,
                    "nodeType": "Block",
                    "src": "4195:37:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
<<<<<<< HEAD
                          "id": 3546,
=======
                          "id": 2078,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4332:5:4",
=======
                          "src": "4216:5:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
<<<<<<< HEAD
                        "functionReturnParameters": 3479,
                        "id": 3547,
                        "nodeType": "Return",
                        "src": "4325:12:4"
                      }
                    ]
                  },
                  "id": 3549,
                  "nodeType": "IfStatement",
                  "src": "3023:1326:4",
                  "trueBody": {
                    "id": 3545,
                    "nodeType": "Block",
                    "src": "3042:1262:4",
                    "statements": [
                      {
                        "assignments": [
                          3491
=======
                        "functionReturnParameters": 2011,
                        "id": 2079,
                        "nodeType": "Return",
                        "src": "4209:12:2"
                      }
                    ]
                  },
                  "id": 2081,
                  "nodeType": "IfStatement",
                  "src": "2934:1298:2",
                  "trueBody": {
                    "id": 2077,
                    "nodeType": "Block",
                    "src": "2953:1236:2",
                    "statements": [
                      {
                        "assignments": [
                          2023
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        ],
                        "declarations": [
                          {
                            "constant": false,
<<<<<<< HEAD
                            "id": 3491,
                            "name": "toDeleteIndex",
                            "nodeType": "VariableDeclaration",
                            "scope": 3545,
                            "src": "3401:21:4",
=======
                            "id": 2023,
                            "name": "toDeleteIndex",
                            "nodeType": "VariableDeclaration",
                            "scope": 2077,
                            "src": "3306:21:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 3490,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3401:7:4",
=======
                              "id": 2022,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3306:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
<<<<<<< HEAD
                        "id": 3495,
=======
                        "id": 2027,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
<<<<<<< HEAD
                          "id": 3494,
=======
                          "id": 2026,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 3492,
                            "name": "keyIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3481,
                            "src": "3425:8:4",
=======
                            "id": 2024,
                            "name": "keyIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2013,
                            "src": "3330:8:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
<<<<<<< HEAD
                            "id": 3493,
=======
                            "id": 2025,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "3436:1:4",
=======
                            "src": "3341:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
<<<<<<< HEAD
                          "src": "3425:12:4",
=======
                          "src": "3330:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "3401:36:4"
                      },
                      {
                        "assignments": [
                          3497
=======
                        "src": "3306:36:2"
                      },
                      {
                        "assignments": [
                          2029
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        ],
                        "declarations": [
                          {
                            "constant": false,
<<<<<<< HEAD
                            "id": 3497,
                            "name": "lastIndex",
                            "nodeType": "VariableDeclaration",
                            "scope": 3545,
                            "src": "3452:17:4",
=======
                            "id": 2029,
                            "name": "lastIndex",
                            "nodeType": "VariableDeclaration",
                            "scope": 2077,
                            "src": "3356:17:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 3496,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3452:7:4",
=======
                              "id": 2028,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3356:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
<<<<<<< HEAD
                        "id": 3503,
=======
                        "id": 2035,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
<<<<<<< HEAD
                          "id": 3502,
=======
                          "id": 2034,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3498,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3473,
                                "src": "3472:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 3499,
=======
                                "id": 2030,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2005,
                                "src": "3376:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 2031,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_entries",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3405,
                              "src": "3472:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                                "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                              }
                            },
                            "id": 3500,
=======
                              "referencedDeclaration": 1937,
                              "src": "3376:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                                "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                              }
                            },
                            "id": 2032,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
<<<<<<< HEAD
                            "src": "3472:19:4",
=======
                            "src": "3376:19:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
<<<<<<< HEAD
                            "id": 3501,
=======
                            "id": 2033,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "3494:1:4",
=======
                            "src": "3398:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
<<<<<<< HEAD
                          "src": "3472:23:4",
=======
                          "src": "3376:23:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "3452:43:4"
                      },
                      {
                        "assignments": [
                          3505
=======
                        "src": "3356:43:2"
                      },
                      {
                        "assignments": [
                          2037
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        ],
                        "declarations": [
                          {
                            "constant": false,
<<<<<<< HEAD
                            "id": 3505,
                            "name": "lastEntry",
                            "nodeType": "VariableDeclaration",
                            "scope": 3545,
                            "src": "3740:26:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MapEntry_$3402_storage_ptr",
=======
                            "id": 2037,
                            "name": "lastEntry",
                            "nodeType": "VariableDeclaration",
                            "scope": 2077,
                            "src": "3639:26:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MapEntry_$1934_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct EMap.MapEntry"
                            },
                            "typeName": {
                              "contractScope": null,
<<<<<<< HEAD
                              "id": 3504,
                              "name": "MapEntry",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 3402,
                              "src": "3740:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MapEntry_$3402_storage_ptr",
=======
                              "id": 2036,
                              "name": "MapEntry",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1934,
                              "src": "3639:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MapEntry_$1934_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeString": "struct EMap.MapEntry"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
<<<<<<< HEAD
                        "id": 3510,
=======
                        "id": 2042,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "id": 3506,
                              "name": "map",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3473,
                              "src": "3769:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                "typeString": "struct EMap.Map storage pointer"
                              }
                            },
                            "id": 3507,
=======
                              "id": 2038,
                              "name": "map",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2005,
                              "src": "3668:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                "typeString": "struct EMap.Map storage pointer"
                              }
                            },
                            "id": 2039,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_entries",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3405,
                            "src": "3769:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                              "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                            }
                          },
                          "id": 3509,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3508,
                            "name": "lastIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3497,
                            "src": "3782:9:4",
=======
                            "referencedDeclaration": 1937,
                            "src": "3668:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                              "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                            }
                          },
                          "id": 2041,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2040,
                            "name": "lastIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "3681:9:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "3769:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MapEntry_$3402_storage",
=======
                          "src": "3668:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MapEntry_$1934_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeString": "struct EMap.MapEntry storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                        "src": "3740:52:4"
=======
                        "src": "3639:52:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3517,
=======
                          "id": 2049,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3511,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3473,
                                "src": "3887:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 3514,
=======
                                "id": 2043,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2005,
                                "src": "3783:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 2046,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_entries",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3405,
                              "src": "3887:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                                "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                              }
                            },
                            "id": 3515,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3513,
                              "name": "toDeleteIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3491,
                              "src": "3900:13:4",
=======
                              "referencedDeclaration": 1937,
                              "src": "3783:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                                "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                              }
                            },
                            "id": 2047,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2045,
                              "name": "toDeleteIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2023,
                              "src": "3796:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "3887:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MapEntry_$3402_storage",
=======
                            "src": "3783:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MapEntry_$1934_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeString": "struct EMap.MapEntry storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 3516,
                            "name": "lastEntry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3505,
                            "src": "3917:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MapEntry_$3402_storage_ptr",
                              "typeString": "struct EMap.MapEntry storage pointer"
                            }
                          },
                          "src": "3887:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MapEntry_$3402_storage",
                            "typeString": "struct EMap.MapEntry storage ref"
                          }
                        },
                        "id": 3518,
                        "nodeType": "ExpressionStatement",
                        "src": "3887:39:4"
=======
                            "id": 2048,
                            "name": "lastEntry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2037,
                            "src": "3813:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MapEntry_$1934_storage_ptr",
                              "typeString": "struct EMap.MapEntry storage pointer"
                            }
                          },
                          "src": "3783:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MapEntry_$1934_storage",
                            "typeString": "struct EMap.MapEntry storage ref"
                          }
                        },
                        "id": 2050,
                        "nodeType": "ExpressionStatement",
                        "src": "3783:39:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3528,
=======
                          "id": 2060,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3519,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3473,
                                "src": "3994:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 3523,
=======
                                "id": 2051,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2005,
                                "src": "3888:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 2055,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_indexes",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3409,
                              "src": "3994:12:4",
=======
                              "referencedDeclaration": 1941,
                              "src": "3888:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
<<<<<<< HEAD
                            "id": 3524,
=======
                            "id": 2056,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3521,
                                "name": "lastEntry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3505,
                                "src": "4007:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MapEntry_$3402_storage_ptr",
                                  "typeString": "struct EMap.MapEntry storage pointer"
                                }
                              },
                              "id": 3522,
=======
                                "id": 2053,
                                "name": "lastEntry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2037,
                                "src": "3901:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MapEntry_$1934_storage_ptr",
                                  "typeString": "struct EMap.MapEntry storage pointer"
                                }
                              },
                              "id": 2054,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_key",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3399,
                              "src": "4007:14:4",
=======
                              "referencedDeclaration": 1931,
                              "src": "3901:14:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "3994:28:4",
=======
                            "src": "3888:28:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
<<<<<<< HEAD
                            "id": 3527,
=======
                            "id": 2059,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "id": 3525,
                              "name": "toDeleteIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3491,
                              "src": "4025:13:4",
=======
                              "id": 2057,
                              "name": "toDeleteIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2023,
                              "src": "3919:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
<<<<<<< HEAD
                              "id": 3526,
=======
                              "id": 2058,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "4041:1:4",
=======
                              "src": "3935:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
<<<<<<< HEAD
                            "src": "4025:17:4",
=======
                            "src": "3919:17:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "src": "3994:48:4",
=======
                          "src": "3888:48:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 3529,
                        "nodeType": "ExpressionStatement",
                        "src": "3994:48:4"
=======
                        "id": 2061,
                        "nodeType": "ExpressionStatement",
                        "src": "3888:48:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3530,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3473,
                                "src": "4151:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 3533,
=======
                                "id": 2062,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2005,
                                "src": "4042:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 2065,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_entries",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3405,
                              "src": "4151:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                                "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                              }
                            },
                            "id": 3534,
=======
                              "referencedDeclaration": 1937,
                              "src": "4042:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                                "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                              }
                            },
                            "id": 2066,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
<<<<<<< HEAD
                            "src": "4151:16:4",
=======
                            "src": "4042:16:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
<<<<<<< HEAD
                          "id": 3535,
=======
                          "id": 2067,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "4151:18:4",
=======
                          "src": "4042:18:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< HEAD
                        "id": 3536,
                        "nodeType": "ExpressionStatement",
                        "src": "4151:18:4"
=======
                        "id": 2068,
                        "nodeType": "ExpressionStatement",
                        "src": "4042:18:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3541,
=======
                          "id": 2073,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
<<<<<<< HEAD
                          "src": "4240:24:4",
=======
                          "src": "4128:24:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3537,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3473,
                                "src": "4247:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 3538,
=======
                                "id": 2069,
                                "name": "map",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2005,
                                "src": "4135:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                  "typeString": "struct EMap.Map storage pointer"
                                }
                              },
                              "id": 2070,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_indexes",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 3409,
                              "src": "4247:12:4",
=======
                              "referencedDeclaration": 1941,
                              "src": "4135:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
<<<<<<< HEAD
                            "id": 3540,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3539,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3475,
                              "src": "4260:3:4",
=======
                            "id": 2072,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2071,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2007,
                              "src": "4148:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "4247:17:4",
=======
                            "src": "4135:17:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< HEAD
                        "id": 3542,
                        "nodeType": "ExpressionStatement",
                        "src": "4240:24:4"
=======
                        "id": 2074,
                        "nodeType": "ExpressionStatement",
                        "src": "4128:24:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 3543,
=======
                          "id": 2075,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4288:4:4",
=======
                          "src": "4174:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "functionReturnParameters": 3479,
                        "id": 3544,
                        "nodeType": "Return",
                        "src": "4281:11:4"
=======
                        "functionReturnParameters": 2011,
                        "id": 2076,
                        "nodeType": "Return",
                        "src": "4167:11:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      }
                    ]
                  }
                }
              ]
            },
<<<<<<< HEAD
            "documentation": "@dev Removes a key-value pair from a map. O(1).\r\n\n     * Returns true if the key was removed from the map, that is if it was present.\r",
            "id": 3551,
=======
            "documentation": "@dev Removes a key-value pair from a map. O(1).\n     * Returns true if the key was removed from the map, that is if it was present.",
            "id": 2083,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_remove",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3476,
=======
              "id": 2008,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3473,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3551,
                  "src": "2811:15:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                  "id": 2005,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "2726:15:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.Map"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3472,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3410,
                    "src": "2811:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                    "id": 2004,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1942,
                    "src": "2726:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.Map"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3475,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3551,
                  "src": "2828:11:4",
=======
                  "id": 2007,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "2743:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3474,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:4",
=======
                    "id": 2006,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2810:30:4"
            },
            "returnParameters": {
              "id": 3479,
=======
              "src": "2725:30:2"
            },
            "returnParameters": {
              "id": 2011,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3478,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3551,
                  "src": "2858:4:4",
=======
                  "id": 2010,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "2773:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3477,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2858:4:4",
=======
                    "id": 2009,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2857:6:4"
            },
            "scope": 3912,
            "src": "2794:1562:4",
=======
              "src": "2772:6:2"
            },
            "scope": 2444,
            "src": "2709:1529:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3567,
              "nodeType": "Block",
              "src": "4549:48:4",
=======
              "id": 2099,
              "nodeType": "Block",
              "src": "4422:46:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 3565,
=======
                    "id": 2097,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3560,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3553,
                          "src": "4567:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                            "typeString": "struct EMap.Map storage pointer"
                          }
                        },
                        "id": 3561,
=======
                          "id": 2092,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2085,
                          "src": "4439:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                            "typeString": "struct EMap.Map storage pointer"
                          }
                        },
                        "id": 2093,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_indexes",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3409,
                        "src": "4567:12:4",
=======
                        "referencedDeclaration": 1941,
                        "src": "4439:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 3563,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3562,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3555,
                        "src": "4580:3:4",
=======
                      "id": 2095,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2094,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2087,
                        "src": "4452:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "4567:17:4",
=======
                      "src": "4439:17:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 3564,
=======
                      "id": 2096,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "4588:1:4",
=======
                      "src": "4460:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "4567:22:4",
=======
                    "src": "4439:22:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 3559,
                  "id": 3566,
                  "nodeType": "Return",
                  "src": "4560:29:4"
                }
              ]
            },
            "documentation": "@dev Returns true if the key is in the map. O(1).\r",
            "id": 3568,
=======
                  "functionReturnParameters": 2091,
                  "id": 2098,
                  "nodeType": "Return",
                  "src": "4432:29:2"
                }
              ]
            },
            "documentation": "@dev Returns true if the key is in the map. O(1).",
            "id": 2100,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contains",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3556,
=======
              "id": 2088,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3553,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "4459:15:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                  "id": 2085,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "4336:15:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.Map"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3552,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3410,
                    "src": "4459:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                    "id": 2084,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1942,
                    "src": "4336:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.Map"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3555,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "4476:11:4",
=======
                  "id": 2087,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "4353:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3554,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4476:7:4",
=======
                    "id": 2086,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4353:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4458:30:4"
            },
            "returnParameters": {
              "id": 3559,
=======
              "src": "4335:30:2"
            },
            "returnParameters": {
              "id": 2091,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3558,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "4538:4:4",
=======
                  "id": 2090,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "4412:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3557,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4538:4:4",
=======
                    "id": 2089,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4412:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4537:6:4"
            },
            "scope": 3912,
            "src": "4440:157:4",
=======
              "src": "4411:6:2"
            },
            "scope": 2444,
            "src": "4317:151:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3579,
              "nodeType": "Block",
              "src": "4757:45:4",
=======
              "id": 2111,
              "nodeType": "Block",
              "src": "4623:43:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 3575,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3570,
                        "src": "4775:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 3576,
=======
                        "id": 2107,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2102,
                        "src": "4640:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 2108,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_entries",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3405,
                      "src": "4775:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                        "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                      }
                    },
                    "id": 3577,
=======
                      "referencedDeclaration": 1937,
                      "src": "4640:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                        "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                      }
                    },
                    "id": 2109,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
<<<<<<< HEAD
                    "src": "4775:19:4",
=======
                    "src": "4640:19:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 3574,
                  "id": 3578,
                  "nodeType": "Return",
                  "src": "4768:26:4"
                }
              ]
            },
            "documentation": "@dev Returns the number of key-value pairs in the map. O(1).\r",
            "id": 3580,
=======
                  "functionReturnParameters": 2106,
                  "id": 2110,
                  "nodeType": "Return",
                  "src": "4633:26:2"
                }
              ]
            },
            "documentation": "@dev Returns the number of key-value pairs in the map. O(1).",
            "id": 2112,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_length",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3571,
=======
              "id": 2103,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3570,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3580,
                  "src": "4709:15:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                  "id": 2102,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2112,
                  "src": "4575:15:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.Map"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3569,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3410,
                    "src": "4709:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                    "id": 2101,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1942,
                    "src": "4575:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.Map"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4708:17:4"
            },
            "returnParameters": {
              "id": 3574,
=======
              "src": "4574:17:2"
            },
            "returnParameters": {
              "id": 2106,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3573,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3580,
                  "src": "4748:7:4",
=======
                  "id": 2105,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2112,
                  "src": "4614:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4748:7:4",
=======
                    "id": 2104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4614:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4747:9:4"
            },
            "scope": 3912,
            "src": "4692:110:4",
=======
              "src": "4613:9:2"
            },
            "scope": 2444,
            "src": "4558:108:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3613,
              "nodeType": "Block",
              "src": "5284:231:4",
=======
              "id": 2145,
              "nodeType": "Block",
              "src": "5132:223:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3596,
=======
                        "id": 2128,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "id": 3592,
                              "name": "map",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3582,
                              "src": "5317:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                "typeString": "struct EMap.Map storage pointer"
                              }
                            },
                            "id": 3593,
=======
                              "id": 2124,
                              "name": "map",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2114,
                              "src": "5163:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                "typeString": "struct EMap.Map storage pointer"
                              }
                            },
                            "id": 2125,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_entries",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3405,
                            "src": "5317:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                              "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                            }
                          },
                          "id": 3594,
=======
                            "referencedDeclaration": 1937,
                            "src": "5163:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                              "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                            }
                          },
                          "id": 2126,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "5317:19:4",
=======
                          "src": "5163:19:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3595,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3584,
                          "src": "5339:5:4",
=======
                          "id": 2127,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2116,
                          "src": "5185:5:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "5317:27:4",
=======
                        "src": "5163:27:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e6473",
<<<<<<< HEAD
                        "id": 3597,
=======
                        "id": 2129,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5359:36:4",
=======
                        "src": "5204:36:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86631030b9066a18616a068fc09fce83d18af4765cb1d2166fa475228f4db155",
                          "typeString": "literal_string \"EnumerableMap: index out of bounds\""
                        },
                        "value": "EnumerableMap: index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86631030b9066a18616a068fc09fce83d18af4765cb1d2166fa475228f4db155",
                          "typeString": "literal_string \"EnumerableMap: index out of bounds\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 3591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6545,
                        6546
                      ],
                      "referencedDeclaration": 6546,
                      "src": "5295:7:4",
=======
                      "id": 2123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2922,
                        2923
                      ],
                      "referencedDeclaration": 2923,
                      "src": "5142:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 3598,
=======
                    "id": 2130,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5295:111:4",
=======
                    "src": "5142:108:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 3599,
                  "nodeType": "ExpressionStatement",
                  "src": "5295:111:4"
                },
                {
                  "assignments": [
                    3601
=======
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "5142:108:2"
                },
                {
                  "assignments": [
                    2133
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 3601,
                      "name": "entry",
                      "nodeType": "VariableDeclaration",
                      "scope": 3613,
                      "src": "5419:22:4",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MapEntry_$3402_storage_ptr",
=======
                      "id": 2133,
                      "name": "entry",
                      "nodeType": "VariableDeclaration",
                      "scope": 2145,
                      "src": "5261:22:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MapEntry_$1934_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeString": "struct EMap.MapEntry"
                      },
                      "typeName": {
                        "contractScope": null,
<<<<<<< HEAD
                        "id": 3600,
                        "name": "MapEntry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3402,
                        "src": "5419:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MapEntry_$3402_storage_ptr",
=======
                        "id": 2132,
                        "name": "MapEntry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1934,
                        "src": "5261:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MapEntry_$1934_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.MapEntry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 3606,
=======
                  "id": 2138,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 3602,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3582,
                        "src": "5444:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 3603,
=======
                        "id": 2134,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2114,
                        "src": "5286:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 2135,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_entries",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3405,
                      "src": "5444:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                        "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                      }
                    },
                    "id": 3605,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3604,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3584,
                      "src": "5457:5:4",
=======
                      "referencedDeclaration": 1937,
                      "src": "5286:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                        "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                      }
                    },
                    "id": 2137,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2136,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2116,
                      "src": "5299:5:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "5444:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MapEntry_$3402_storage",
=======
                    "src": "5286:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MapEntry_$1934_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.MapEntry storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5419:44:4"
=======
                  "src": "5261:44:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3607,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3601,
                          "src": "5482:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MapEntry_$3402_storage_ptr",
                            "typeString": "struct EMap.MapEntry storage pointer"
                          }
                        },
                        "id": 3608,
=======
                          "id": 2139,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2133,
                          "src": "5323:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MapEntry_$1934_storage_ptr",
                            "typeString": "struct EMap.MapEntry storage pointer"
                          }
                        },
                        "id": 2140,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_key",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3399,
                        "src": "5482:10:4",
=======
                        "referencedDeclaration": 1931,
                        "src": "5323:10:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3609,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3601,
                          "src": "5494:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MapEntry_$3402_storage_ptr",
                            "typeString": "struct EMap.MapEntry storage pointer"
                          }
                        },
                        "id": 3610,
=======
                          "id": 2141,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2133,
                          "src": "5335:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MapEntry_$1934_storage_ptr",
                            "typeString": "struct EMap.MapEntry storage pointer"
                          }
                        },
                        "id": 2142,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_value",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3401,
                        "src": "5494:12:4",
=======
                        "referencedDeclaration": 1933,
                        "src": "5335:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
<<<<<<< HEAD
                    "id": 3611,
=======
                    "id": 2143,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "5481:26:4",
=======
                    "src": "5322:26:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 3590,
                  "id": 3612,
                  "nodeType": "Return",
                  "src": "5474:33:4"
                }
              ]
            },
            "documentation": "@dev Returns the key-value pair stored at position `index` in the map. O(1).\r\n\n     * Note that there are no guarantees on the ordering of entries inside the\r\narray, and it may change when more entries are added or removed.\r\n\n     * Requirements:\r\n\n     * - `index` must be strictly less than {length}.\r",
            "id": 3614,
=======
                  "functionReturnParameters": 2122,
                  "id": 2144,
                  "nodeType": "Return",
                  "src": "5315:33:2"
                }
              ]
            },
            "documentation": "@dev Returns the key-value pair stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of entries inside the\narray, and it may change when more entries are added or removed.\n     * Requirements:\n     * - `index` must be strictly less than {length}.",
            "id": 2146,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_at",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3585,
=======
              "id": 2117,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3582,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3614,
                  "src": "5180:15:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                  "id": 2114,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "5032:15:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.Map"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3581,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3410,
                    "src": "5180:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                    "id": 2113,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1942,
                    "src": "5032:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.Map"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3584,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 3614,
                  "src": "5197:13:4",
=======
                  "id": 2116,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "5049:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5197:7:4",
=======
                    "id": 2115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5049:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5179:32:4"
            },
            "returnParameters": {
              "id": 3590,
=======
              "src": "5031:32:2"
            },
            "returnParameters": {
              "id": 2122,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3587,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3614,
                  "src": "5261:7:4",
=======
                  "id": 2119,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "5110:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3586,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:7:4",
=======
                    "id": 2118,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5110:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3589,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3614,
                  "src": "5270:7:4",
=======
                  "id": 2121,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "5119:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3588,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5270:7:4",
=======
                    "id": 2120,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5119:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5260:18:4"
            },
            "scope": 3912,
            "src": "5167:348:4",
=======
              "src": "5109:18:2"
            },
            "scope": 2444,
            "src": "5019:336:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3650,
              "nodeType": "Block",
              "src": "5779:224:4",
              "statements": [
                {
                  "assignments": [
                    3626
=======
              "id": 2182,
              "nodeType": "Block",
              "src": "5609:220:2",
              "statements": [
                {
                  "assignments": [
                    2158
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 3626,
                      "name": "keyIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 3650,
                      "src": "5790:16:4",
=======
                      "id": 2158,
                      "name": "keyIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 2182,
                      "src": "5619:16:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 3625,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5790:7:4",
=======
                        "id": 2157,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5619:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 3631,
=======
                  "id": 2163,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 3627,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3616,
                        "src": "5809:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 3628,
=======
                        "id": 2159,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "5638:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 2160,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_indexes",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3409,
                      "src": "5809:12:4",
=======
                      "referencedDeclaration": 1941,
                      "src": "5638:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 3630,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3629,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3618,
                      "src": "5822:3:4",
=======
                    "id": 2162,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2161,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2150,
                      "src": "5651:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "5809:17:4",
=======
                    "src": "5638:17:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5790:36:4"
=======
                  "src": "5619:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 3634,
=======
                    "id": 2166,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 3632,
                      "name": "keyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3626,
                      "src": "5841:8:4",
=======
                      "id": 2164,
                      "name": "keyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2158,
                      "src": "5669:8:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 3633,
=======
                      "id": 2165,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "5853:1:4",
=======
                      "src": "5681:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "5841:13:4",
=======
                    "src": "5669:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
<<<<<<< HEAD
                  "id": 3639,
                  "nodeType": "IfStatement",
                  "src": "5837:36:4",
=======
                  "id": 2171,
                  "nodeType": "IfStatement",
                  "src": "5665:36:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
<<<<<<< HEAD
                          "id": 3635,
=======
                          "id": 2167,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "5864:5:4",
=======
                          "src": "5692:5:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 3636,
=======
                          "id": 2168,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "5871:1:4",
=======
                          "src": "5699:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
<<<<<<< HEAD
                      "id": 3637,
=======
                      "id": 2169,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
<<<<<<< HEAD
                      "src": "5863:10:4",
=======
                      "src": "5691:10:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                        "typeString": "tuple(bool,int_const 0)"
                      }
                    },
<<<<<<< HEAD
                    "functionReturnParameters": 3624,
                    "id": 3638,
                    "nodeType": "Return",
                    "src": "5856:17:4"
=======
                    "functionReturnParameters": 2156,
                    "id": 2170,
                    "nodeType": "Return",
                    "src": "5684:17:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
<<<<<<< HEAD
                        "id": 3640,
=======
                        "id": 2172,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5928:4:4",
=======
                        "src": "5755:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "id": 3641,
                              "name": "map",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3616,
                              "src": "5934:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                                "typeString": "struct EMap.Map storage pointer"
                              }
                            },
                            "id": 3642,
=======
                              "id": 2173,
                              "name": "map",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2148,
                              "src": "5761:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                                "typeString": "struct EMap.Map storage pointer"
                              }
                            },
                            "id": 2174,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_entries",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 3405,
                            "src": "5934:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                              "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                            }
                          },
                          "id": 3646,
=======
                            "referencedDeclaration": 1937,
                            "src": "5761:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                              "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                            }
                          },
                          "id": 2178,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "indexExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
<<<<<<< HEAD
                            "id": 3645,
=======
                            "id": 2177,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "id": 3643,
                              "name": "keyIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3626,
                              "src": "5947:8:4",
=======
                              "id": 2175,
                              "name": "keyIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2158,
                              "src": "5774:8:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
<<<<<<< HEAD
                              "id": 3644,
=======
                              "id": 2176,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "5958:1:4",
=======
                              "src": "5785:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
<<<<<<< HEAD
                            "src": "5947:12:4",
=======
                            "src": "5774:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "5934:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MapEntry_$3402_storage",
                            "typeString": "struct EMap.MapEntry storage ref"
                          }
                        },
                        "id": 3647,
=======
                          "src": "5761:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MapEntry_$1934_storage",
                            "typeString": "struct EMap.MapEntry storage ref"
                          }
                        },
                        "id": 2179,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_value",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3401,
                        "src": "5934:33:4",
=======
                        "referencedDeclaration": 1933,
                        "src": "5761:33:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
<<<<<<< HEAD
                    "id": 3648,
=======
                    "id": 2180,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "5927:41:4",
=======
                    "src": "5754:41:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
                      "typeString": "tuple(bool,bytes32)"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 3624,
                  "id": 3649,
                  "nodeType": "Return",
                  "src": "5920:48:4"
                }
              ]
            },
            "documentation": "@dev Tries to returns the value associated with `key`.  O(1).\r\nDoes not revert if `key` is not in the map.\r",
            "id": 3651,
=======
                  "functionReturnParameters": 2156,
                  "id": 2181,
                  "nodeType": "Return",
                  "src": "5747:48:2"
                }
              ]
            },
            "documentation": "@dev Tries to returns the value associated with `key`.  O(1).\nDoes not revert if `key` is not in the map.",
            "id": 2183,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_tryGet",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3619,
=======
              "id": 2151,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3616,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3651,
                  "src": "5680:15:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                  "id": 2148,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "5514:15:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.Map"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3615,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3410,
                    "src": "5680:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                    "id": 2147,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1942,
                    "src": "5514:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.Map"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3618,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3651,
                  "src": "5697:11:4",
=======
                  "id": 2150,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "5531:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3617,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5697:7:4",
=======
                    "id": 2149,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5531:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5679:30:4"
            },
            "returnParameters": {
              "id": 3624,
=======
              "src": "5513:30:2"
            },
            "returnParameters": {
              "id": 2156,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3621,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3651,
                  "src": "5759:4:4",
=======
                  "id": 2153,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "5590:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3620,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5759:4:4",
=======
                    "id": 2152,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5590:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3623,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3651,
                  "src": "5765:7:4",
=======
                  "id": 2155,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "5596:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3622,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5765:7:4",
=======
                    "id": 2154,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5596:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5758:15:4"
            },
            "scope": 3912,
            "src": "5663:340:4",
=======
              "src": "5589:15:2"
            },
            "scope": 2444,
            "src": "5497:332:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3682,
              "nodeType": "Block",
              "src": "6239:236:4",
              "statements": [
                {
                  "assignments": [
                    3661
=======
              "id": 2214,
              "nodeType": "Block",
              "src": "6056:232:2",
              "statements": [
                {
                  "assignments": [
                    2193
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 3661,
                      "name": "keyIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 3682,
                      "src": "6250:16:4",
=======
                      "id": 2193,
                      "name": "keyIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 2214,
                      "src": "6066:16:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 3660,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6250:7:4",
=======
                        "id": 2192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6066:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 3666,
=======
                  "id": 2198,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 3662,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3653,
                        "src": "6269:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 3663,
=======
                        "id": 2194,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2185,
                        "src": "6085:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 2195,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_indexes",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3409,
                      "src": "6269:12:4",
=======
                      "referencedDeclaration": 1941,
                      "src": "6085:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 3665,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3664,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3655,
                      "src": "6282:3:4",
=======
                    "id": 2197,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2196,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2187,
                      "src": "6098:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "6269:17:4",
=======
                    "src": "6085:17:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6250:36:4"
=======
                  "src": "6066:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3670,
=======
                        "id": 2202,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3668,
                          "name": "keyIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3661,
                          "src": "6305:8:4",
=======
                          "id": 2200,
                          "name": "keyIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2193,
                          "src": "6120:8:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 3669,
=======
                          "id": 2201,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "6317:1:4",
=======
                          "src": "6132:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "6305:13:4",
=======
                        "src": "6120:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579",
<<<<<<< HEAD
                        "id": 3671,
=======
                        "id": 2203,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6320:32:4",
=======
                        "src": "6135:32:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072",
                          "typeString": "literal_string \"EnumerableMap: nonexistent key\""
                        },
                        "value": "EnumerableMap: nonexistent key"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072",
                          "typeString": "literal_string \"EnumerableMap: nonexistent key\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 3667,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6545,
                        6546
                      ],
                      "referencedDeclaration": 6546,
                      "src": "6297:7:4",
=======
                      "id": 2199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2922,
                        2923
                      ],
                      "referencedDeclaration": 2923,
                      "src": "6112:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 3672,
=======
                    "id": 2204,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6297:56:4",
=======
                    "src": "6112:56:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 3673,
                  "nodeType": "ExpressionStatement",
                  "src": "6297:56:4"
=======
                  "id": 2205,
                  "nodeType": "ExpressionStatement",
                  "src": "6112:56:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3674,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3653,
                          "src": "6407:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                            "typeString": "struct EMap.Map storage pointer"
                          }
                        },
                        "id": 3675,
=======
                          "id": 2206,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2185,
                          "src": "6221:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                            "typeString": "struct EMap.Map storage pointer"
                          }
                        },
                        "id": 2207,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_entries",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3405,
                        "src": "6407:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                          "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                        }
                      },
                      "id": 3679,
=======
                        "referencedDeclaration": 1937,
                        "src": "6221:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                          "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                        }
                      },
                      "id": 2211,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3678,
=======
                        "id": 2210,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3676,
                          "name": "keyIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3661,
                          "src": "6420:8:4",
=======
                          "id": 2208,
                          "name": "keyIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2193,
                          "src": "6234:8:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 3677,
=======
                          "id": 2209,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "6431:1:4",
=======
                          "src": "6245:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
<<<<<<< HEAD
                        "src": "6420:12:4",
=======
                        "src": "6234:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "6407:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MapEntry_$3402_storage",
                        "typeString": "struct EMap.MapEntry storage ref"
                      }
                    },
                    "id": 3680,
=======
                      "src": "6221:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MapEntry_$1934_storage",
                        "typeString": "struct EMap.MapEntry storage ref"
                      }
                    },
                    "id": 2212,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 3401,
                    "src": "6407:33:4",
=======
                    "referencedDeclaration": 1933,
                    "src": "6221:33:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 3659,
                  "id": 3681,
                  "nodeType": "Return",
                  "src": "6400:40:4"
                }
              ]
            },
            "documentation": "@dev Returns the value associated with `key`.  O(1).\r\n\n     * Requirements:\r\n\n     * - `key` must be in the map.\r",
            "id": 3683,
=======
                  "functionReturnParameters": 2191,
                  "id": 2213,
                  "nodeType": "Return",
                  "src": "6214:40:2"
                }
              ]
            },
            "documentation": "@dev Returns the value associated with `key`.  O(1).\n     * Requirements:\n     * - `key` must be in the map.",
            "id": 2215,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_get",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3656,
=======
              "id": 2188,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3653,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3683,
                  "src": "6178:15:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                  "id": 2185,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2215,
                  "src": "5995:15:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.Map"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3652,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3410,
                    "src": "6178:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                    "id": 2184,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1942,
                    "src": "5995:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.Map"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3655,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3683,
                  "src": "6195:11:4",
=======
                  "id": 2187,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2215,
                  "src": "6012:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3654,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6195:7:4",
=======
                    "id": 2186,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6012:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6177:30:4"
            },
            "returnParameters": {
              "id": 3659,
=======
              "src": "5994:30:2"
            },
            "returnParameters": {
              "id": 2191,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3658,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3683,
                  "src": "6230:7:4",
=======
                  "id": 2190,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2215,
                  "src": "6047:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3657,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6230:7:4",
=======
                    "id": 2189,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6047:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6229:9:4"
            },
            "scope": 3912,
            "src": "6164:311:4",
=======
              "src": "6046:9:2"
            },
            "scope": 2444,
            "src": "5981:307:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3716,
              "nodeType": "Block",
              "src": "6902:216:4",
              "statements": [
                {
                  "assignments": [
                    3695
=======
              "id": 2248,
              "nodeType": "Block",
              "src": "6703:212:2",
              "statements": [
                {
                  "assignments": [
                    2227
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 3695,
                      "name": "keyIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 3716,
                      "src": "6913:16:4",
=======
                      "id": 2227,
                      "name": "keyIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 2248,
                      "src": "6713:16:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 3694,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6913:7:4",
=======
                        "id": 2226,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6713:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 3700,
=======
                  "id": 2232,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 3696,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3685,
                        "src": "6932:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 3697,
=======
                        "id": 2228,
                        "name": "map",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2217,
                        "src": "6732:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                          "typeString": "struct EMap.Map storage pointer"
                        }
                      },
                      "id": 2229,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_indexes",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 3409,
                      "src": "6932:12:4",
=======
                      "referencedDeclaration": 1941,
                      "src": "6732:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 3699,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3698,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3687,
                      "src": "6945:3:4",
=======
                    "id": 2231,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2230,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2219,
                      "src": "6745:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "6932:17:4",
=======
                    "src": "6732:17:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "6913:36:4"
=======
                  "src": "6713:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3704,
=======
                        "id": 2236,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3702,
                          "name": "keyIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3695,
                          "src": "6968:8:4",
=======
                          "id": 2234,
                          "name": "keyIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2227,
                          "src": "6767:8:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 3703,
=======
                          "id": 2235,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "6980:1:4",
=======
                          "src": "6779:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "6968:13:4",
=======
                        "src": "6767:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 3705,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3689,
                        "src": "6983:12:4",
=======
                        "id": 2237,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "6782:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
<<<<<<< HEAD
                      "id": 3701,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6545,
                        6546
                      ],
                      "referencedDeclaration": 6546,
                      "src": "6960:7:4",
=======
                      "id": 2233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2922,
                        2923
                      ],
                      "referencedDeclaration": 2923,
                      "src": "6759:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 3706,
=======
                    "id": 2238,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6960:36:4",
=======
                    "src": "6759:36:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 3707,
                  "nodeType": "ExpressionStatement",
                  "src": "6960:36:4"
=======
                  "id": 2239,
                  "nodeType": "ExpressionStatement",
                  "src": "6759:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3708,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3685,
                          "src": "7050:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
                            "typeString": "struct EMap.Map storage pointer"
                          }
                        },
                        "id": 3709,
=======
                          "id": 2240,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2217,
                          "src": "6848:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
                            "typeString": "struct EMap.Map storage pointer"
                          }
                        },
                        "id": 2241,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_entries",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3405,
                        "src": "7050:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MapEntry_$3402_storage_$dyn_storage",
                          "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                        }
                      },
                      "id": 3713,
=======
                        "referencedDeclaration": 1937,
                        "src": "6848:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MapEntry_$1934_storage_$dyn_storage",
                          "typeString": "struct EMap.MapEntry storage ref[] storage ref"
                        }
                      },
                      "id": 2245,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3712,
=======
                        "id": 2244,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3710,
                          "name": "keyIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3695,
                          "src": "7063:8:4",
=======
                          "id": 2242,
                          "name": "keyIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2227,
                          "src": "6861:8:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 3711,
=======
                          "id": 2243,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "7074:1:4",
=======
                          "src": "6872:1:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
<<<<<<< HEAD
                        "src": "7063:12:4",
=======
                        "src": "6861:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "7050:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MapEntry_$3402_storage",
                        "typeString": "struct EMap.MapEntry storage ref"
                      }
                    },
                    "id": 3714,
=======
                      "src": "6848:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MapEntry_$1934_storage",
                        "typeString": "struct EMap.MapEntry storage ref"
                      }
                    },
                    "id": 2246,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 3401,
                    "src": "7050:33:4",
=======
                    "referencedDeclaration": 1933,
                    "src": "6848:33:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 3693,
                  "id": 3715,
                  "nodeType": "Return",
                  "src": "7043:40:4"
                }
              ]
            },
            "documentation": "@dev Same as {_get}, with a custom error message when `key` is not in the map.\r\n\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\nmessage unnecessarily. For custom revert reasons use {_tryGet}.\r",
            "id": 3717,
=======
                  "functionReturnParameters": 2225,
                  "id": 2247,
                  "nodeType": "Return",
                  "src": "6841:40:2"
                }
              ]
            },
            "documentation": "@dev Same as {_get}, with a custom error message when `key` is not in the map.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {_tryGet}.",
            "id": 2249,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_get",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3690,
=======
              "id": 2222,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3685,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3717,
                  "src": "6789:15:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                  "id": 2217,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "6593:15:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.Map"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3684,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3410,
                    "src": "6789:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                    "id": 2216,
                    "name": "Map",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1942,
                    "src": "6593:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.Map"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3687,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3717,
                  "src": "6815:11:4",
=======
                  "id": 2219,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "6618:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3686,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6815:7:4",
=======
                    "id": 2218,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6618:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3689,
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 3717,
                  "src": "6837:26:4",
=======
                  "id": 2221,
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "6639:26:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3688,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6837:6:4",
=======
                    "id": 2220,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6639:6:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6778:92:4"
            },
            "returnParameters": {
              "id": 3693,
=======
              "src": "6583:88:2"
            },
            "returnParameters": {
              "id": 2225,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3692,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3717,
                  "src": "6893:7:4",
=======
                  "id": 2224,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "6694:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3691,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6893:7:4",
=======
                    "id": 2223,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6694:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6892:9:4"
            },
            "scope": 3912,
            "src": "6765:353:4",
=======
              "src": "6693:9:2"
            },
            "scope": 2444,
            "src": "6570:345:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "canonicalName": "EMap.Label",
<<<<<<< HEAD
            "id": 3723,
            "members": [
              {
                "id": 3718,
                "name": "IN",
                "nodeType": "EnumValue",
                "src": "7157:2:4"
              },
              {
                "id": 3719,
                "name": "OUT",
                "nodeType": "EnumValue",
                "src": "7161:3:4"
              },
              {
                "id": 3720,
                "name": "UNDEC",
                "nodeType": "EnumValue",
                "src": "7166:5:4"
              },
              {
                "id": 3721,
                "name": "BLANK",
                "nodeType": "EnumValue",
                "src": "7173:5:4"
              },
              {
                "id": 3722,
                "name": "MUST_OUT",
                "nodeType": "EnumValue",
                "src": "7180:8:4"
=======
            "id": 2255,
            "members": [
              {
                "id": 2250,
                "name": "IN",
                "nodeType": "EnumValue",
                "src": "6950:2:2"
              },
              {
                "id": 2251,
                "name": "OUT",
                "nodeType": "EnumValue",
                "src": "6954:3:2"
              },
              {
                "id": 2252,
                "name": "UNDEC",
                "nodeType": "EnumValue",
                "src": "6959:5:2"
              },
              {
                "id": 2253,
                "name": "BLANK",
                "nodeType": "EnumValue",
                "src": "6966:5:2"
              },
              {
                "id": 2254,
                "name": "MUST_OUT",
                "nodeType": "EnumValue",
                "src": "6973:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              }
            ],
            "name": "Label",
            "nodeType": "EnumDefinition",
<<<<<<< HEAD
            "src": "7145:44:4"
          },
          {
            "canonicalName": "EMap.LabelMap",
            "id": 3726,
            "members": [
              {
                "constant": false,
                "id": 3725,
                "name": "_inner",
                "nodeType": "VariableDeclaration",
                "scope": 3726,
                "src": "7224:10:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
            "src": "6938:44:2"
          },
          {
            "canonicalName": "EMap.LabelMap",
            "id": 2258,
            "members": [
              {
                "constant": false,
                "id": 2257,
                "name": "_inner",
                "nodeType": "VariableDeclaration",
                "scope": 2258,
                "src": "7014:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "typeString": "struct EMap.Map"
                },
                "typeName": {
                  "contractScope": null,
<<<<<<< HEAD
                  "id": 3724,
                  "name": "Map",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3410,
                  "src": "7224:3:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$3410_storage_ptr",
=======
                  "id": 2256,
                  "name": "Map",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1942,
                  "src": "7014:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Map_$1942_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.Map"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "LabelMap",
            "nodeType": "StructDefinition",
<<<<<<< HEAD
            "scope": 3912,
            "src": "7197:45:4",
=======
            "scope": 2444,
            "src": "6988:43:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3750,
              "nodeType": "Block",
              "src": "7597:81:4",
=======
              "id": 2282,
              "nodeType": "Block",
              "src": "7373:79:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3738,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3728,
                          "src": "7620:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 3739,
=======
                          "id": 2270,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2260,
                          "src": "7395:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 2271,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_inner",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3725,
                        "src": "7620:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                        "referencedDeclaration": 2257,
                        "src": "7395:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.Map storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 3741,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3730,
                            "src": "7640:3:4",
=======
                            "id": 2273,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2262,
                            "src": "7415:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 3740,
=======
                          "id": 2272,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "7632:7:4",
=======
                          "src": "7407:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3742,
=======
                        "id": 2274,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "7632:12:4",
=======
                        "src": "7407:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3745,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3732,
                                "src": "7662:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Label_$3723",
=======
                                "id": 2277,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2264,
                                "src": "7437:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "enum EMap.Label"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_enum$_Label_$3723",
                                  "typeString": "enum EMap.Label"
                                }
                              ],
                              "id": 3744,
=======
                                  "typeIdentifier": "t_enum$_Label_$2255",
                                  "typeString": "enum EMap.Label"
                                }
                              ],
                              "id": 2276,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "7654:7:4",
=======
                              "src": "7429:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
<<<<<<< HEAD
                            "id": 3746,
=======
                            "id": 2278,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "7654:14:4",
=======
                            "src": "7429:14:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 3743,
=======
                          "id": 2275,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "7646:7:4",
=======
                          "src": "7421:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3747,
=======
                        "id": 2279,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "7646:23:4",
=======
                        "src": "7421:23:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.Map storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
<<<<<<< HEAD
                      "id": 3737,
                      "name": "_set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3471,
                      "src": "7615:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Map_$3410_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EMap.Map storage pointer,bytes32,bytes32) returns (bool)"
                      }
                    },
                    "id": 3748,
=======
                      "id": 2269,
                      "name": "_set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2003,
                      "src": "7390:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Map_$1942_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EMap.Map storage pointer,bytes32,bytes32) returns (bool)"
                      }
                    },
                    "id": 2280,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7615:55:4",
=======
                    "src": "7390:55:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 3736,
                  "id": 3749,
                  "nodeType": "Return",
                  "src": "7608:62:4"
                }
              ]
            },
            "documentation": "@dev Adds a key-value pair to a map, or updates the value for an existing\r\nkey. O(1).\r\n\n     * Returns true if the key was added to the map, that is if it was not\r\nalready present.\r",
            "id": 3751,
=======
                  "functionReturnParameters": 2268,
                  "id": 2281,
                  "nodeType": "Return",
                  "src": "7383:62:2"
                }
              ]
            },
            "documentation": "@dev Adds a key-value pair to a map, or updates the value for an existing\nkey. O(1).\n     * Returns true if the key was added to the map, that is if it was not\nalready present.",
            "id": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3733,
=======
              "id": 2265,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3728,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3751,
                  "src": "7501:20:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                  "id": 2260,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2283,
                  "src": "7280:20:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.LabelMap"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3727,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "7501:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                    "id": 2259,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2258,
                    "src": "7280:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3730,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3751,
                  "src": "7532:11:4",
=======
                  "id": 2262,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2283,
                  "src": "7310:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7532:7:4",
=======
                    "id": 2261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7310:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3732,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3751,
                  "src": "7554:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                  "id": 2264,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2283,
                  "src": "7331:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "enum EMap.Label"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3731,
                    "name": "Label",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3723,
                    "src": "7554:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$3723",
=======
                    "id": 2263,
                    "name": "Label",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2255,
                    "src": "7331:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "enum EMap.Label"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7490:82:4"
            },
            "returnParameters": {
              "id": 3736,
=======
              "src": "7270:78:2"
            },
            "returnParameters": {
              "id": 2268,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3735,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3751,
                  "src": "7591:4:4",
=======
                  "id": 2267,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2283,
                  "src": "7367:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3734,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7591:4:4",
=======
                    "id": 2266,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7367:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7590:6:4"
            },
            "scope": 3912,
            "src": "7478:200:4",
=======
              "src": "7366:6:2"
            },
            "scope": 2444,
            "src": "7258:194:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3768,
              "nodeType": "Block",
              "src": "7919:59:4",
=======
              "id": 2300,
              "nodeType": "Block",
              "src": "7686:57:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3761,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3753,
                          "src": "7945:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 3762,
=======
                          "id": 2293,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2285,
                          "src": "7711:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 2294,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_inner",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3725,
                        "src": "7945:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                        "referencedDeclaration": 2257,
                        "src": "7711:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.Map storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 3764,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3755,
                            "src": "7965:3:4",
=======
                            "id": 2296,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2287,
                            "src": "7731:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 3763,
=======
                          "id": 2295,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "7957:7:4",
=======
                          "src": "7723:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3765,
=======
                        "id": 2297,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "7957:12:4",
=======
                        "src": "7723:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.Map storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
<<<<<<< HEAD
                      "id": 3760,
                      "name": "_remove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3551,
                      "src": "7937:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Map_$3410_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EMap.Map storage pointer,bytes32) returns (bool)"
                      }
                    },
                    "id": 3766,
=======
                      "id": 2292,
                      "name": "_remove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2083,
                      "src": "7703:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Map_$1942_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EMap.Map storage pointer,bytes32) returns (bool)"
                      }
                    },
                    "id": 2298,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7937:33:4",
=======
                    "src": "7703:33:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 3759,
                  "id": 3767,
                  "nodeType": "Return",
                  "src": "7930:40:4"
                }
              ]
            },
            "documentation": "@dev Removes a value from a set. O(1).\r\n\n     * Returns true if the key was removed from the map, that is if it was present.\r",
            "id": 3769,
=======
                  "functionReturnParameters": 2291,
                  "id": 2299,
                  "nodeType": "Return",
                  "src": "7696:40:2"
                }
              ]
            },
            "documentation": "@dev Removes a value from a set. O(1).\n     * Returns true if the key was removed from the map, that is if it was present.",
            "id": 2301,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3756,
=======
              "id": 2288,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3753,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3769,
                  "src": "7860:20:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                  "id": 2285,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "7627:20:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.LabelMap"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3752,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "7860:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                    "id": 2284,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2258,
                    "src": "7627:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3755,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3769,
                  "src": "7882:11:4",
=======
                  "id": 2287,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "7649:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7882:7:4",
=======
                    "id": 2286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7649:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7859:35:4"
            },
            "returnParameters": {
              "id": 3759,
=======
              "src": "7626:35:2"
            },
            "returnParameters": {
              "id": 2291,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3758,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3769,
                  "src": "7913:4:4",
=======
                  "id": 2290,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "7680:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3757,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7913:4:4",
=======
                    "id": 2289,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7680:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "7912:6:4"
            },
            "scope": 3912,
            "src": "7844:134:4",
=======
              "src": "7679:6:2"
            },
            "scope": 2444,
            "src": "7611:132:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3786,
              "nodeType": "Block",
              "src": "8176:61:4",
=======
              "id": 2318,
              "nodeType": "Block",
              "src": "7932:59:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3779,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3771,
                          "src": "8204:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 3780,
=======
                          "id": 2311,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2303,
                          "src": "7959:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 2312,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_inner",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3725,
                        "src": "8204:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                        "referencedDeclaration": 2257,
                        "src": "7959:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.Map storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 3782,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3773,
                            "src": "8224:3:4",
=======
                            "id": 2314,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "7979:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 3781,
=======
                          "id": 2313,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "8216:7:4",
=======
                          "src": "7971:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3783,
=======
                        "id": 2315,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "8216:12:4",
=======
                        "src": "7971:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.Map storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
<<<<<<< HEAD
                      "id": 3778,
                      "name": "_contains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3568,
                      "src": "8194:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$3410_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EMap.Map storage pointer,bytes32) view returns (bool)"
                      }
                    },
                    "id": 3784,
=======
                      "id": 2310,
                      "name": "_contains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2100,
                      "src": "7949:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1942_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EMap.Map storage pointer,bytes32) view returns (bool)"
                      }
                    },
                    "id": 2316,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8194:35:4",
=======
                    "src": "7949:35:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 3777,
                  "id": 3785,
                  "nodeType": "Return",
                  "src": "8187:42:4"
                }
              ]
            },
            "documentation": "@dev Returns true if the key is in the map. O(1).\r",
            "id": 3787,
=======
                  "functionReturnParameters": 2309,
                  "id": 2317,
                  "nodeType": "Return",
                  "src": "7942:42:2"
                }
              ]
            },
            "documentation": "@dev Returns true if the key is in the map. O(1).",
            "id": 2319,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contains",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3774,
=======
              "id": 2306,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3771,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3787,
                  "src": "8080:20:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                  "id": 2303,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "7840:20:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.LabelMap"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3770,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "8080:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                    "id": 2302,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2258,
                    "src": "7840:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3773,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3787,
                  "src": "8102:11:4",
=======
                  "id": 2305,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "7862:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8102:7:4",
=======
                    "id": 2304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7862:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8079:35:4"
            },
            "returnParameters": {
              "id": 3777,
=======
              "src": "7839:35:2"
            },
            "returnParameters": {
              "id": 2309,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3776,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3787,
                  "src": "8165:4:4",
=======
                  "id": 2308,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "7922:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3775,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8165:4:4",
=======
                    "id": 2307,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7922:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8164:6:4"
            },
            "scope": 3912,
            "src": "8062:175:4",
=======
              "src": "7921:6:2"
            },
            "scope": 2444,
            "src": "7822:169:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3799,
              "nodeType": "Block",
              "src": "8395:45:4",
=======
              "id": 2331,
              "nodeType": "Block",
              "src": "8144:43:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3795,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3789,
                          "src": "8421:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 3796,
=======
                          "id": 2327,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2321,
                          "src": "8169:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 2328,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_inner",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3725,
                        "src": "8421:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                        "referencedDeclaration": 2257,
                        "src": "8169:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.Map storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
                          "typeString": "struct EMap.Map storage ref"
                        }
                      ],
                      "id": 3794,
                      "name": "_length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3580,
                      "src": "8413:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$3410_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct EMap.Map storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 3797,
=======
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
                          "typeString": "struct EMap.Map storage ref"
                        }
                      ],
                      "id": 2326,
                      "name": "_length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2112,
                      "src": "8161:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1942_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct EMap.Map storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2329,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8413:19:4",
=======
                    "src": "8161:19:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 3793,
                  "id": 3798,
                  "nodeType": "Return",
                  "src": "8406:26:4"
                }
              ]
            },
            "documentation": "@dev Returns the number of elements in the map. O(1).\r",
            "id": 3800,
=======
                  "functionReturnParameters": 2325,
                  "id": 2330,
                  "nodeType": "Return",
                  "src": "8154:26:2"
                }
              ]
            },
            "documentation": "@dev Returns the number of elements in the map. O(1).",
            "id": 2332,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "length",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3790,
=======
              "id": 2322,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3789,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3800,
                  "src": "8341:20:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                  "id": 2321,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2332,
                  "src": "8090:20:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.LabelMap"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3788,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "8341:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                    "id": 2320,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2258,
                    "src": "8090:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8340:22:4"
            },
            "returnParameters": {
              "id": 3793,
=======
              "src": "8089:22:2"
            },
            "returnParameters": {
              "id": 2325,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3792,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3800,
                  "src": "8386:7:4",
=======
                  "id": 2324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2332,
                  "src": "8135:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8386:7:4",
=======
                    "id": 2323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8135:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8385:9:4"
            },
            "scope": 3912,
            "src": "8325:115:4",
=======
              "src": "8134:9:2"
            },
            "scope": 2444,
            "src": "8074:113:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3831,
              "nodeType": "Block",
              "src": "8908:127:4",
              "statements": [
                {
                  "assignments": [
                    3812,
                    3814
=======
              "id": 2363,
              "nodeType": "Block",
              "src": "8640:124:2",
              "statements": [
                {
                  "assignments": [
                    2344,
                    2346
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 3812,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 3831,
                      "src": "8920:11:4",
=======
                      "id": 2344,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 2363,
                      "src": "8651:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 3811,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8920:7:4",
=======
                        "id": 2343,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8651:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 3814,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 3831,
                      "src": "8933:13:4",
=======
                      "id": 2346,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 2363,
                      "src": "8664:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 3813,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8933:7:4",
=======
                        "id": 2345,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8664:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 3820,
=======
                  "id": 2352,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3816,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3802,
                          "src": "8954:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 3817,
=======
                          "id": 2348,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2334,
                          "src": "8685:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 2349,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_inner",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3725,
                        "src": "8954:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                        "referencedDeclaration": 2257,
                        "src": "8685:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.Map storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 3818,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3804,
                        "src": "8966:5:4",
=======
                        "id": 2350,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2336,
                        "src": "8697:5:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.Map storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 3815,
                      "name": "_at",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3614,
                      "src": "8950:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$3410_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (struct EMap.Map storage pointer,uint256) view returns (bytes32,bytes32)"
                      }
                    },
                    "id": 3819,
=======
                      "id": 2347,
                      "name": "_at",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2146,
                      "src": "8681:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1942_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (struct EMap.Map storage pointer,uint256) view returns (bytes32,bytes32)"
                      }
                    },
                    "id": 2351,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "8950:22:4",
=======
                    "src": "8681:22:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "8919:53:4"
=======
                  "src": "8650:53:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 3822,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3812,
                            "src": "8999:3:4",
=======
                            "id": 2354,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2344,
                            "src": "8729:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
<<<<<<< HEAD
                          "id": 3821,
=======
                          "id": 2353,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "8991:7:4",
=======
                          "src": "8721:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3823,
=======
                        "id": 2355,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "8991:12:4",
=======
                        "src": "8721:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3826,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3814,
                                "src": "9019:5:4",
=======
                                "id": 2358,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2346,
                                "src": "8749:5:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
<<<<<<< HEAD
                              "id": 3825,
=======
                              "id": 2357,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "9011:7:4",
=======
                              "src": "8741:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
<<<<<<< HEAD
                            "id": 3827,
=======
                            "id": 2359,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "9011:14:4",
=======
                            "src": "8741:14:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 3824,
                          "name": "Label",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3723,
                          "src": "9005:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
                            "typeString": "type(enum EMap.Label)"
                          }
                        },
                        "id": 3828,
=======
                          "id": 2356,
                          "name": "Label",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2255,
                          "src": "8735:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
                            "typeString": "type(enum EMap.Label)"
                          }
                        },
                        "id": 2360,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "9005:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Label_$3723",
=======
                        "src": "8735:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "enum EMap.Label"
                        }
                      }
                    ],
<<<<<<< HEAD
                    "id": 3829,
=======
                    "id": 2361,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "8990:37:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Label_$3723_$",
                      "typeString": "tuple(uint256,enum EMap.Label)"
                    }
                  },
                  "functionReturnParameters": 3810,
                  "id": 3830,
                  "nodeType": "Return",
                  "src": "8983:44:4"
                }
              ]
            },
            "documentation": "@dev Returns the element stored at position `index` in the set. O(1).\r\nNote that there are no guarantees on the ordering of values inside the\r\narray, and it may change when more values are added or removed.\r\n\n     * Requirements:\r\n\n     * - `index` must be strictly less than {length}.\r",
            "id": 3832,
=======
                    "src": "8720:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_enum$_Label_$2255_$",
                      "typeString": "tuple(uint256,enum EMap.Label)"
                    }
                  },
                  "functionReturnParameters": 2342,
                  "id": 2362,
                  "nodeType": "Return",
                  "src": "8713:44:2"
                }
              ]
            },
            "documentation": "@dev Returns the element stored at position `index` in the set. O(1).\nNote that there are no guarantees on the ordering of values inside the\narray, and it may change when more values are added or removed.\n     * Requirements:\n     * - `index` must be strictly less than {length}.",
            "id": 2364,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "at",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3805,
=======
              "id": 2337,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3802,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3832,
                  "src": "8800:20:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                  "id": 2334,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2364,
                  "src": "8536:20:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.LabelMap"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3801,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "8800:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                    "id": 2333,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2258,
                    "src": "8536:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3804,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 3832,
                  "src": "8822:13:4",
=======
                  "id": 2336,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 2364,
                  "src": "8558:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8822:7:4",
=======
                    "id": 2335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8558:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8799:37:4"
            },
            "returnParameters": {
              "id": 3810,
=======
              "src": "8535:37:2"
            },
            "returnParameters": {
              "id": 2342,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3807,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3832,
                  "src": "8887:7:4",
=======
                  "id": 2339,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2364,
                  "src": "8620:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8887:7:4",
=======
                    "id": 2338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8620:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3809,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3832,
                  "src": "8896:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                  "id": 2341,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2364,
                  "src": "8629:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "enum EMap.Label"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3808,
                    "name": "Label",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3723,
                    "src": "8896:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$3723",
=======
                    "id": 2340,
                    "name": "Label",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2255,
                    "src": "8629:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "enum EMap.Label"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "8886:16:4"
            },
            "scope": 3912,
            "src": "8788:247:4",
=======
              "src": "8619:16:2"
            },
            "scope": 2444,
            "src": "8524:240:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3863,
              "nodeType": "Block",
              "src": "9342:134:4",
              "statements": [
                {
                  "assignments": [
                    3844,
                    3846
=======
              "id": 2395,
              "nodeType": "Block",
              "src": "9059:131:2",
              "statements": [
                {
                  "assignments": [
                    2376,
                    2378
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 3844,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 3863,
                      "src": "9354:12:4",
=======
                      "id": 2376,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 2395,
                      "src": "9070:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 3843,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9354:4:4",
=======
                        "id": 2375,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9070:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 3846,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 3863,
                      "src": "9368:13:4",
=======
                      "id": 2378,
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 2395,
                      "src": "9084:13:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 3845,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9368:7:4",
=======
                        "id": 2377,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9084:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 3854,
=======
                  "id": 2386,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 3848,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3834,
                          "src": "9393:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 3849,
=======
                          "id": 2380,
                          "name": "map",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2366,
                          "src": "9109:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
                            "typeString": "struct EMap.LabelMap storage pointer"
                          }
                        },
                        "id": 2381,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_inner",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 3725,
                        "src": "9393:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                        "referencedDeclaration": 2257,
                        "src": "9109:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.Map storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 3851,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3836,
                            "src": "9413:3:4",
=======
                            "id": 2383,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2368,
                            "src": "9129:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 3850,
=======
                          "id": 2382,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "9405:7:4",
=======
                          "src": "9121:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3852,
=======
                        "id": 2384,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "9405:12:4",
=======
                        "src": "9121:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "struct EMap.Map storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
<<<<<<< HEAD
                      "id": 3847,
                      "name": "_tryGet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3651,
                      "src": "9385:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$3410_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
                        "typeString": "function (struct EMap.Map storage pointer,bytes32) view returns (bool,bytes32)"
                      }
                    },
                    "id": 3853,
=======
                      "id": 2379,
                      "name": "_tryGet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2183,
                      "src": "9101:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1942_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
                        "typeString": "function (struct EMap.Map storage pointer,bytes32) view returns (bool,bytes32)"
                      }
                    },
                    "id": 2385,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "9385:33:4",
=======
                    "src": "9101:33:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
                      "typeString": "tuple(bool,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "9353:65:4"
=======
                  "src": "9069:65:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 3855,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3844,
                        "src": "9437:7:4",
=======
                        "id": 2387,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "9152:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3858,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3846,
                                "src": "9460:5:4",
=======
                                "id": 2390,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2378,
                                "src": "9175:5:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
<<<<<<< HEAD
                              "id": 3857,
=======
                              "id": 2389,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "9452:7:4",
=======
                              "src": "9167:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
<<<<<<< HEAD
                            "id": 3859,
=======
                            "id": 2391,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "9452:14:4",
=======
                            "src": "9167:14:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
<<<<<<< HEAD
                          "id": 3856,
                          "name": "Label",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3723,
                          "src": "9446:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
                            "typeString": "type(enum EMap.Label)"
                          }
                        },
                        "id": 3860,
=======
                          "id": 2388,
                          "name": "Label",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2255,
                          "src": "9161:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
                            "typeString": "type(enum EMap.Label)"
                          }
                        },
                        "id": 2392,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "9446:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Label_$3723",
=======
                        "src": "9161:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeString": "enum EMap.Label"
                        }
                      }
                    ],
<<<<<<< HEAD
                    "id": 3861,
=======
                    "id": 2393,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "9436:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_enum$_Label_$3723_$",
                      "typeString": "tuple(bool,enum EMap.Label)"
                    }
                  },
                  "functionReturnParameters": 3842,
                  "id": 3862,
                  "nodeType": "Return",
                  "src": "9429:39:4"
                }
              ]
            },
            "documentation": "@dev Tries to returns the value associated with `key`.  O(1).\r\nDoes not revert if `key` is not in the map.\r\n\n     * _Available since v3.4._\r",
            "id": 3864,
=======
                    "src": "9151:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_enum$_Label_$2255_$",
                      "typeString": "tuple(bool,enum EMap.Label)"
                    }
                  },
                  "functionReturnParameters": 2374,
                  "id": 2394,
                  "nodeType": "Return",
                  "src": "9144:39:2"
                }
              ]
            },
            "documentation": "@dev Tries to returns the value associated with `key`.  O(1).\nDoes not revert if `key` is not in the map.\n     * _Available since v3.4._",
            "id": 2396,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryGet",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3837,
=======
              "id": 2369,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3834,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3864,
                  "src": "9239:20:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                  "id": 2366,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2396,
                  "src": "8960:20:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.LabelMap"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3833,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "9239:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                    "id": 2365,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2258,
                    "src": "8960:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3836,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3864,
                  "src": "9261:11:4",
=======
                  "id": 2368,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2396,
                  "src": "8982:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9261:7:4",
=======
                    "id": 2367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8982:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9238:35:4"
            },
            "returnParameters": {
              "id": 3842,
=======
              "src": "8959:35:2"
            },
            "returnParameters": {
              "id": 2374,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3839,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3864,
                  "src": "9324:4:4",
=======
                  "id": 2371,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2396,
                  "src": "9042:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3838,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9324:4:4",
=======
                    "id": 2370,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9042:4:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3841,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3864,
                  "src": "9330:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                  "id": 2373,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2396,
                  "src": "9048:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "enum EMap.Label"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3840,
                    "name": "Label",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3723,
                    "src": "9330:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$3723",
=======
                    "id": 2372,
                    "name": "Label",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2255,
                    "src": "9048:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "enum EMap.Label"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9323:13:4"
            },
            "scope": 3912,
            "src": "9223:253:4",
=======
              "src": "9041:13:2"
            },
            "scope": 2444,
            "src": "8944:246:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3885,
              "nodeType": "Block",
              "src": "9747:72:4",
=======
              "id": 2417,
              "nodeType": "Block",
              "src": "9448:70:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
<<<<<<< HEAD
                                  "id": 3876,
                                  "name": "map",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3866,
                                  "src": "9784:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
                                    "typeString": "struct EMap.LabelMap storage pointer"
                                  }
                                },
                                "id": 3877,
=======
                                  "id": 2408,
                                  "name": "map",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2398,
                                  "src": "9484:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
                                    "typeString": "struct EMap.LabelMap storage pointer"
                                  }
                                },
                                "id": 2409,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_inner",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 3725,
                                "src": "9784:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                "referencedDeclaration": 2257,
                                "src": "9484:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct EMap.Map storage ref"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
<<<<<<< HEAD
                                    "id": 3879,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3868,
                                    "src": "9804:3:4",
=======
                                    "id": 2411,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2400,
                                    "src": "9504:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 3878,
=======
                                  "id": 2410,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                  "src": "9796:7:4",
=======
                                  "src": "9496:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": "bytes32"
                                },
<<<<<<< HEAD
                                "id": 3880,
=======
                                "id": 2412,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "9796:12:4",
=======
                                "src": "9496:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                  "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct EMap.Map storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
<<<<<<< HEAD
                              "id": 3875,
                              "name": "_get",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                3683,
                                3717
                              ],
                              "referencedDeclaration": 3683,
                              "src": "9779:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$3410_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (struct EMap.Map storage pointer,bytes32) view returns (bytes32)"
                              }
                            },
                            "id": 3881,
=======
                              "id": 2407,
                              "name": "_get",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                2215,
                                2249
                              ],
                              "referencedDeclaration": 2215,
                              "src": "9479:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1942_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (struct EMap.Map storage pointer,bytes32) view returns (bytes32)"
                              }
                            },
                            "id": 2413,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "9779:30:4",
=======
                            "src": "9479:30:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
<<<<<<< HEAD
                          "id": 3874,
=======
                          "id": 2406,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "9771:7:4",
=======
                          "src": "9471:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3882,
=======
                        "id": 2414,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "9771:39:4",
=======
                        "src": "9471:39:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 3873,
                      "name": "Label",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3723,
                      "src": "9765:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
                        "typeString": "type(enum EMap.Label)"
                      }
                    },
                    "id": 3883,
=======
                      "id": 2405,
                      "name": "Label",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2255,
                      "src": "9465:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
                        "typeString": "type(enum EMap.Label)"
                      }
                    },
                    "id": 2415,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "9765:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$3723",
                      "typeString": "enum EMap.Label"
                    }
                  },
                  "functionReturnParameters": 3872,
                  "id": 3884,
                  "nodeType": "Return",
                  "src": "9758:53:4"
                }
              ]
            },
            "documentation": "@dev Returns the value associated with `key`.  O(1).\r\n\n     * Requirements:\r\n\n     * - `key` must be in the map.\r",
            "id": 3886,
=======
                    "src": "9465:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$2255",
                      "typeString": "enum EMap.Label"
                    }
                  },
                  "functionReturnParameters": 2404,
                  "id": 2416,
                  "nodeType": "Return",
                  "src": "9458:53:2"
                }
              ]
            },
            "documentation": "@dev Returns the value associated with `key`.  O(1).\n     * Requirements:\n     * - `key` must be in the map.",
            "id": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3869,
=======
              "id": 2401,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3866,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3886,
                  "src": "9650:20:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                  "id": 2398,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2418,
                  "src": "9355:20:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.LabelMap"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3865,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "9650:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                    "id": 2397,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2258,
                    "src": "9355:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3868,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3886,
                  "src": "9672:11:4",
=======
                  "id": 2400,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2418,
                  "src": "9377:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9672:7:4",
=======
                    "id": 2399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9377:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9649:35:4"
            },
            "returnParameters": {
              "id": 3872,
=======
              "src": "9354:35:2"
            },
            "returnParameters": {
              "id": 2404,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3871,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3886,
                  "src": "9735:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                  "id": 2403,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2418,
                  "src": "9437:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "enum EMap.Label"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3870,
                    "name": "Label",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3723,
                    "src": "9735:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$3723",
=======
                    "id": 2402,
                    "name": "Label",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2255,
                    "src": "9437:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "enum EMap.Label"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "9734:7:4"
            },
            "scope": 3912,
            "src": "9637:182:4",
=======
              "src": "9436:7:2"
            },
            "scope": 2444,
            "src": "9342:176:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 3910,
              "nodeType": "Block",
              "src": "10247:86:4",
=======
              "id": 2442,
              "nodeType": "Block",
              "src": "9934:84:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
<<<<<<< HEAD
                                  "id": 3900,
                                  "name": "map",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3888,
                                  "src": "10284:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
                                    "typeString": "struct EMap.LabelMap storage pointer"
                                  }
                                },
                                "id": 3901,
=======
                                  "id": 2432,
                                  "name": "map",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2420,
                                  "src": "9970:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
                                    "typeString": "struct EMap.LabelMap storage pointer"
                                  }
                                },
                                "id": 2433,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_inner",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 3725,
                                "src": "10284:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                "referencedDeclaration": 2257,
                                "src": "9970:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct EMap.Map storage ref"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
<<<<<<< HEAD
                                    "id": 3903,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3890,
                                    "src": "10304:3:4",
=======
                                    "id": 2435,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2422,
                                    "src": "9990:3:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 3902,
=======
                                  "id": 2434,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                  "src": "10296:7:4",
=======
                                  "src": "9982:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": "bytes32"
                                },
<<<<<<< HEAD
                                "id": 3904,
=======
                                "id": 2436,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "10296:12:4",
=======
                                "src": "9982:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
<<<<<<< HEAD
                                "id": 3905,
                                "name": "errorMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3892,
                                "src": "10310:12:4",
=======
                                "id": 2437,
                                "name": "errorMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2424,
                                "src": "9996:12:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                  "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct EMap.Map storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
<<<<<<< HEAD
                              "id": 3899,
                              "name": "_get",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                3683,
                                3717
                              ],
                              "referencedDeclaration": 3717,
                              "src": "10279:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$3410_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct EMap.Map storage pointer,bytes32,string memory) view returns (bytes32)"
                              }
                            },
                            "id": 3906,
=======
                              "id": 2431,
                              "name": "_get",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                2215,
                                2249
                              ],
                              "referencedDeclaration": 2249,
                              "src": "9965:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1942_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct EMap.Map storage pointer,bytes32,string memory) view returns (bytes32)"
                              }
                            },
                            "id": 2438,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "10279:44:4",
=======
                            "src": "9965:44:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
<<<<<<< HEAD
                          "id": 3898,
=======
                          "id": 2430,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "10271:7:4",
=======
                          "src": "9957:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3907,
=======
                        "id": 2439,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "10271:53:4",
=======
                        "src": "9957:53:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 3897,
                      "name": "Label",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3723,
                      "src": "10265:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Label_$3723_$",
                        "typeString": "type(enum EMap.Label)"
                      }
                    },
                    "id": 3908,
=======
                      "id": 2429,
                      "name": "Label",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2255,
                      "src": "9951:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Label_$2255_$",
                        "typeString": "type(enum EMap.Label)"
                      }
                    },
                    "id": 2440,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "10265:60:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$3723",
                      "typeString": "enum EMap.Label"
                    }
                  },
                  "functionReturnParameters": 3896,
                  "id": 3909,
                  "nodeType": "Return",
                  "src": "10258:67:4"
                }
              ]
            },
            "documentation": "@dev Same as {get}, with a custom error message when `key` is not in the map.\r\n\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\nmessage unnecessarily. For custom revert reasons use {tryGet}.\r",
            "id": 3911,
=======
                    "src": "9951:60:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$2255",
                      "typeString": "enum EMap.Label"
                    }
                  },
                  "functionReturnParameters": 2428,
                  "id": 2441,
                  "nodeType": "Return",
                  "src": "9944:67:2"
                }
              ]
            },
            "documentation": "@dev Same as {get}, with a custom error message when `key` is not in the map.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryGet}.",
            "id": 2443,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 3893,
=======
              "id": 2425,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3888,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 3911,
                  "src": "10130:20:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                  "id": 2420,
                  "name": "map",
                  "nodeType": "VariableDeclaration",
                  "scope": 2443,
                  "src": "9820:20:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "struct EMap.LabelMap"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3887,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3726,
                    "src": "10130:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$3726_storage_ptr",
=======
                    "id": 2419,
                    "name": "LabelMap",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2258,
                    "src": "9820:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LabelMap_$2258_storage_ptr",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "struct EMap.LabelMap"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3890,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 3911,
                  "src": "10161:11:4",
=======
                  "id": 2422,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 2443,
                  "src": "9850:11:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10161:7:4",
=======
                    "id": 2421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9850:7:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3892,
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 3911,
                  "src": "10183:26:4",
=======
                  "id": 2424,
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2443,
                  "src": "9871:26:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 3891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10183:6:4",
=======
                    "id": 2423,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9871:6:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "10119:97:4"
            },
            "returnParameters": {
              "id": 3896,
=======
              "src": "9810:93:2"
            },
            "returnParameters": {
              "id": 2428,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 3895,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3911,
                  "src": "10240:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Label_$3723",
=======
                  "id": 2427,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2443,
                  "src": "9927:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    "typeString": "enum EMap.Label"
                  },
                  "typeName": {
                    "contractScope": null,
<<<<<<< HEAD
                    "id": 3894,
                    "name": "Label",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3723,
                    "src": "10240:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$3723",
=======
                    "id": 2426,
                    "name": "Label",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2255,
                    "src": "9927:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "typeString": "enum EMap.Label"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "10239:7:4"
            },
            "scope": 3912,
            "src": "10107:226:4",
=======
              "src": "9926:7:2"
            },
            "scope": 2444,
            "src": "9798:220:2",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 3913,
        "src": "799:9537:4"
      }
    ],
    "src": "35:10303:4"
=======
        "scope": 2445,
        "src": "770:9250:2"
      }
    ],
    "src": "33:9988:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/EnumerableMap.sol",
      "exportedSymbols": {
        "EMap": [
<<<<<<< HEAD
          3912
=======
          2444
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".1"
          ]
        },
<<<<<<< HEAD
        "id": 3397,
        "name": "PragmaDirective",
        "src": "35:23:4"
=======
        "id": 1929,
        "name": "PragmaDirective",
        "src": "33:23:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "library",
<<<<<<< HEAD
          "documentation": "@dev Library for managing an enumerable variant of Solidity's\r\nhttps://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\r\ntype.\r\n\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/\r\ncontracts/utils/EnumerableMap.sol\r\n\n * Maps have the following properties:\r\n\n * - Entries are added, removed, and checked for existence in constant time\r\n(O(1)).\r\n- Entries are enumerated in O(n). No guarantees are made on the ordering.\r\n\n * ```\r\ncontract Example {\r\n    // Add the library methods\r\n    using EnumerableMap for EnumerableMap.LabelMap;\r\n\n *     // Declare a set state variable\r\n    EnumerableMap.LabelMap private myMap;\r\n}\r\n```\r\n\n ",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3912
          ],
          "name": "EMap",
          "scope": 3913
=======
          "documentation": "@dev Library for managing an enumerable variant of Solidity's\nhttps://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\ntype.\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/\ncontracts/utils/EnumerableMap.sol\n * Maps have the following properties:\n * - Entries are added, removed, and checked for existence in constant time\n(O(1)).\n- Entries are enumerated in O(n). No guarantees are made on the ordering.\n * ```\ncontract Example {\n    // Add the library methods\n    using EnumerableMap for EnumerableMap.LabelMap;\n *     // Declare a set state variable\n    EnumerableMap.LabelMap private myMap;\n}\n```\n ",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2444
          ],
          "name": "EMap",
          "scope": 2445
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "EMap.MapEntry",
              "name": "MapEntry",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_key",
<<<<<<< HEAD
                  "scope": 3402,
=======
                  "scope": 1934,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
<<<<<<< HEAD
                    "id": 3398,
                    "name": "ElementaryTypeName",
                    "src": "1313:7:4"
                  }
                ],
                "id": 3399,
                "name": "VariableDeclaration",
                "src": "1313:12:4"
=======
                    "id": 1930,
                    "name": "ElementaryTypeName",
                    "src": "1273:7:2"
                  }
                ],
                "id": 1931,
                "name": "VariableDeclaration",
                "src": "1273:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_value",
<<<<<<< HEAD
                  "scope": 3402,
=======
                  "scope": 1934,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
<<<<<<< HEAD
                    "id": 3400,
                    "name": "ElementaryTypeName",
                    "src": "1336:7:4"
                  }
                ],
                "id": 3401,
                "name": "VariableDeclaration",
                "src": "1336:14:4"
              }
            ],
            "id": 3402,
            "name": "StructDefinition",
            "src": "1286:72:4"
=======
                    "id": 1932,
                    "name": "ElementaryTypeName",
                    "src": "1295:7:2"
                  }
                ],
                "id": 1933,
                "name": "VariableDeclaration",
                "src": "1295:14:2"
              }
            ],
            "id": 1934,
            "name": "StructDefinition",
            "src": "1247:69:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "canonicalName": "EMap.Map",
              "name": "Map",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_entries",
<<<<<<< HEAD
                  "scope": 3410,
=======
                  "scope": 1942,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct EMap.MapEntry[]",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "length": null,
                      "type": "struct EMap.MapEntry[]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "MapEntry",
<<<<<<< HEAD
                          "referencedDeclaration": 3402,
                          "type": "struct EMap.MapEntry"
                        },
                        "id": 3403,
                        "name": "UserDefinedTypeName",
                        "src": "1431:8:4"
                      }
                    ],
                    "id": 3404,
                    "name": "ArrayTypeName",
                    "src": "1431:10:4"
                  }
                ],
                "id": 3405,
                "name": "VariableDeclaration",
                "src": "1431:19:4"
=======
                          "referencedDeclaration": 1934,
                          "type": "struct EMap.MapEntry"
                        },
                        "id": 1935,
                        "name": "UserDefinedTypeName",
                        "src": "1385:8:2"
                      }
                    ],
                    "id": 1936,
                    "name": "ArrayTypeName",
                    "src": "1385:10:2"
                  }
                ],
                "id": 1937,
                "name": "VariableDeclaration",
                "src": "1385:19:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "_indexes",
<<<<<<< HEAD
                  "scope": 3410,
=======
                  "scope": 1942,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "mapping(bytes32 => uint256)",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "type": "mapping(bytes32 => uint256)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3406,
                        "name": "ElementaryTypeName",
                        "src": "1610:7:4"
=======
                        "id": 1938,
                        "name": "ElementaryTypeName",
                        "src": "1561:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3407,
                        "name": "ElementaryTypeName",
                        "src": "1621:7:4"
                      }
                    ],
                    "id": 3408,
                    "name": "Mapping",
                    "src": "1602:27:4"
                  }
                ],
                "id": 3409,
                "name": "VariableDeclaration",
                "src": "1602:36:4"
              }
            ],
            "id": 3410,
            "name": "StructDefinition",
            "src": "1366:280:4"
          },
          {
            "attributes": {
              "documentation": "@dev Adds a key-value pair to a map, or updates the value for an existing\r\nkey. O(1).\r\n\n     * Returns true if the key was added to the map, that is if it was not\r\nalready present.\r",
=======
                        "id": 1939,
                        "name": "ElementaryTypeName",
                        "src": "1572:7:2"
                      }
                    ],
                    "id": 1940,
                    "name": "Mapping",
                    "src": "1553:27:2"
                  }
                ],
                "id": 1941,
                "name": "VariableDeclaration",
                "src": "1553:36:2"
              }
            ],
            "id": 1942,
            "name": "StructDefinition",
            "src": "1322:274:2"
          },
          {
            "attributes": {
              "documentation": "@dev Adds a key-value pair to a map, or updates the value for an existing\nkey. O(1).\n     * Returns true if the key was added to the map, that is if it was not\nalready present.",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_set",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3471,
=======
                      "scope": 2003,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.Map",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Map",
<<<<<<< HEAD
                          "referencedDeclaration": 3410,
                          "type": "struct EMap.Map"
                        },
                        "id": 3411,
                        "name": "UserDefinedTypeName",
                        "src": "1906:3:4"
                      }
                    ],
                    "id": 3412,
                    "name": "VariableDeclaration",
                    "src": "1906:15:4"
=======
                          "referencedDeclaration": 1942,
                          "type": "struct EMap.Map"
                        },
                        "id": 1943,
                        "name": "UserDefinedTypeName",
                        "src": "1846:3:2"
                      }
                    ],
                    "id": 1944,
                    "name": "VariableDeclaration",
                    "src": "1846:15:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3471,
=======
                      "scope": 2003,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3413,
                        "name": "ElementaryTypeName",
                        "src": "1932:7:4"
                      }
                    ],
                    "id": 3414,
                    "name": "VariableDeclaration",
                    "src": "1932:11:4"
=======
                        "id": 1945,
                        "name": "ElementaryTypeName",
                        "src": "1871:7:2"
                      }
                    ],
                    "id": 1946,
                    "name": "VariableDeclaration",
                    "src": "1871:11:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "value",
<<<<<<< HEAD
                      "scope": 3471,
=======
                      "scope": 2003,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3415,
                        "name": "ElementaryTypeName",
                        "src": "1954:7:4"
                      }
                    ],
                    "id": 3416,
                    "name": "VariableDeclaration",
                    "src": "1954:13:4"
                  }
                ],
                "id": 3417,
                "name": "ParameterList",
                "src": "1895:79:4"
=======
                        "id": 1947,
                        "name": "ElementaryTypeName",
                        "src": "1892:7:2"
                      }
                    ],
                    "id": 1948,
                    "name": "VariableDeclaration",
                    "src": "1892:13:2"
                  }
                ],
                "id": 1949,
                "name": "ParameterList",
                "src": "1836:75:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3471,
=======
                      "scope": 2003,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
<<<<<<< HEAD
                        "id": 3418,
                        "name": "ElementaryTypeName",
                        "src": "1992:4:4"
                      }
                    ],
                    "id": 3419,
                    "name": "VariableDeclaration",
                    "src": "1992:4:4"
                  }
                ],
                "id": 3420,
                "name": "ParameterList",
                "src": "1991:6:4"
=======
                        "id": 1950,
                        "name": "ElementaryTypeName",
                        "src": "1929:4:2"
                      }
                    ],
                    "id": 1951,
                    "name": "VariableDeclaration",
                    "src": "1929:4:2"
                  }
                ],
                "id": 1952,
                "name": "ParameterList",
                "src": "1928:6:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
<<<<<<< HEAD
                        3422
=======
                        1954
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "keyIndex",
<<<<<<< HEAD
                          "scope": 3470,
=======
                          "scope": 2002,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
<<<<<<< HEAD
                            "id": 3421,
                            "name": "ElementaryTypeName",
                            "src": "2108:7:4"
                          }
                        ],
                        "id": 3422,
                        "name": "VariableDeclaration",
                        "src": "2108:16:4"
=======
                            "id": 1953,
                            "name": "ElementaryTypeName",
                            "src": "2043:7:2"
                          }
                        ],
                        "id": 1954,
                        "name": "VariableDeclaration",
                        "src": "2043:16:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_indexes",
<<<<<<< HEAD
                              "referencedDeclaration": 3409,
=======
                              "referencedDeclaration": 1941,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "mapping(bytes32 => uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3412,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 3423,
                                "name": "Identifier",
                                "src": "2127:3:4"
                              }
                            ],
                            "id": 3424,
                            "name": "MemberAccess",
                            "src": "2127:12:4"
=======
                                  "referencedDeclaration": 1944,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 1955,
                                "name": "Identifier",
                                "src": "2062:3:2"
                              }
                            ],
                            "id": 1956,
                            "name": "MemberAccess",
                            "src": "2062:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3414,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 3425,
                            "name": "Identifier",
                            "src": "2140:3:4"
                          }
                        ],
                        "id": 3426,
                        "name": "IndexAccess",
                        "src": "2127:17:4"
                      }
                    ],
                    "id": 3427,
                    "name": "VariableDeclarationStatement",
                    "src": "2108:36:4"
=======
                              "referencedDeclaration": 1946,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 1957,
                            "name": "Identifier",
                            "src": "2075:3:2"
                          }
                        ],
                        "id": 1958,
                        "name": "IndexAccess",
                        "src": "2062:17:2"
                      }
                    ],
                    "id": 1959,
                    "name": "VariableDeclarationStatement",
                    "src": "2043:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3422,
                              "type": "uint256",
                              "value": "keyIndex"
                            },
                            "id": 3428,
                            "name": "Identifier",
                            "src": "2161:8:4"
=======
                              "referencedDeclaration": 1954,
                              "type": "uint256",
                              "value": "keyIndex"
                            },
                            "id": 1960,
                            "name": "Identifier",
                            "src": "2094:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
<<<<<<< HEAD
                            "id": 3429,
                            "name": "Literal",
                            "src": "2173:1:4"
                          }
                        ],
                        "id": 3430,
                        "name": "BinaryOperation",
                        "src": "2161:13:4"
=======
                            "id": 1961,
                            "name": "Literal",
                            "src": "2106:1:2"
                          }
                        ],
                        "id": 1962,
                        "name": "BinaryOperation",
                        "src": "2094:13:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
<<<<<<< HEAD
                                          "typeIdentifier": "t_struct$_MapEntry_$3402_memory",
=======
                                          "typeIdentifier": "t_struct$_MapEntry_$1934_memory",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct EMap.MapEntry memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "push",
                                      "referencedDeclaration": null,
                                      "type": "function (struct EMap.MapEntry storage ref) returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "_entries",
<<<<<<< HEAD
                                          "referencedDeclaration": 3405,
=======
                                          "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "struct EMap.MapEntry storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3412,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 3431,
                                            "name": "Identifier",
                                            "src": "2241:3:4"
                                          }
                                        ],
                                        "id": 3434,
                                        "name": "MemberAccess",
                                        "src": "2241:12:4"
                                      }
                                    ],
                                    "id": 3435,
                                    "name": "MemberAccess",
                                    "src": "2241:17:4"
=======
                                              "referencedDeclaration": 1944,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 1963,
                                            "name": "Identifier",
                                            "src": "2172:3:2"
                                          }
                                        ],
                                        "id": 1966,
                                        "name": "MemberAccess",
                                        "src": "2172:12:2"
                                      }
                                    ],
                                    "id": 1967,
                                    "name": "MemberAccess",
                                    "src": "2172:17:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": true,
                                      "lValueRequested": false,
                                      "names": [
                                        "_key",
                                        "_value"
                                      ],
                                      "type": "struct EMap.MapEntry memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3402,
                                          "type": "type(struct EMap.MapEntry storage pointer)",
                                          "value": "MapEntry"
                                        },
                                        "id": 3436,
                                        "name": "Identifier",
                                        "src": "2259:8:4"
=======
                                          "referencedDeclaration": 1934,
                                          "type": "type(struct EMap.MapEntry storage pointer)",
                                          "value": "MapEntry"
                                        },
                                        "id": 1968,
                                        "name": "Identifier",
                                        "src": "2190:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3414,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 3437,
                                        "name": "Identifier",
                                        "src": "2275:3:4"
=======
                                          "referencedDeclaration": 1946,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 1969,
                                        "name": "Identifier",
                                        "src": "2206:3:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3416,
                                          "type": "bytes32",
                                          "value": "value"
                                        },
                                        "id": 3438,
                                        "name": "Identifier",
                                        "src": "2288:5:4"
                                      }
                                    ],
                                    "id": 3439,
                                    "name": "FunctionCall",
                                    "src": "2259:36:4"
                                  }
                                ],
                                "id": 3440,
                                "name": "FunctionCall",
                                "src": "2241:55:4"
                              }
                            ],
                            "id": 3441,
                            "name": "ExpressionStatement",
                            "src": "2241:55:4"
=======
                                          "referencedDeclaration": 1948,
                                          "type": "bytes32",
                                          "value": "value"
                                        },
                                        "id": 1970,
                                        "name": "Identifier",
                                        "src": "2219:5:2"
                                      }
                                    ],
                                    "id": 1971,
                                    "name": "FunctionCall",
                                    "src": "2190:36:2"
                                  }
                                ],
                                "id": 1972,
                                "name": "FunctionCall",
                                "src": "2172:55:2"
                              }
                            ],
                            "id": 1973,
                            "name": "ExpressionStatement",
                            "src": "2172:55:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "_indexes",
<<<<<<< HEAD
                                          "referencedDeclaration": 3409,
=======
                                          "referencedDeclaration": 1941,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "mapping(bytes32 => uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3412,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 3442,
                                            "name": "Identifier",
                                            "src": "2434:3:4"
                                          }
                                        ],
                                        "id": 3445,
                                        "name": "MemberAccess",
                                        "src": "2434:12:4"
=======
                                              "referencedDeclaration": 1944,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 1974,
                                            "name": "Identifier",
                                            "src": "2362:3:2"
                                          }
                                        ],
                                        "id": 1977,
                                        "name": "MemberAccess",
                                        "src": "2362:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3414,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 3444,
                                        "name": "Identifier",
                                        "src": "2447:3:4"
                                      }
                                    ],
                                    "id": 3446,
                                    "name": "IndexAccess",
                                    "src": "2434:17:4"
=======
                                          "referencedDeclaration": 1946,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 1976,
                                        "name": "Identifier",
                                        "src": "2375:3:2"
                                      }
                                    ],
                                    "id": 1978,
                                    "name": "IndexAccess",
                                    "src": "2362:17:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "length",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "_entries",
<<<<<<< HEAD
                                          "referencedDeclaration": 3405,
=======
                                          "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "struct EMap.MapEntry storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3412,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 3447,
                                            "name": "Identifier",
                                            "src": "2454:3:4"
                                          }
                                        ],
                                        "id": 3448,
                                        "name": "MemberAccess",
                                        "src": "2454:12:4"
                                      }
                                    ],
                                    "id": 3449,
                                    "name": "MemberAccess",
                                    "src": "2454:19:4"
                                  }
                                ],
                                "id": 3450,
                                "name": "Assignment",
                                "src": "2434:39:4"
                              }
                            ],
                            "id": 3451,
                            "name": "ExpressionStatement",
                            "src": "2434:39:4"
                          },
                          {
                            "attributes": {
                              "functionReturnParameters": 3420
=======
                                              "referencedDeclaration": 1944,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 1979,
                                            "name": "Identifier",
                                            "src": "2382:3:2"
                                          }
                                        ],
                                        "id": 1980,
                                        "name": "MemberAccess",
                                        "src": "2382:12:2"
                                      }
                                    ],
                                    "id": 1981,
                                    "name": "MemberAccess",
                                    "src": "2382:19:2"
                                  }
                                ],
                                "id": 1982,
                                "name": "Assignment",
                                "src": "2362:39:2"
                              }
                            ],
                            "id": 1983,
                            "name": "ExpressionStatement",
                            "src": "2362:39:2"
                          },
                          {
                            "attributes": {
                              "functionReturnParameters": 1952
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
<<<<<<< HEAD
                                "id": 3452,
                                "name": "Literal",
                                "src": "2495:4:4"
                              }
                            ],
                            "id": 3453,
                            "name": "Return",
                            "src": "2488:11:4"
                          }
                        ],
                        "id": 3454,
                        "name": "Block",
                        "src": "2176:335:4"
=======
                                "id": 1984,
                                "name": "Literal",
                                "src": "2422:4:2"
                              }
                            ],
                            "id": 1985,
                            "name": "Return",
                            "src": "2415:11:2"
                          }
                        ],
                        "id": 1986,
                        "name": "Block",
                        "src": "2109:328:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "bytes32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "_value",
<<<<<<< HEAD
                                      "referencedDeclaration": 3401,
=======
                                      "referencedDeclaration": 1933,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "bytes32"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct EMap.MapEntry storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "_entries",
<<<<<<< HEAD
                                              "referencedDeclaration": 3405,
=======
                                              "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              "type": "struct EMap.MapEntry storage ref[] storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
<<<<<<< HEAD
                                                  "referencedDeclaration": 3412,
                                                  "type": "struct EMap.Map storage pointer",
                                                  "value": "map"
                                                },
                                                "id": 3455,
                                                "name": "Identifier",
                                                "src": "2532:3:4"
                                              }
                                            ],
                                            "id": 3460,
                                            "name": "MemberAccess",
                                            "src": "2532:12:4"
=======
                                                  "referencedDeclaration": 1944,
                                                  "type": "struct EMap.Map storage pointer",
                                                  "value": "map"
                                                },
                                                "id": 1987,
                                                "name": "Identifier",
                                                "src": "2457:3:2"
                                              }
                                            ],
                                            "id": 1992,
                                            "name": "MemberAccess",
                                            "src": "2457:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "-",
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
<<<<<<< HEAD
                                                  "referencedDeclaration": 3422,
                                                  "type": "uint256",
                                                  "value": "keyIndex"
                                                },
                                                "id": 3457,
                                                "name": "Identifier",
                                                "src": "2545:8:4"
=======
                                                  "referencedDeclaration": 1954,
                                                  "type": "uint256",
                                                  "value": "keyIndex"
                                                },
                                                "id": 1989,
                                                "name": "Identifier",
                                                "src": "2470:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "hexvalue": "31",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "subdenomination": null,
                                                  "token": "number",
                                                  "type": "int_const 1",
                                                  "value": "1"
                                                },
<<<<<<< HEAD
                                                "id": 3458,
                                                "name": "Literal",
                                                "src": "2556:1:4"
                                              }
                                            ],
                                            "id": 3459,
                                            "name": "BinaryOperation",
                                            "src": "2545:12:4"
                                          }
                                        ],
                                        "id": 3461,
                                        "name": "IndexAccess",
                                        "src": "2532:26:4"
                                      }
                                    ],
                                    "id": 3462,
                                    "name": "MemberAccess",
                                    "src": "2532:33:4"
=======
                                                "id": 1990,
                                                "name": "Literal",
                                                "src": "2481:1:2"
                                              }
                                            ],
                                            "id": 1991,
                                            "name": "BinaryOperation",
                                            "src": "2470:12:2"
                                          }
                                        ],
                                        "id": 1993,
                                        "name": "IndexAccess",
                                        "src": "2457:26:2"
                                      }
                                    ],
                                    "id": 1994,
                                    "name": "MemberAccess",
                                    "src": "2457:33:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3416,
                                      "type": "bytes32",
                                      "value": "value"
                                    },
                                    "id": 3463,
                                    "name": "Identifier",
                                    "src": "2568:5:4"
                                  }
                                ],
                                "id": 3464,
                                "name": "Assignment",
                                "src": "2532:41:4"
                              }
                            ],
                            "id": 3465,
                            "name": "ExpressionStatement",
                            "src": "2532:41:4"
                          },
                          {
                            "attributes": {
                              "functionReturnParameters": 3420
=======
                                      "referencedDeclaration": 1948,
                                      "type": "bytes32",
                                      "value": "value"
                                    },
                                    "id": 1995,
                                    "name": "Identifier",
                                    "src": "2493:5:2"
                                  }
                                ],
                                "id": 1996,
                                "name": "Assignment",
                                "src": "2457:41:2"
                              }
                            ],
                            "id": 1997,
                            "name": "ExpressionStatement",
                            "src": "2457:41:2"
                          },
                          {
                            "attributes": {
                              "functionReturnParameters": 1952
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
<<<<<<< HEAD
                                "id": 3466,
                                "name": "Literal",
                                "src": "2595:5:4"
                              }
                            ],
                            "id": 3467,
                            "name": "Return",
                            "src": "2588:12:4"
                          }
                        ],
                        "id": 3468,
                        "name": "Block",
                        "src": "2517:95:4"
                      }
                    ],
                    "id": 3469,
                    "name": "IfStatement",
                    "src": "2157:455:4"
                  }
                ],
                "id": 3470,
                "name": "Block",
                "src": "1998:621:4"
              }
            ],
            "id": 3471,
            "name": "FunctionDefinition",
            "src": "1882:737:4"
          },
          {
            "attributes": {
              "documentation": "@dev Removes a key-value pair from a map. O(1).\r\n\n     * Returns true if the key was removed from the map, that is if it was present.\r",
=======
                                "id": 1998,
                                "name": "Literal",
                                "src": "2519:5:2"
                              }
                            ],
                            "id": 1999,
                            "name": "Return",
                            "src": "2512:12:2"
                          }
                        ],
                        "id": 2000,
                        "name": "Block",
                        "src": "2443:92:2"
                      }
                    ],
                    "id": 2001,
                    "name": "IfStatement",
                    "src": "2090:445:2"
                  }
                ],
                "id": 2002,
                "name": "Block",
                "src": "1935:606:2"
              }
            ],
            "id": 2003,
            "name": "FunctionDefinition",
            "src": "1823:718:2"
          },
          {
            "attributes": {
              "documentation": "@dev Removes a key-value pair from a map. O(1).\n     * Returns true if the key was removed from the map, that is if it was present.",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_remove",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3551,
=======
                      "scope": 2083,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.Map",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Map",
<<<<<<< HEAD
                          "referencedDeclaration": 3410,
                          "type": "struct EMap.Map"
                        },
                        "id": 3472,
                        "name": "UserDefinedTypeName",
                        "src": "2811:3:4"
                      }
                    ],
                    "id": 3473,
                    "name": "VariableDeclaration",
                    "src": "2811:15:4"
=======
                          "referencedDeclaration": 1942,
                          "type": "struct EMap.Map"
                        },
                        "id": 2004,
                        "name": "UserDefinedTypeName",
                        "src": "2726:3:2"
                      }
                    ],
                    "id": 2005,
                    "name": "VariableDeclaration",
                    "src": "2726:15:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3551,
=======
                      "scope": 2083,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3474,
                        "name": "ElementaryTypeName",
                        "src": "2828:7:4"
                      }
                    ],
                    "id": 3475,
                    "name": "VariableDeclaration",
                    "src": "2828:11:4"
                  }
                ],
                "id": 3476,
                "name": "ParameterList",
                "src": "2810:30:4"
=======
                        "id": 2006,
                        "name": "ElementaryTypeName",
                        "src": "2743:7:2"
                      }
                    ],
                    "id": 2007,
                    "name": "VariableDeclaration",
                    "src": "2743:11:2"
                  }
                ],
                "id": 2008,
                "name": "ParameterList",
                "src": "2725:30:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3551,
=======
                      "scope": 2083,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
<<<<<<< HEAD
                        "id": 3477,
                        "name": "ElementaryTypeName",
                        "src": "2858:4:4"
                      }
                    ],
                    "id": 3478,
                    "name": "VariableDeclaration",
                    "src": "2858:4:4"
                  }
                ],
                "id": 3479,
                "name": "ParameterList",
                "src": "2857:6:4"
=======
                        "id": 2009,
                        "name": "ElementaryTypeName",
                        "src": "2773:4:2"
                      }
                    ],
                    "id": 2010,
                    "name": "VariableDeclaration",
                    "src": "2773:4:2"
                  }
                ],
                "id": 2011,
                "name": "ParameterList",
                "src": "2772:6:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
<<<<<<< HEAD
                        3481
=======
                        2013
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "keyIndex",
<<<<<<< HEAD
                          "scope": 3550,
=======
                          "scope": 2082,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
<<<<<<< HEAD
                            "id": 3480,
                            "name": "ElementaryTypeName",
                            "src": "2974:7:4"
                          }
                        ],
                        "id": 3481,
                        "name": "VariableDeclaration",
                        "src": "2974:16:4"
=======
                            "id": 2012,
                            "name": "ElementaryTypeName",
                            "src": "2887:7:2"
                          }
                        ],
                        "id": 2013,
                        "name": "VariableDeclaration",
                        "src": "2887:16:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_indexes",
<<<<<<< HEAD
                              "referencedDeclaration": 3409,
=======
                              "referencedDeclaration": 1941,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "mapping(bytes32 => uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3473,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 3482,
                                "name": "Identifier",
                                "src": "2993:3:4"
                              }
                            ],
                            "id": 3483,
                            "name": "MemberAccess",
                            "src": "2993:12:4"
=======
                                  "referencedDeclaration": 2005,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 2014,
                                "name": "Identifier",
                                "src": "2906:3:2"
                              }
                            ],
                            "id": 2015,
                            "name": "MemberAccess",
                            "src": "2906:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3475,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 3484,
                            "name": "Identifier",
                            "src": "3006:3:4"
                          }
                        ],
                        "id": 3485,
                        "name": "IndexAccess",
                        "src": "2993:17:4"
                      }
                    ],
                    "id": 3486,
                    "name": "VariableDeclarationStatement",
                    "src": "2974:36:4"
=======
                              "referencedDeclaration": 2007,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 2016,
                            "name": "Identifier",
                            "src": "2919:3:2"
                          }
                        ],
                        "id": 2017,
                        "name": "IndexAccess",
                        "src": "2906:17:2"
                      }
                    ],
                    "id": 2018,
                    "name": "VariableDeclarationStatement",
                    "src": "2887:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3481,
                              "type": "uint256",
                              "value": "keyIndex"
                            },
                            "id": 3487,
                            "name": "Identifier",
                            "src": "3027:8:4"
=======
                              "referencedDeclaration": 2013,
                              "type": "uint256",
                              "value": "keyIndex"
                            },
                            "id": 2019,
                            "name": "Identifier",
                            "src": "2938:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
<<<<<<< HEAD
                            "id": 3488,
                            "name": "Literal",
                            "src": "3039:1:4"
                          }
                        ],
                        "id": 3489,
                        "name": "BinaryOperation",
                        "src": "3027:13:4"
=======
                            "id": 2020,
                            "name": "Literal",
                            "src": "2950:1:2"
                          }
                        ],
                        "id": 2021,
                        "name": "BinaryOperation",
                        "src": "2938:13:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
<<<<<<< HEAD
                                3491
=======
                                2023
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "toDeleteIndex",
<<<<<<< HEAD
                                  "scope": 3545,
=======
                                  "scope": 2077,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
<<<<<<< HEAD
                                    "id": 3490,
                                    "name": "ElementaryTypeName",
                                    "src": "3401:7:4"
                                  }
                                ],
                                "id": 3491,
                                "name": "VariableDeclaration",
                                "src": "3401:21:4"
=======
                                    "id": 2022,
                                    "name": "ElementaryTypeName",
                                    "src": "3306:7:2"
                                  }
                                ],
                                "id": 2023,
                                "name": "VariableDeclaration",
                                "src": "3306:21:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "-",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3481,
                                      "type": "uint256",
                                      "value": "keyIndex"
                                    },
                                    "id": 3492,
                                    "name": "Identifier",
                                    "src": "3425:8:4"
=======
                                      "referencedDeclaration": 2013,
                                      "type": "uint256",
                                      "value": "keyIndex"
                                    },
                                    "id": 2024,
                                    "name": "Identifier",
                                    "src": "3330:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
<<<<<<< HEAD
                                    "id": 3493,
                                    "name": "Literal",
                                    "src": "3436:1:4"
                                  }
                                ],
                                "id": 3494,
                                "name": "BinaryOperation",
                                "src": "3425:12:4"
                              }
                            ],
                            "id": 3495,
                            "name": "VariableDeclarationStatement",
                            "src": "3401:36:4"
=======
                                    "id": 2025,
                                    "name": "Literal",
                                    "src": "3341:1:2"
                                  }
                                ],
                                "id": 2026,
                                "name": "BinaryOperation",
                                "src": "3330:12:2"
                              }
                            ],
                            "id": 2027,
                            "name": "VariableDeclarationStatement",
                            "src": "3306:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
<<<<<<< HEAD
                                3497
=======
                                2029
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "lastIndex",
<<<<<<< HEAD
                                  "scope": 3545,
=======
                                  "scope": 2077,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
<<<<<<< HEAD
                                    "id": 3496,
                                    "name": "ElementaryTypeName",
                                    "src": "3452:7:4"
                                  }
                                ],
                                "id": 3497,
                                "name": "VariableDeclaration",
                                "src": "3452:17:4"
=======
                                    "id": 2028,
                                    "name": "ElementaryTypeName",
                                    "src": "3356:7:2"
                                  }
                                ],
                                "id": 2029,
                                "name": "VariableDeclaration",
                                "src": "3356:17:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "-",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "length",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "_entries",
<<<<<<< HEAD
                                          "referencedDeclaration": 3405,
=======
                                          "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "struct EMap.MapEntry storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3473,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 3498,
                                            "name": "Identifier",
                                            "src": "3472:3:4"
                                          }
                                        ],
                                        "id": 3499,
                                        "name": "MemberAccess",
                                        "src": "3472:12:4"
                                      }
                                    ],
                                    "id": 3500,
                                    "name": "MemberAccess",
                                    "src": "3472:19:4"
=======
                                              "referencedDeclaration": 2005,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 2030,
                                            "name": "Identifier",
                                            "src": "3376:3:2"
                                          }
                                        ],
                                        "id": 2031,
                                        "name": "MemberAccess",
                                        "src": "3376:12:2"
                                      }
                                    ],
                                    "id": 2032,
                                    "name": "MemberAccess",
                                    "src": "3376:19:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
<<<<<<< HEAD
                                    "id": 3501,
                                    "name": "Literal",
                                    "src": "3494:1:4"
                                  }
                                ],
                                "id": 3502,
                                "name": "BinaryOperation",
                                "src": "3472:23:4"
                              }
                            ],
                            "id": 3503,
                            "name": "VariableDeclarationStatement",
                            "src": "3452:43:4"
=======
                                    "id": 2033,
                                    "name": "Literal",
                                    "src": "3398:1:2"
                                  }
                                ],
                                "id": 2034,
                                "name": "BinaryOperation",
                                "src": "3376:23:2"
                              }
                            ],
                            "id": 2035,
                            "name": "VariableDeclarationStatement",
                            "src": "3356:43:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "assignments": [
<<<<<<< HEAD
                                3505
=======
                                2037
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "lastEntry",
<<<<<<< HEAD
                                  "scope": 3545,
=======
                                  "scope": 2077,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct EMap.MapEntry",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "MapEntry",
<<<<<<< HEAD
                                      "referencedDeclaration": 3402,
                                      "type": "struct EMap.MapEntry"
                                    },
                                    "id": 3504,
                                    "name": "UserDefinedTypeName",
                                    "src": "3740:8:4"
                                  }
                                ],
                                "id": 3505,
                                "name": "VariableDeclaration",
                                "src": "3740:26:4"
=======
                                      "referencedDeclaration": 1934,
                                      "type": "struct EMap.MapEntry"
                                    },
                                    "id": 2036,
                                    "name": "UserDefinedTypeName",
                                    "src": "3639:8:2"
                                  }
                                ],
                                "id": 2037,
                                "name": "VariableDeclaration",
                                "src": "3639:26:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EMap.MapEntry storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "_entries",
<<<<<<< HEAD
                                      "referencedDeclaration": 3405,
=======
                                      "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct EMap.MapEntry storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3473,
                                          "type": "struct EMap.Map storage pointer",
                                          "value": "map"
                                        },
                                        "id": 3506,
                                        "name": "Identifier",
                                        "src": "3769:3:4"
                                      }
                                    ],
                                    "id": 3507,
                                    "name": "MemberAccess",
                                    "src": "3769:12:4"
=======
                                          "referencedDeclaration": 2005,
                                          "type": "struct EMap.Map storage pointer",
                                          "value": "map"
                                        },
                                        "id": 2038,
                                        "name": "Identifier",
                                        "src": "3668:3:2"
                                      }
                                    ],
                                    "id": 2039,
                                    "name": "MemberAccess",
                                    "src": "3668:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3497,
                                      "type": "uint256",
                                      "value": "lastIndex"
                                    },
                                    "id": 3508,
                                    "name": "Identifier",
                                    "src": "3782:9:4"
                                  }
                                ],
                                "id": 3509,
                                "name": "IndexAccess",
                                "src": "3769:23:4"
                              }
                            ],
                            "id": 3510,
                            "name": "VariableDeclarationStatement",
                            "src": "3740:52:4"
=======
                                      "referencedDeclaration": 2029,
                                      "type": "uint256",
                                      "value": "lastIndex"
                                    },
                                    "id": 2040,
                                    "name": "Identifier",
                                    "src": "3681:9:2"
                                  }
                                ],
                                "id": 2041,
                                "name": "IndexAccess",
                                "src": "3668:23:2"
                              }
                            ],
                            "id": 2042,
                            "name": "VariableDeclarationStatement",
                            "src": "3639:52:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "struct EMap.MapEntry storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "struct EMap.MapEntry storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "_entries",
<<<<<<< HEAD
                                          "referencedDeclaration": 3405,
=======
                                          "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "struct EMap.MapEntry storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3473,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 3511,
                                            "name": "Identifier",
                                            "src": "3887:3:4"
                                          }
                                        ],
                                        "id": 3514,
                                        "name": "MemberAccess",
                                        "src": "3887:12:4"
=======
                                              "referencedDeclaration": 2005,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 2043,
                                            "name": "Identifier",
                                            "src": "3783:3:2"
                                          }
                                        ],
                                        "id": 2046,
                                        "name": "MemberAccess",
                                        "src": "3783:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3491,
                                          "type": "uint256",
                                          "value": "toDeleteIndex"
                                        },
                                        "id": 3513,
                                        "name": "Identifier",
                                        "src": "3900:13:4"
                                      }
                                    ],
                                    "id": 3515,
                                    "name": "IndexAccess",
                                    "src": "3887:27:4"
=======
                                          "referencedDeclaration": 2023,
                                          "type": "uint256",
                                          "value": "toDeleteIndex"
                                        },
                                        "id": 2045,
                                        "name": "Identifier",
                                        "src": "3796:13:2"
                                      }
                                    ],
                                    "id": 2047,
                                    "name": "IndexAccess",
                                    "src": "3783:27:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3505,
                                      "type": "struct EMap.MapEntry storage pointer",
                                      "value": "lastEntry"
                                    },
                                    "id": 3516,
                                    "name": "Identifier",
                                    "src": "3917:9:4"
                                  }
                                ],
                                "id": 3517,
                                "name": "Assignment",
                                "src": "3887:39:4"
                              }
                            ],
                            "id": 3518,
                            "name": "ExpressionStatement",
                            "src": "3887:39:4"
=======
                                      "referencedDeclaration": 2037,
                                      "type": "struct EMap.MapEntry storage pointer",
                                      "value": "lastEntry"
                                    },
                                    "id": 2048,
                                    "name": "Identifier",
                                    "src": "3813:9:2"
                                  }
                                ],
                                "id": 2049,
                                "name": "Assignment",
                                "src": "3783:39:2"
                              }
                            ],
                            "id": 2050,
                            "name": "ExpressionStatement",
                            "src": "3783:39:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "_indexes",
<<<<<<< HEAD
                                          "referencedDeclaration": 3409,
=======
                                          "referencedDeclaration": 1941,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "mapping(bytes32 => uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3473,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 3519,
                                            "name": "Identifier",
                                            "src": "3994:3:4"
                                          }
                                        ],
                                        "id": 3523,
                                        "name": "MemberAccess",
                                        "src": "3994:12:4"
=======
                                              "referencedDeclaration": 2005,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 2051,
                                            "name": "Identifier",
                                            "src": "3888:3:2"
                                          }
                                        ],
                                        "id": 2055,
                                        "name": "MemberAccess",
                                        "src": "3888:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "_key",
<<<<<<< HEAD
                                          "referencedDeclaration": 3399,
=======
                                          "referencedDeclaration": 1931,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "bytes32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3505,
                                              "type": "struct EMap.MapEntry storage pointer",
                                              "value": "lastEntry"
                                            },
                                            "id": 3521,
                                            "name": "Identifier",
                                            "src": "4007:9:4"
                                          }
                                        ],
                                        "id": 3522,
                                        "name": "MemberAccess",
                                        "src": "4007:14:4"
                                      }
                                    ],
                                    "id": 3524,
                                    "name": "IndexAccess",
                                    "src": "3994:28:4"
=======
                                              "referencedDeclaration": 2037,
                                              "type": "struct EMap.MapEntry storage pointer",
                                              "value": "lastEntry"
                                            },
                                            "id": 2053,
                                            "name": "Identifier",
                                            "src": "3901:9:2"
                                          }
                                        ],
                                        "id": 2054,
                                        "name": "MemberAccess",
                                        "src": "3901:14:2"
                                      }
                                    ],
                                    "id": 2056,
                                    "name": "IndexAccess",
                                    "src": "3888:28:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "+",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3491,
                                          "type": "uint256",
                                          "value": "toDeleteIndex"
                                        },
                                        "id": 3525,
                                        "name": "Identifier",
                                        "src": "4025:13:4"
=======
                                          "referencedDeclaration": 2023,
                                          "type": "uint256",
                                          "value": "toDeleteIndex"
                                        },
                                        "id": 2057,
                                        "name": "Identifier",
                                        "src": "3919:13:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
<<<<<<< HEAD
                                        "id": 3526,
                                        "name": "Literal",
                                        "src": "4041:1:4"
                                      }
                                    ],
                                    "id": 3527,
                                    "name": "BinaryOperation",
                                    "src": "4025:17:4"
                                  }
                                ],
                                "id": 3528,
                                "name": "Assignment",
                                "src": "3994:48:4"
                              }
                            ],
                            "id": 3529,
                            "name": "ExpressionStatement",
                            "src": "3994:48:4"
=======
                                        "id": 2058,
                                        "name": "Literal",
                                        "src": "3935:1:2"
                                      }
                                    ],
                                    "id": 2059,
                                    "name": "BinaryOperation",
                                    "src": "3919:17:2"
                                  }
                                ],
                                "id": 2060,
                                "name": "Assignment",
                                "src": "3888:48:2"
                              }
                            ],
                            "id": 2061,
                            "name": "ExpressionStatement",
                            "src": "3888:48:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "pop",
                                      "referencedDeclaration": null,
                                      "type": "function ()"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "_entries",
<<<<<<< HEAD
                                          "referencedDeclaration": 3405,
=======
                                          "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "struct EMap.MapEntry storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3473,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 3530,
                                            "name": "Identifier",
                                            "src": "4151:3:4"
                                          }
                                        ],
                                        "id": 3533,
                                        "name": "MemberAccess",
                                        "src": "4151:12:4"
                                      }
                                    ],
                                    "id": 3534,
                                    "name": "MemberAccess",
                                    "src": "4151:16:4"
                                  }
                                ],
                                "id": 3535,
                                "name": "FunctionCall",
                                "src": "4151:18:4"
                              }
                            ],
                            "id": 3536,
                            "name": "ExpressionStatement",
                            "src": "4151:18:4"
=======
                                              "referencedDeclaration": 2005,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 2062,
                                            "name": "Identifier",
                                            "src": "4042:3:2"
                                          }
                                        ],
                                        "id": 2065,
                                        "name": "MemberAccess",
                                        "src": "4042:12:2"
                                      }
                                    ],
                                    "id": 2066,
                                    "name": "MemberAccess",
                                    "src": "4042:16:2"
                                  }
                                ],
                                "id": 2067,
                                "name": "FunctionCall",
                                "src": "4042:18:2"
                              }
                            ],
                            "id": 2068,
                            "name": "ExpressionStatement",
                            "src": "4042:18:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "delete",
                                  "prefix": true,
                                  "type": "tuple()"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "_indexes",
<<<<<<< HEAD
                                          "referencedDeclaration": 3409,
=======
                                          "referencedDeclaration": 1941,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "type": "mapping(bytes32 => uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
<<<<<<< HEAD
                                              "referencedDeclaration": 3473,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 3537,
                                            "name": "Identifier",
                                            "src": "4247:3:4"
                                          }
                                        ],
                                        "id": 3538,
                                        "name": "MemberAccess",
                                        "src": "4247:12:4"
=======
                                              "referencedDeclaration": 2005,
                                              "type": "struct EMap.Map storage pointer",
                                              "value": "map"
                                            },
                                            "id": 2069,
                                            "name": "Identifier",
                                            "src": "4135:3:2"
                                          }
                                        ],
                                        "id": 2070,
                                        "name": "MemberAccess",
                                        "src": "4135:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3475,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 3539,
                                        "name": "Identifier",
                                        "src": "4260:3:4"
                                      }
                                    ],
                                    "id": 3540,
                                    "name": "IndexAccess",
                                    "src": "4247:17:4"
                                  }
                                ],
                                "id": 3541,
                                "name": "UnaryOperation",
                                "src": "4240:24:4"
                              }
                            ],
                            "id": 3542,
                            "name": "ExpressionStatement",
                            "src": "4240:24:4"
                          },
                          {
                            "attributes": {
                              "functionReturnParameters": 3479
=======
                                          "referencedDeclaration": 2007,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 2071,
                                        "name": "Identifier",
                                        "src": "4148:3:2"
                                      }
                                    ],
                                    "id": 2072,
                                    "name": "IndexAccess",
                                    "src": "4135:17:2"
                                  }
                                ],
                                "id": 2073,
                                "name": "UnaryOperation",
                                "src": "4128:24:2"
                              }
                            ],
                            "id": 2074,
                            "name": "ExpressionStatement",
                            "src": "4128:24:2"
                          },
                          {
                            "attributes": {
                              "functionReturnParameters": 2011
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
<<<<<<< HEAD
                                "id": 3543,
                                "name": "Literal",
                                "src": "4288:4:4"
                              }
                            ],
                            "id": 3544,
                            "name": "Return",
                            "src": "4281:11:4"
                          }
                        ],
                        "id": 3545,
                        "name": "Block",
                        "src": "3042:1262:4"
=======
                                "id": 2075,
                                "name": "Literal",
                                "src": "4174:4:2"
                              }
                            ],
                            "id": 2076,
                            "name": "Return",
                            "src": "4167:11:2"
                          }
                        ],
                        "id": 2077,
                        "name": "Block",
                        "src": "2953:1236:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "children": [
                          {
                            "attributes": {
<<<<<<< HEAD
                              "functionReturnParameters": 3479
=======
                              "functionReturnParameters": 2011
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
<<<<<<< HEAD
                                "id": 3546,
                                "name": "Literal",
                                "src": "4332:5:4"
                              }
                            ],
                            "id": 3547,
                            "name": "Return",
                            "src": "4325:12:4"
                          }
                        ],
                        "id": 3548,
                        "name": "Block",
                        "src": "4310:39:4"
                      }
                    ],
                    "id": 3549,
                    "name": "IfStatement",
                    "src": "3023:1326:4"
                  }
                ],
                "id": 3550,
                "name": "Block",
                "src": "2864:1492:4"
              }
            ],
            "id": 3551,
            "name": "FunctionDefinition",
            "src": "2794:1562:4"
          },
          {
            "attributes": {
              "documentation": "@dev Returns true if the key is in the map. O(1).\r",
=======
                                "id": 2078,
                                "name": "Literal",
                                "src": "4216:5:2"
                              }
                            ],
                            "id": 2079,
                            "name": "Return",
                            "src": "4209:12:2"
                          }
                        ],
                        "id": 2080,
                        "name": "Block",
                        "src": "4195:37:2"
                      }
                    ],
                    "id": 2081,
                    "name": "IfStatement",
                    "src": "2934:1298:2"
                  }
                ],
                "id": 2082,
                "name": "Block",
                "src": "2779:1459:2"
              }
            ],
            "id": 2083,
            "name": "FunctionDefinition",
            "src": "2709:1529:2"
          },
          {
            "attributes": {
              "documentation": "@dev Returns true if the key is in the map. O(1).",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_contains",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3568,
=======
                      "scope": 2100,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.Map",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Map",
<<<<<<< HEAD
                          "referencedDeclaration": 3410,
                          "type": "struct EMap.Map"
                        },
                        "id": 3552,
                        "name": "UserDefinedTypeName",
                        "src": "4459:3:4"
                      }
                    ],
                    "id": 3553,
                    "name": "VariableDeclaration",
                    "src": "4459:15:4"
=======
                          "referencedDeclaration": 1942,
                          "type": "struct EMap.Map"
                        },
                        "id": 2084,
                        "name": "UserDefinedTypeName",
                        "src": "4336:3:2"
                      }
                    ],
                    "id": 2085,
                    "name": "VariableDeclaration",
                    "src": "4336:15:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3568,
=======
                      "scope": 2100,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3554,
                        "name": "ElementaryTypeName",
                        "src": "4476:7:4"
                      }
                    ],
                    "id": 3555,
                    "name": "VariableDeclaration",
                    "src": "4476:11:4"
                  }
                ],
                "id": 3556,
                "name": "ParameterList",
                "src": "4458:30:4"
=======
                        "id": 2086,
                        "name": "ElementaryTypeName",
                        "src": "4353:7:2"
                      }
                    ],
                    "id": 2087,
                    "name": "VariableDeclaration",
                    "src": "4353:11:2"
                  }
                ],
                "id": 2088,
                "name": "ParameterList",
                "src": "4335:30:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3568,
=======
                      "scope": 2100,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
<<<<<<< HEAD
                        "id": 3557,
                        "name": "ElementaryTypeName",
                        "src": "4538:4:4"
                      }
                    ],
                    "id": 3558,
                    "name": "VariableDeclaration",
                    "src": "4538:4:4"
                  }
                ],
                "id": 3559,
                "name": "ParameterList",
                "src": "4537:6:4"
=======
                        "id": 2089,
                        "name": "ElementaryTypeName",
                        "src": "4412:4:2"
                      }
                    ],
                    "id": 2090,
                    "name": "VariableDeclaration",
                    "src": "4412:4:2"
                  }
                ],
                "id": 2091,
                "name": "ParameterList",
                "src": "4411:6:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "functionReturnParameters": 3559
=======
                      "functionReturnParameters": 2091
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_indexes",
<<<<<<< HEAD
                                  "referencedDeclaration": 3409,
=======
                                  "referencedDeclaration": 1941,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "mapping(bytes32 => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3553,
                                      "type": "struct EMap.Map storage pointer",
                                      "value": "map"
                                    },
                                    "id": 3560,
                                    "name": "Identifier",
                                    "src": "4567:3:4"
                                  }
                                ],
                                "id": 3561,
                                "name": "MemberAccess",
                                "src": "4567:12:4"
=======
                                      "referencedDeclaration": 2085,
                                      "type": "struct EMap.Map storage pointer",
                                      "value": "map"
                                    },
                                    "id": 2092,
                                    "name": "Identifier",
                                    "src": "4439:3:2"
                                  }
                                ],
                                "id": 2093,
                                "name": "MemberAccess",
                                "src": "4439:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3555,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 3562,
                                "name": "Identifier",
                                "src": "4580:3:4"
                              }
                            ],
                            "id": 3563,
                            "name": "IndexAccess",
                            "src": "4567:17:4"
=======
                                  "referencedDeclaration": 2087,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 2094,
                                "name": "Identifier",
                                "src": "4452:3:2"
                              }
                            ],
                            "id": 2095,
                            "name": "IndexAccess",
                            "src": "4439:17:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
<<<<<<< HEAD
                            "id": 3564,
                            "name": "Literal",
                            "src": "4588:1:4"
                          }
                        ],
                        "id": 3565,
                        "name": "BinaryOperation",
                        "src": "4567:22:4"
                      }
                    ],
                    "id": 3566,
                    "name": "Return",
                    "src": "4560:29:4"
                  }
                ],
                "id": 3567,
                "name": "Block",
                "src": "4549:48:4"
              }
            ],
            "id": 3568,
            "name": "FunctionDefinition",
            "src": "4440:157:4"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the number of key-value pairs in the map. O(1).\r",
=======
                            "id": 2096,
                            "name": "Literal",
                            "src": "4460:1:2"
                          }
                        ],
                        "id": 2097,
                        "name": "BinaryOperation",
                        "src": "4439:22:2"
                      }
                    ],
                    "id": 2098,
                    "name": "Return",
                    "src": "4432:29:2"
                  }
                ],
                "id": 2099,
                "name": "Block",
                "src": "4422:46:2"
              }
            ],
            "id": 2100,
            "name": "FunctionDefinition",
            "src": "4317:151:2"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the number of key-value pairs in the map. O(1).",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_length",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3580,
=======
                      "scope": 2112,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.Map",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Map",
<<<<<<< HEAD
                          "referencedDeclaration": 3410,
                          "type": "struct EMap.Map"
                        },
                        "id": 3569,
                        "name": "UserDefinedTypeName",
                        "src": "4709:3:4"
                      }
                    ],
                    "id": 3570,
                    "name": "VariableDeclaration",
                    "src": "4709:15:4"
                  }
                ],
                "id": 3571,
                "name": "ParameterList",
                "src": "4708:17:4"
=======
                          "referencedDeclaration": 1942,
                          "type": "struct EMap.Map"
                        },
                        "id": 2101,
                        "name": "UserDefinedTypeName",
                        "src": "4575:3:2"
                      }
                    ],
                    "id": 2102,
                    "name": "VariableDeclaration",
                    "src": "4575:15:2"
                  }
                ],
                "id": 2103,
                "name": "ParameterList",
                "src": "4574:17:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3580,
=======
                      "scope": 2112,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3572,
                        "name": "ElementaryTypeName",
                        "src": "4748:7:4"
                      }
                    ],
                    "id": 3573,
                    "name": "VariableDeclaration",
                    "src": "4748:7:4"
                  }
                ],
                "id": 3574,
                "name": "ParameterList",
                "src": "4747:9:4"
=======
                        "id": 2104,
                        "name": "ElementaryTypeName",
                        "src": "4614:7:2"
                      }
                    ],
                    "id": 2105,
                    "name": "VariableDeclaration",
                    "src": "4614:7:2"
                  }
                ],
                "id": 2106,
                "name": "ParameterList",
                "src": "4613:9:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "functionReturnParameters": 3574
=======
                      "functionReturnParameters": 2106
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "length",
                          "referencedDeclaration": null,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_entries",
<<<<<<< HEAD
                              "referencedDeclaration": 3405,
=======
                              "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.MapEntry storage ref[] storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3570,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 3575,
                                "name": "Identifier",
                                "src": "4775:3:4"
                              }
                            ],
                            "id": 3576,
                            "name": "MemberAccess",
                            "src": "4775:12:4"
                          }
                        ],
                        "id": 3577,
                        "name": "MemberAccess",
                        "src": "4775:19:4"
                      }
                    ],
                    "id": 3578,
                    "name": "Return",
                    "src": "4768:26:4"
                  }
                ],
                "id": 3579,
                "name": "Block",
                "src": "4757:45:4"
              }
            ],
            "id": 3580,
            "name": "FunctionDefinition",
            "src": "4692:110:4"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the key-value pair stored at position `index` in the map. O(1).\r\n\n     * Note that there are no guarantees on the ordering of entries inside the\r\narray, and it may change when more entries are added or removed.\r\n\n     * Requirements:\r\n\n     * - `index` must be strictly less than {length}.\r",
=======
                                  "referencedDeclaration": 2102,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 2107,
                                "name": "Identifier",
                                "src": "4640:3:2"
                              }
                            ],
                            "id": 2108,
                            "name": "MemberAccess",
                            "src": "4640:12:2"
                          }
                        ],
                        "id": 2109,
                        "name": "MemberAccess",
                        "src": "4640:19:2"
                      }
                    ],
                    "id": 2110,
                    "name": "Return",
                    "src": "4633:26:2"
                  }
                ],
                "id": 2111,
                "name": "Block",
                "src": "4623:43:2"
              }
            ],
            "id": 2112,
            "name": "FunctionDefinition",
            "src": "4558:108:2"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the key-value pair stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of entries inside the\narray, and it may change when more entries are added or removed.\n     * Requirements:\n     * - `index` must be strictly less than {length}.",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_at",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3614,
=======
                      "scope": 2146,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.Map",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Map",
<<<<<<< HEAD
                          "referencedDeclaration": 3410,
                          "type": "struct EMap.Map"
                        },
                        "id": 3581,
                        "name": "UserDefinedTypeName",
                        "src": "5180:3:4"
                      }
                    ],
                    "id": 3582,
                    "name": "VariableDeclaration",
                    "src": "5180:15:4"
=======
                          "referencedDeclaration": 1942,
                          "type": "struct EMap.Map"
                        },
                        "id": 2113,
                        "name": "UserDefinedTypeName",
                        "src": "5032:3:2"
                      }
                    ],
                    "id": 2114,
                    "name": "VariableDeclaration",
                    "src": "5032:15:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
<<<<<<< HEAD
                      "scope": 3614,
=======
                      "scope": 2146,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3583,
                        "name": "ElementaryTypeName",
                        "src": "5197:7:4"
                      }
                    ],
                    "id": 3584,
                    "name": "VariableDeclaration",
                    "src": "5197:13:4"
                  }
                ],
                "id": 3585,
                "name": "ParameterList",
                "src": "5179:32:4"
=======
                        "id": 2115,
                        "name": "ElementaryTypeName",
                        "src": "5049:7:2"
                      }
                    ],
                    "id": 2116,
                    "name": "VariableDeclaration",
                    "src": "5049:13:2"
                  }
                ],
                "id": 2117,
                "name": "ParameterList",
                "src": "5031:32:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3614,
=======
                      "scope": 2146,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3586,
                        "name": "ElementaryTypeName",
                        "src": "5261:7:4"
                      }
                    ],
                    "id": 3587,
                    "name": "VariableDeclaration",
                    "src": "5261:7:4"
=======
                        "id": 2118,
                        "name": "ElementaryTypeName",
                        "src": "5110:7:2"
                      }
                    ],
                    "id": 2119,
                    "name": "VariableDeclaration",
                    "src": "5110:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3614,
=======
                      "scope": 2146,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3588,
                        "name": "ElementaryTypeName",
                        "src": "5270:7:4"
                      }
                    ],
                    "id": 3589,
                    "name": "VariableDeclaration",
                    "src": "5270:7:4"
                  }
                ],
                "id": 3590,
                "name": "ParameterList",
                "src": "5260:18:4"
=======
                        "id": 2120,
                        "name": "ElementaryTypeName",
                        "src": "5119:7:2"
                      }
                    ],
                    "id": 2121,
                    "name": "VariableDeclaration",
                    "src": "5119:7:2"
                  }
                ],
                "id": 2122,
                "name": "ParameterList",
                "src": "5109:18:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_86631030b9066a18616a068fc09fce83d18af4765cb1d2166fa475228f4db155",
                                  "typeString": "literal_string \"EnumerableMap: index out of bounds\""
                                }
                              ],
                              "overloadedDeclarations": [
<<<<<<< HEAD
                                6545,
                                6546
                              ],
                              "referencedDeclaration": 6546,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 3591,
                            "name": "Identifier",
                            "src": "5295:7:4"
=======
                                2922,
                                2923
                              ],
                              "referencedDeclaration": 2923,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2123,
                            "name": "Identifier",
                            "src": "5142:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "_entries",
<<<<<<< HEAD
                                      "referencedDeclaration": 3405,
=======
                                      "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct EMap.MapEntry storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3582,
                                          "type": "struct EMap.Map storage pointer",
                                          "value": "map"
                                        },
                                        "id": 3592,
                                        "name": "Identifier",
                                        "src": "5317:3:4"
                                      }
                                    ],
                                    "id": 3593,
                                    "name": "MemberAccess",
                                    "src": "5317:12:4"
                                  }
                                ],
                                "id": 3594,
                                "name": "MemberAccess",
                                "src": "5317:19:4"
=======
                                          "referencedDeclaration": 2114,
                                          "type": "struct EMap.Map storage pointer",
                                          "value": "map"
                                        },
                                        "id": 2124,
                                        "name": "Identifier",
                                        "src": "5163:3:2"
                                      }
                                    ],
                                    "id": 2125,
                                    "name": "MemberAccess",
                                    "src": "5163:12:2"
                                  }
                                ],
                                "id": 2126,
                                "name": "MemberAccess",
                                "src": "5163:19:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3584,
                                  "type": "uint256",
                                  "value": "index"
                                },
                                "id": 3595,
                                "name": "Identifier",
                                "src": "5339:5:4"
                              }
                            ],
                            "id": 3596,
                            "name": "BinaryOperation",
                            "src": "5317:27:4"
=======
                                  "referencedDeclaration": 2116,
                                  "type": "uint256",
                                  "value": "index"
                                },
                                "id": 2127,
                                "name": "Identifier",
                                "src": "5185:5:2"
                              }
                            ],
                            "id": 2128,
                            "name": "BinaryOperation",
                            "src": "5163:27:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e6473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"EnumerableMap: index out of bounds\"",
                              "value": "EnumerableMap: index out of bounds"
                            },
<<<<<<< HEAD
                            "id": 3597,
                            "name": "Literal",
                            "src": "5359:36:4"
                          }
                        ],
                        "id": 3598,
                        "name": "FunctionCall",
                        "src": "5295:111:4"
                      }
                    ],
                    "id": 3599,
                    "name": "ExpressionStatement",
                    "src": "5295:111:4"
=======
                            "id": 2129,
                            "name": "Literal",
                            "src": "5204:36:2"
                          }
                        ],
                        "id": 2130,
                        "name": "FunctionCall",
                        "src": "5142:108:2"
                      }
                    ],
                    "id": 2131,
                    "name": "ExpressionStatement",
                    "src": "5142:108:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "assignments": [
<<<<<<< HEAD
                        3601
=======
                        2133
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "entry",
<<<<<<< HEAD
                          "scope": 3613,
=======
                          "scope": 2145,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct EMap.MapEntry",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "MapEntry",
<<<<<<< HEAD
                              "referencedDeclaration": 3402,
                              "type": "struct EMap.MapEntry"
                            },
                            "id": 3600,
                            "name": "UserDefinedTypeName",
                            "src": "5419:8:4"
                          }
                        ],
                        "id": 3601,
                        "name": "VariableDeclaration",
                        "src": "5419:22:4"
=======
                              "referencedDeclaration": 1934,
                              "type": "struct EMap.MapEntry"
                            },
                            "id": 2132,
                            "name": "UserDefinedTypeName",
                            "src": "5261:8:2"
                          }
                        ],
                        "id": 2133,
                        "name": "VariableDeclaration",
                        "src": "5261:22:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct EMap.MapEntry storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_entries",
<<<<<<< HEAD
                              "referencedDeclaration": 3405,
=======
                              "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.MapEntry storage ref[] storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3582,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 3602,
                                "name": "Identifier",
                                "src": "5444:3:4"
                              }
                            ],
                            "id": 3603,
                            "name": "MemberAccess",
                            "src": "5444:12:4"
=======
                                  "referencedDeclaration": 2114,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 2134,
                                "name": "Identifier",
                                "src": "5286:3:2"
                              }
                            ],
                            "id": 2135,
                            "name": "MemberAccess",
                            "src": "5286:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3584,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 3604,
                            "name": "Identifier",
                            "src": "5457:5:4"
                          }
                        ],
                        "id": 3605,
                        "name": "IndexAccess",
                        "src": "5444:19:4"
                      }
                    ],
                    "id": 3606,
                    "name": "VariableDeclarationStatement",
                    "src": "5419:44:4"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 3590
=======
                              "referencedDeclaration": 2116,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 2136,
                            "name": "Identifier",
                            "src": "5299:5:2"
                          }
                        ],
                        "id": 2137,
                        "name": "IndexAccess",
                        "src": "5286:19:2"
                      }
                    ],
                    "id": 2138,
                    "name": "VariableDeclarationStatement",
                    "src": "5261:44:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2122
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(bytes32,bytes32)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_key",
<<<<<<< HEAD
                              "referencedDeclaration": 3399,
=======
                              "referencedDeclaration": 1931,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "bytes32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3601,
                                  "type": "struct EMap.MapEntry storage pointer",
                                  "value": "entry"
                                },
                                "id": 3607,
                                "name": "Identifier",
                                "src": "5482:5:4"
                              }
                            ],
                            "id": 3608,
                            "name": "MemberAccess",
                            "src": "5482:10:4"
=======
                                  "referencedDeclaration": 2133,
                                  "type": "struct EMap.MapEntry storage pointer",
                                  "value": "entry"
                                },
                                "id": 2139,
                                "name": "Identifier",
                                "src": "5323:5:2"
                              }
                            ],
                            "id": 2140,
                            "name": "MemberAccess",
                            "src": "5323:10:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_value",
<<<<<<< HEAD
                              "referencedDeclaration": 3401,
=======
                              "referencedDeclaration": 1933,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "bytes32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3601,
                                  "type": "struct EMap.MapEntry storage pointer",
                                  "value": "entry"
                                },
                                "id": 3609,
                                "name": "Identifier",
                                "src": "5494:5:4"
                              }
                            ],
                            "id": 3610,
                            "name": "MemberAccess",
                            "src": "5494:12:4"
                          }
                        ],
                        "id": 3611,
                        "name": "TupleExpression",
                        "src": "5481:26:4"
                      }
                    ],
                    "id": 3612,
                    "name": "Return",
                    "src": "5474:33:4"
                  }
                ],
                "id": 3613,
                "name": "Block",
                "src": "5284:231:4"
              }
            ],
            "id": 3614,
            "name": "FunctionDefinition",
            "src": "5167:348:4"
          },
          {
            "attributes": {
              "documentation": "@dev Tries to returns the value associated with `key`.  O(1).\r\nDoes not revert if `key` is not in the map.\r",
=======
                                  "referencedDeclaration": 2133,
                                  "type": "struct EMap.MapEntry storage pointer",
                                  "value": "entry"
                                },
                                "id": 2141,
                                "name": "Identifier",
                                "src": "5335:5:2"
                              }
                            ],
                            "id": 2142,
                            "name": "MemberAccess",
                            "src": "5335:12:2"
                          }
                        ],
                        "id": 2143,
                        "name": "TupleExpression",
                        "src": "5322:26:2"
                      }
                    ],
                    "id": 2144,
                    "name": "Return",
                    "src": "5315:33:2"
                  }
                ],
                "id": 2145,
                "name": "Block",
                "src": "5132:223:2"
              }
            ],
            "id": 2146,
            "name": "FunctionDefinition",
            "src": "5019:336:2"
          },
          {
            "attributes": {
              "documentation": "@dev Tries to returns the value associated with `key`.  O(1).\nDoes not revert if `key` is not in the map.",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_tryGet",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3651,
=======
                      "scope": 2183,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.Map",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Map",
<<<<<<< HEAD
                          "referencedDeclaration": 3410,
                          "type": "struct EMap.Map"
                        },
                        "id": 3615,
                        "name": "UserDefinedTypeName",
                        "src": "5680:3:4"
                      }
                    ],
                    "id": 3616,
                    "name": "VariableDeclaration",
                    "src": "5680:15:4"
=======
                          "referencedDeclaration": 1942,
                          "type": "struct EMap.Map"
                        },
                        "id": 2147,
                        "name": "UserDefinedTypeName",
                        "src": "5514:3:2"
                      }
                    ],
                    "id": 2148,
                    "name": "VariableDeclaration",
                    "src": "5514:15:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3651,
=======
                      "scope": 2183,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3617,
                        "name": "ElementaryTypeName",
                        "src": "5697:7:4"
                      }
                    ],
                    "id": 3618,
                    "name": "VariableDeclaration",
                    "src": "5697:11:4"
                  }
                ],
                "id": 3619,
                "name": "ParameterList",
                "src": "5679:30:4"
=======
                        "id": 2149,
                        "name": "ElementaryTypeName",
                        "src": "5531:7:2"
                      }
                    ],
                    "id": 2150,
                    "name": "VariableDeclaration",
                    "src": "5531:11:2"
                  }
                ],
                "id": 2151,
                "name": "ParameterList",
                "src": "5513:30:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3651,
=======
                      "scope": 2183,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
<<<<<<< HEAD
                        "id": 3620,
                        "name": "ElementaryTypeName",
                        "src": "5759:4:4"
                      }
                    ],
                    "id": 3621,
                    "name": "VariableDeclaration",
                    "src": "5759:4:4"
=======
                        "id": 2152,
                        "name": "ElementaryTypeName",
                        "src": "5590:4:2"
                      }
                    ],
                    "id": 2153,
                    "name": "VariableDeclaration",
                    "src": "5590:4:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3651,
=======
                      "scope": 2183,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3622,
                        "name": "ElementaryTypeName",
                        "src": "5765:7:4"
                      }
                    ],
                    "id": 3623,
                    "name": "VariableDeclaration",
                    "src": "5765:7:4"
                  }
                ],
                "id": 3624,
                "name": "ParameterList",
                "src": "5758:15:4"
=======
                        "id": 2154,
                        "name": "ElementaryTypeName",
                        "src": "5596:7:2"
                      }
                    ],
                    "id": 2155,
                    "name": "VariableDeclaration",
                    "src": "5596:7:2"
                  }
                ],
                "id": 2156,
                "name": "ParameterList",
                "src": "5589:15:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
<<<<<<< HEAD
                        3626
=======
                        2158
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "keyIndex",
<<<<<<< HEAD
                          "scope": 3650,
=======
                          "scope": 2182,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
<<<<<<< HEAD
                            "id": 3625,
                            "name": "ElementaryTypeName",
                            "src": "5790:7:4"
                          }
                        ],
                        "id": 3626,
                        "name": "VariableDeclaration",
                        "src": "5790:16:4"
=======
                            "id": 2157,
                            "name": "ElementaryTypeName",
                            "src": "5619:7:2"
                          }
                        ],
                        "id": 2158,
                        "name": "VariableDeclaration",
                        "src": "5619:16:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_indexes",
<<<<<<< HEAD
                              "referencedDeclaration": 3409,
=======
                              "referencedDeclaration": 1941,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "mapping(bytes32 => uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3616,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 3627,
                                "name": "Identifier",
                                "src": "5809:3:4"
                              }
                            ],
                            "id": 3628,
                            "name": "MemberAccess",
                            "src": "5809:12:4"
=======
                                  "referencedDeclaration": 2148,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 2159,
                                "name": "Identifier",
                                "src": "5638:3:2"
                              }
                            ],
                            "id": 2160,
                            "name": "MemberAccess",
                            "src": "5638:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3618,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 3629,
                            "name": "Identifier",
                            "src": "5822:3:4"
                          }
                        ],
                        "id": 3630,
                        "name": "IndexAccess",
                        "src": "5809:17:4"
                      }
                    ],
                    "id": 3631,
                    "name": "VariableDeclarationStatement",
                    "src": "5790:36:4"
=======
                              "referencedDeclaration": 2150,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 2161,
                            "name": "Identifier",
                            "src": "5651:3:2"
                          }
                        ],
                        "id": 2162,
                        "name": "IndexAccess",
                        "src": "5638:17:2"
                      }
                    ],
                    "id": 2163,
                    "name": "VariableDeclarationStatement",
                    "src": "5619:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3626,
                              "type": "uint256",
                              "value": "keyIndex"
                            },
                            "id": 3632,
                            "name": "Identifier",
                            "src": "5841:8:4"
=======
                              "referencedDeclaration": 2158,
                              "type": "uint256",
                              "value": "keyIndex"
                            },
                            "id": 2164,
                            "name": "Identifier",
                            "src": "5669:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
<<<<<<< HEAD
                            "id": 3633,
                            "name": "Literal",
                            "src": "5853:1:4"
                          }
                        ],
                        "id": 3634,
                        "name": "BinaryOperation",
                        "src": "5841:13:4"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 3624
=======
                            "id": 2165,
                            "name": "Literal",
                            "src": "5681:1:2"
                          }
                        ],
                        "id": 2166,
                        "name": "BinaryOperation",
                        "src": "5669:13:2"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 2156
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "tuple(bool,int_const 0)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
<<<<<<< HEAD
                                "id": 3635,
                                "name": "Literal",
                                "src": "5864:5:4"
=======
                                "id": 2167,
                                "name": "Literal",
                                "src": "5692:5:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
<<<<<<< HEAD
                                "id": 3636,
                                "name": "Literal",
                                "src": "5871:1:4"
                              }
                            ],
                            "id": 3637,
                            "name": "TupleExpression",
                            "src": "5863:10:4"
                          }
                        ],
                        "id": 3638,
                        "name": "Return",
                        "src": "5856:17:4"
                      }
                    ],
                    "id": 3639,
                    "name": "IfStatement",
                    "src": "5837:36:4"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 3624
=======
                                "id": 2168,
                                "name": "Literal",
                                "src": "5699:1:2"
                              }
                            ],
                            "id": 2169,
                            "name": "TupleExpression",
                            "src": "5691:10:2"
                          }
                        ],
                        "id": 2170,
                        "name": "Return",
                        "src": "5684:17:2"
                      }
                    ],
                    "id": 2171,
                    "name": "IfStatement",
                    "src": "5665:36:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2156
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(bool,bytes32)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
<<<<<<< HEAD
                            "id": 3640,
                            "name": "Literal",
                            "src": "5928:4:4"
=======
                            "id": 2172,
                            "name": "Literal",
                            "src": "5755:4:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_value",
<<<<<<< HEAD
                              "referencedDeclaration": 3401,
=======
                              "referencedDeclaration": 1933,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "bytes32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EMap.MapEntry storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "_entries",
<<<<<<< HEAD
                                      "referencedDeclaration": 3405,
=======
                                      "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct EMap.MapEntry storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3616,
                                          "type": "struct EMap.Map storage pointer",
                                          "value": "map"
                                        },
                                        "id": 3641,
                                        "name": "Identifier",
                                        "src": "5934:3:4"
                                      }
                                    ],
                                    "id": 3642,
                                    "name": "MemberAccess",
                                    "src": "5934:12:4"
=======
                                          "referencedDeclaration": 2148,
                                          "type": "struct EMap.Map storage pointer",
                                          "value": "map"
                                        },
                                        "id": 2173,
                                        "name": "Identifier",
                                        "src": "5761:3:2"
                                      }
                                    ],
                                    "id": 2174,
                                    "name": "MemberAccess",
                                    "src": "5761:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "-",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3626,
                                          "type": "uint256",
                                          "value": "keyIndex"
                                        },
                                        "id": 3643,
                                        "name": "Identifier",
                                        "src": "5947:8:4"
=======
                                          "referencedDeclaration": 2158,
                                          "type": "uint256",
                                          "value": "keyIndex"
                                        },
                                        "id": 2175,
                                        "name": "Identifier",
                                        "src": "5774:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
<<<<<<< HEAD
                                        "id": 3644,
                                        "name": "Literal",
                                        "src": "5958:1:4"
                                      }
                                    ],
                                    "id": 3645,
                                    "name": "BinaryOperation",
                                    "src": "5947:12:4"
                                  }
                                ],
                                "id": 3646,
                                "name": "IndexAccess",
                                "src": "5934:26:4"
                              }
                            ],
                            "id": 3647,
                            "name": "MemberAccess",
                            "src": "5934:33:4"
                          }
                        ],
                        "id": 3648,
                        "name": "TupleExpression",
                        "src": "5927:41:4"
                      }
                    ],
                    "id": 3649,
                    "name": "Return",
                    "src": "5920:48:4"
                  }
                ],
                "id": 3650,
                "name": "Block",
                "src": "5779:224:4"
              }
            ],
            "id": 3651,
            "name": "FunctionDefinition",
            "src": "5663:340:4"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the value associated with `key`.  O(1).\r\n\n     * Requirements:\r\n\n     * - `key` must be in the map.\r",
=======
                                        "id": 2176,
                                        "name": "Literal",
                                        "src": "5785:1:2"
                                      }
                                    ],
                                    "id": 2177,
                                    "name": "BinaryOperation",
                                    "src": "5774:12:2"
                                  }
                                ],
                                "id": 2178,
                                "name": "IndexAccess",
                                "src": "5761:26:2"
                              }
                            ],
                            "id": 2179,
                            "name": "MemberAccess",
                            "src": "5761:33:2"
                          }
                        ],
                        "id": 2180,
                        "name": "TupleExpression",
                        "src": "5754:41:2"
                      }
                    ],
                    "id": 2181,
                    "name": "Return",
                    "src": "5747:48:2"
                  }
                ],
                "id": 2182,
                "name": "Block",
                "src": "5609:220:2"
              }
            ],
            "id": 2183,
            "name": "FunctionDefinition",
            "src": "5497:332:2"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the value associated with `key`.  O(1).\n     * Requirements:\n     * - `key` must be in the map.",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_get",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3683,
=======
                      "scope": 2215,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.Map",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Map",
<<<<<<< HEAD
                          "referencedDeclaration": 3410,
                          "type": "struct EMap.Map"
                        },
                        "id": 3652,
                        "name": "UserDefinedTypeName",
                        "src": "6178:3:4"
                      }
                    ],
                    "id": 3653,
                    "name": "VariableDeclaration",
                    "src": "6178:15:4"
=======
                          "referencedDeclaration": 1942,
                          "type": "struct EMap.Map"
                        },
                        "id": 2184,
                        "name": "UserDefinedTypeName",
                        "src": "5995:3:2"
                      }
                    ],
                    "id": 2185,
                    "name": "VariableDeclaration",
                    "src": "5995:15:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3683,
=======
                      "scope": 2215,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3654,
                        "name": "ElementaryTypeName",
                        "src": "6195:7:4"
                      }
                    ],
                    "id": 3655,
                    "name": "VariableDeclaration",
                    "src": "6195:11:4"
                  }
                ],
                "id": 3656,
                "name": "ParameterList",
                "src": "6177:30:4"
=======
                        "id": 2186,
                        "name": "ElementaryTypeName",
                        "src": "6012:7:2"
                      }
                    ],
                    "id": 2187,
                    "name": "VariableDeclaration",
                    "src": "6012:11:2"
                  }
                ],
                "id": 2188,
                "name": "ParameterList",
                "src": "5994:30:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3683,
=======
                      "scope": 2215,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3657,
                        "name": "ElementaryTypeName",
                        "src": "6230:7:4"
                      }
                    ],
                    "id": 3658,
                    "name": "VariableDeclaration",
                    "src": "6230:7:4"
                  }
                ],
                "id": 3659,
                "name": "ParameterList",
                "src": "6229:9:4"
=======
                        "id": 2189,
                        "name": "ElementaryTypeName",
                        "src": "6047:7:2"
                      }
                    ],
                    "id": 2190,
                    "name": "VariableDeclaration",
                    "src": "6047:7:2"
                  }
                ],
                "id": 2191,
                "name": "ParameterList",
                "src": "6046:9:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
<<<<<<< HEAD
                        3661
=======
                        2193
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "keyIndex",
<<<<<<< HEAD
                          "scope": 3682,
=======
                          "scope": 2214,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
<<<<<<< HEAD
                            "id": 3660,
                            "name": "ElementaryTypeName",
                            "src": "6250:7:4"
                          }
                        ],
                        "id": 3661,
                        "name": "VariableDeclaration",
                        "src": "6250:16:4"
=======
                            "id": 2192,
                            "name": "ElementaryTypeName",
                            "src": "6066:7:2"
                          }
                        ],
                        "id": 2193,
                        "name": "VariableDeclaration",
                        "src": "6066:16:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_indexes",
<<<<<<< HEAD
                              "referencedDeclaration": 3409,
=======
                              "referencedDeclaration": 1941,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "mapping(bytes32 => uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3653,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 3662,
                                "name": "Identifier",
                                "src": "6269:3:4"
                              }
                            ],
                            "id": 3663,
                            "name": "MemberAccess",
                            "src": "6269:12:4"
=======
                                  "referencedDeclaration": 2185,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 2194,
                                "name": "Identifier",
                                "src": "6085:3:2"
                              }
                            ],
                            "id": 2195,
                            "name": "MemberAccess",
                            "src": "6085:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3655,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 3664,
                            "name": "Identifier",
                            "src": "6282:3:4"
                          }
                        ],
                        "id": 3665,
                        "name": "IndexAccess",
                        "src": "6269:17:4"
                      }
                    ],
                    "id": 3666,
                    "name": "VariableDeclarationStatement",
                    "src": "6250:36:4"
=======
                              "referencedDeclaration": 2187,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 2196,
                            "name": "Identifier",
                            "src": "6098:3:2"
                          }
                        ],
                        "id": 2197,
                        "name": "IndexAccess",
                        "src": "6085:17:2"
                      }
                    ],
                    "id": 2198,
                    "name": "VariableDeclarationStatement",
                    "src": "6066:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072",
                                  "typeString": "literal_string \"EnumerableMap: nonexistent key\""
                                }
                              ],
                              "overloadedDeclarations": [
<<<<<<< HEAD
                                6545,
                                6546
                              ],
                              "referencedDeclaration": 6546,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 3667,
                            "name": "Identifier",
                            "src": "6297:7:4"
=======
                                2922,
                                2923
                              ],
                              "referencedDeclaration": 2923,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2199,
                            "name": "Identifier",
                            "src": "6112:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3661,
                                  "type": "uint256",
                                  "value": "keyIndex"
                                },
                                "id": 3668,
                                "name": "Identifier",
                                "src": "6305:8:4"
=======
                                  "referencedDeclaration": 2193,
                                  "type": "uint256",
                                  "value": "keyIndex"
                                },
                                "id": 2200,
                                "name": "Identifier",
                                "src": "6120:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
<<<<<<< HEAD
                                "id": 3669,
                                "name": "Literal",
                                "src": "6317:1:4"
                              }
                            ],
                            "id": 3670,
                            "name": "BinaryOperation",
                            "src": "6305:13:4"
=======
                                "id": 2201,
                                "name": "Literal",
                                "src": "6132:1:2"
                              }
                            ],
                            "id": 2202,
                            "name": "BinaryOperation",
                            "src": "6120:13:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"EnumerableMap: nonexistent key\"",
                              "value": "EnumerableMap: nonexistent key"
                            },
<<<<<<< HEAD
                            "id": 3671,
                            "name": "Literal",
                            "src": "6320:32:4"
                          }
                        ],
                        "id": 3672,
                        "name": "FunctionCall",
                        "src": "6297:56:4"
                      }
                    ],
                    "id": 3673,
                    "name": "ExpressionStatement",
                    "src": "6297:56:4"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 3659
=======
                            "id": 2203,
                            "name": "Literal",
                            "src": "6135:32:2"
                          }
                        ],
                        "id": 2204,
                        "name": "FunctionCall",
                        "src": "6112:56:2"
                      }
                    ],
                    "id": 2205,
                    "name": "ExpressionStatement",
                    "src": "6112:56:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2191
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "_value",
<<<<<<< HEAD
                          "referencedDeclaration": 3401,
=======
                          "referencedDeclaration": 1933,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "type": "bytes32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct EMap.MapEntry storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_entries",
<<<<<<< HEAD
                                  "referencedDeclaration": 3405,
=======
                                  "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "struct EMap.MapEntry storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3653,
                                      "type": "struct EMap.Map storage pointer",
                                      "value": "map"
                                    },
                                    "id": 3674,
                                    "name": "Identifier",
                                    "src": "6407:3:4"
                                  }
                                ],
                                "id": 3675,
                                "name": "MemberAccess",
                                "src": "6407:12:4"
=======
                                      "referencedDeclaration": 2185,
                                      "type": "struct EMap.Map storage pointer",
                                      "value": "map"
                                    },
                                    "id": 2206,
                                    "name": "Identifier",
                                    "src": "6221:3:2"
                                  }
                                ],
                                "id": 2207,
                                "name": "MemberAccess",
                                "src": "6221:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "-",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3661,
                                      "type": "uint256",
                                      "value": "keyIndex"
                                    },
                                    "id": 3676,
                                    "name": "Identifier",
                                    "src": "6420:8:4"
=======
                                      "referencedDeclaration": 2193,
                                      "type": "uint256",
                                      "value": "keyIndex"
                                    },
                                    "id": 2208,
                                    "name": "Identifier",
                                    "src": "6234:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
<<<<<<< HEAD
                                    "id": 3677,
                                    "name": "Literal",
                                    "src": "6431:1:4"
                                  }
                                ],
                                "id": 3678,
                                "name": "BinaryOperation",
                                "src": "6420:12:4"
                              }
                            ],
                            "id": 3679,
                            "name": "IndexAccess",
                            "src": "6407:26:4"
                          }
                        ],
                        "id": 3680,
                        "name": "MemberAccess",
                        "src": "6407:33:4"
                      }
                    ],
                    "id": 3681,
                    "name": "Return",
                    "src": "6400:40:4"
                  }
                ],
                "id": 3682,
                "name": "Block",
                "src": "6239:236:4"
              }
            ],
            "id": 3683,
            "name": "FunctionDefinition",
            "src": "6164:311:4"
          },
          {
            "attributes": {
              "documentation": "@dev Same as {_get}, with a custom error message when `key` is not in the map.\r\n\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\nmessage unnecessarily. For custom revert reasons use {_tryGet}.\r",
=======
                                    "id": 2209,
                                    "name": "Literal",
                                    "src": "6245:1:2"
                                  }
                                ],
                                "id": 2210,
                                "name": "BinaryOperation",
                                "src": "6234:12:2"
                              }
                            ],
                            "id": 2211,
                            "name": "IndexAccess",
                            "src": "6221:26:2"
                          }
                        ],
                        "id": 2212,
                        "name": "MemberAccess",
                        "src": "6221:33:2"
                      }
                    ],
                    "id": 2213,
                    "name": "Return",
                    "src": "6214:40:2"
                  }
                ],
                "id": 2214,
                "name": "Block",
                "src": "6056:232:2"
              }
            ],
            "id": 2215,
            "name": "FunctionDefinition",
            "src": "5981:307:2"
          },
          {
            "attributes": {
              "documentation": "@dev Same as {_get}, with a custom error message when `key` is not in the map.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {_tryGet}.",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_get",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3717,
=======
                      "scope": 2249,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.Map",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Map",
<<<<<<< HEAD
                          "referencedDeclaration": 3410,
                          "type": "struct EMap.Map"
                        },
                        "id": 3684,
                        "name": "UserDefinedTypeName",
                        "src": "6789:3:4"
                      }
                    ],
                    "id": 3685,
                    "name": "VariableDeclaration",
                    "src": "6789:15:4"
=======
                          "referencedDeclaration": 1942,
                          "type": "struct EMap.Map"
                        },
                        "id": 2216,
                        "name": "UserDefinedTypeName",
                        "src": "6593:3:2"
                      }
                    ],
                    "id": 2217,
                    "name": "VariableDeclaration",
                    "src": "6593:15:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3717,
=======
                      "scope": 2249,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3686,
                        "name": "ElementaryTypeName",
                        "src": "6815:7:4"
                      }
                    ],
                    "id": 3687,
                    "name": "VariableDeclaration",
                    "src": "6815:11:4"
=======
                        "id": 2218,
                        "name": "ElementaryTypeName",
                        "src": "6618:7:2"
                      }
                    ],
                    "id": 2219,
                    "name": "VariableDeclaration",
                    "src": "6618:11:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "errorMessage",
<<<<<<< HEAD
                      "scope": 3717,
=======
                      "scope": 2249,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
<<<<<<< HEAD
                        "id": 3688,
                        "name": "ElementaryTypeName",
                        "src": "6837:6:4"
                      }
                    ],
                    "id": 3689,
                    "name": "VariableDeclaration",
                    "src": "6837:26:4"
                  }
                ],
                "id": 3690,
                "name": "ParameterList",
                "src": "6778:92:4"
=======
                        "id": 2220,
                        "name": "ElementaryTypeName",
                        "src": "6639:6:2"
                      }
                    ],
                    "id": 2221,
                    "name": "VariableDeclaration",
                    "src": "6639:26:2"
                  }
                ],
                "id": 2222,
                "name": "ParameterList",
                "src": "6583:88:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3717,
=======
                      "scope": 2249,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
<<<<<<< HEAD
                        "id": 3691,
                        "name": "ElementaryTypeName",
                        "src": "6893:7:4"
                      }
                    ],
                    "id": 3692,
                    "name": "VariableDeclaration",
                    "src": "6893:7:4"
                  }
                ],
                "id": 3693,
                "name": "ParameterList",
                "src": "6892:9:4"
=======
                        "id": 2223,
                        "name": "ElementaryTypeName",
                        "src": "6694:7:2"
                      }
                    ],
                    "id": 2224,
                    "name": "VariableDeclaration",
                    "src": "6694:7:2"
                  }
                ],
                "id": 2225,
                "name": "ParameterList",
                "src": "6693:9:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
<<<<<<< HEAD
                        3695
=======
                        2227
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "keyIndex",
<<<<<<< HEAD
                          "scope": 3716,
=======
                          "scope": 2248,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
<<<<<<< HEAD
                            "id": 3694,
                            "name": "ElementaryTypeName",
                            "src": "6913:7:4"
                          }
                        ],
                        "id": 3695,
                        "name": "VariableDeclaration",
                        "src": "6913:16:4"
=======
                            "id": 2226,
                            "name": "ElementaryTypeName",
                            "src": "6713:7:2"
                          }
                        ],
                        "id": 2227,
                        "name": "VariableDeclaration",
                        "src": "6713:16:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_indexes",
<<<<<<< HEAD
                              "referencedDeclaration": 3409,
=======
                              "referencedDeclaration": 1941,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "mapping(bytes32 => uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3685,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 3696,
                                "name": "Identifier",
                                "src": "6932:3:4"
                              }
                            ],
                            "id": 3697,
                            "name": "MemberAccess",
                            "src": "6932:12:4"
=======
                                  "referencedDeclaration": 2217,
                                  "type": "struct EMap.Map storage pointer",
                                  "value": "map"
                                },
                                "id": 2228,
                                "name": "Identifier",
                                "src": "6732:3:2"
                              }
                            ],
                            "id": 2229,
                            "name": "MemberAccess",
                            "src": "6732:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3687,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 3698,
                            "name": "Identifier",
                            "src": "6945:3:4"
                          }
                        ],
                        "id": 3699,
                        "name": "IndexAccess",
                        "src": "6932:17:4"
                      }
                    ],
                    "id": 3700,
                    "name": "VariableDeclarationStatement",
                    "src": "6913:36:4"
=======
                              "referencedDeclaration": 2219,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 2230,
                            "name": "Identifier",
                            "src": "6745:3:2"
                          }
                        ],
                        "id": 2231,
                        "name": "IndexAccess",
                        "src": "6732:17:2"
                      }
                    ],
                    "id": 2232,
                    "name": "VariableDeclarationStatement",
                    "src": "6713:36:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
<<<<<<< HEAD
                                6545,
                                6546
                              ],
                              "referencedDeclaration": 6546,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 3701,
                            "name": "Identifier",
                            "src": "6960:7:4"
=======
                                2922,
                                2923
                              ],
                              "referencedDeclaration": 2923,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2233,
                            "name": "Identifier",
                            "src": "6759:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3695,
                                  "type": "uint256",
                                  "value": "keyIndex"
                                },
                                "id": 3702,
                                "name": "Identifier",
                                "src": "6968:8:4"
=======
                                  "referencedDeclaration": 2227,
                                  "type": "uint256",
                                  "value": "keyIndex"
                                },
                                "id": 2234,
                                "name": "Identifier",
                                "src": "6767:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
<<<<<<< HEAD
                                "id": 3703,
                                "name": "Literal",
                                "src": "6980:1:4"
                              }
                            ],
                            "id": 3704,
                            "name": "BinaryOperation",
                            "src": "6968:13:4"
=======
                                "id": 2235,
                                "name": "Literal",
                                "src": "6779:1:2"
                              }
                            ],
                            "id": 2236,
                            "name": "BinaryOperation",
                            "src": "6767:13:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3689,
                              "type": "string memory",
                              "value": "errorMessage"
                            },
                            "id": 3705,
                            "name": "Identifier",
                            "src": "6983:12:4"
                          }
                        ],
                        "id": 3706,
                        "name": "FunctionCall",
                        "src": "6960:36:4"
                      }
                    ],
                    "id": 3707,
                    "name": "ExpressionStatement",
                    "src": "6960:36:4"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 3693
=======
                              "referencedDeclaration": 2221,
                              "type": "string memory",
                              "value": "errorMessage"
                            },
                            "id": 2237,
                            "name": "Identifier",
                            "src": "6782:12:2"
                          }
                        ],
                        "id": 2238,
                        "name": "FunctionCall",
                        "src": "6759:36:2"
                      }
                    ],
                    "id": 2239,
                    "name": "ExpressionStatement",
                    "src": "6759:36:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2225
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "_value",
<<<<<<< HEAD
                          "referencedDeclaration": 3401,
=======
                          "referencedDeclaration": 1933,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "type": "bytes32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct EMap.MapEntry storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_entries",
<<<<<<< HEAD
                                  "referencedDeclaration": 3405,
=======
                                  "referencedDeclaration": 1937,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "type": "struct EMap.MapEntry storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3685,
                                      "type": "struct EMap.Map storage pointer",
                                      "value": "map"
                                    },
                                    "id": 3708,
                                    "name": "Identifier",
                                    "src": "7050:3:4"
                                  }
                                ],
                                "id": 3709,
                                "name": "MemberAccess",
                                "src": "7050:12:4"
=======
                                      "referencedDeclaration": 2217,
                                      "type": "struct EMap.Map storage pointer",
                                      "value": "map"
                                    },
                                    "id": 2240,
                                    "name": "Identifier",
                                    "src": "6848:3:2"
                                  }
                                ],
                                "id": 2241,
                                "name": "MemberAccess",
                                "src": "6848:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "-",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3695,
                                      "type": "uint256",
                                      "value": "keyIndex"
                                    },
                                    "id": 3710,
                                    "name": "Identifier",
                                    "src": "7063:8:4"
=======
                                      "referencedDeclaration": 2227,
                                      "type": "uint256",
                                      "value": "keyIndex"
                                    },
                                    "id": 2242,
                                    "name": "Identifier",
                                    "src": "6861:8:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
<<<<<<< HEAD
                                    "id": 3711,
                                    "name": "Literal",
                                    "src": "7074:1:4"
                                  }
                                ],
                                "id": 3712,
                                "name": "BinaryOperation",
                                "src": "7063:12:4"
                              }
                            ],
                            "id": 3713,
                            "name": "IndexAccess",
                            "src": "7050:26:4"
                          }
                        ],
                        "id": 3714,
                        "name": "MemberAccess",
                        "src": "7050:33:4"
                      }
                    ],
                    "id": 3715,
                    "name": "Return",
                    "src": "7043:40:4"
                  }
                ],
                "id": 3716,
                "name": "Block",
                "src": "6902:216:4"
              }
            ],
            "id": 3717,
            "name": "FunctionDefinition",
            "src": "6765:353:4"
=======
                                    "id": 2243,
                                    "name": "Literal",
                                    "src": "6872:1:2"
                                  }
                                ],
                                "id": 2244,
                                "name": "BinaryOperation",
                                "src": "6861:12:2"
                              }
                            ],
                            "id": 2245,
                            "name": "IndexAccess",
                            "src": "6848:26:2"
                          }
                        ],
                        "id": 2246,
                        "name": "MemberAccess",
                        "src": "6848:33:2"
                      }
                    ],
                    "id": 2247,
                    "name": "Return",
                    "src": "6841:40:2"
                  }
                ],
                "id": 2248,
                "name": "Block",
                "src": "6703:212:2"
              }
            ],
            "id": 2249,
            "name": "FunctionDefinition",
            "src": "6570:345:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "canonicalName": "EMap.Label",
              "name": "Label"
            },
            "children": [
              {
                "attributes": {
                  "name": "IN"
                },
<<<<<<< HEAD
                "id": 3718,
                "name": "EnumValue",
                "src": "7157:2:4"
=======
                "id": 2250,
                "name": "EnumValue",
                "src": "6950:2:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "name": "OUT"
                },
<<<<<<< HEAD
                "id": 3719,
                "name": "EnumValue",
                "src": "7161:3:4"
=======
                "id": 2251,
                "name": "EnumValue",
                "src": "6954:3:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "name": "UNDEC"
                },
<<<<<<< HEAD
                "id": 3720,
                "name": "EnumValue",
                "src": "7166:5:4"
=======
                "id": 2252,
                "name": "EnumValue",
                "src": "6959:5:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "name": "BLANK"
                },
<<<<<<< HEAD
                "id": 3721,
                "name": "EnumValue",
                "src": "7173:5:4"
=======
                "id": 2253,
                "name": "EnumValue",
                "src": "6966:5:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "attributes": {
                  "name": "MUST_OUT"
                },
<<<<<<< HEAD
                "id": 3722,
                "name": "EnumValue",
                "src": "7180:8:4"
              }
            ],
            "id": 3723,
            "name": "EnumDefinition",
            "src": "7145:44:4"
=======
                "id": 2254,
                "name": "EnumValue",
                "src": "6973:8:2"
              }
            ],
            "id": 2255,
            "name": "EnumDefinition",
            "src": "6938:44:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
          },
          {
            "attributes": {
              "canonicalName": "EMap.LabelMap",
              "name": "LabelMap",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_inner",
<<<<<<< HEAD
                  "scope": 3726,
=======
                  "scope": 2258,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct EMap.Map",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Map",
<<<<<<< HEAD
                      "referencedDeclaration": 3410,
                      "type": "struct EMap.Map"
                    },
                    "id": 3724,
                    "name": "UserDefinedTypeName",
                    "src": "7224:3:4"
                  }
                ],
                "id": 3725,
                "name": "VariableDeclaration",
                "src": "7224:10:4"
              }
            ],
            "id": 3726,
            "name": "StructDefinition",
            "src": "7197:45:4"
          },
          {
            "attributes": {
              "documentation": "@dev Adds a key-value pair to a map, or updates the value for an existing\r\nkey. O(1).\r\n\n     * Returns true if the key was added to the map, that is if it was not\r\nalready present.\r",
=======
                      "referencedDeclaration": 1942,
                      "type": "struct EMap.Map"
                    },
                    "id": 2256,
                    "name": "UserDefinedTypeName",
                    "src": "7014:3:2"
                  }
                ],
                "id": 2257,
                "name": "VariableDeclaration",
                "src": "7014:10:2"
              }
            ],
            "id": 2258,
            "name": "StructDefinition",
            "src": "6988:43:2"
          },
          {
            "attributes": {
              "documentation": "@dev Adds a key-value pair to a map, or updates the value for an existing\nkey. O(1).\n     * Returns true if the key was added to the map, that is if it was not\nalready present.",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "set",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3751,
=======
                      "scope": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.LabelMap",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "LabelMap",
<<<<<<< HEAD
                          "referencedDeclaration": 3726,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 3727,
                        "name": "UserDefinedTypeName",
                        "src": "7501:8:4"
                      }
                    ],
                    "id": 3728,
                    "name": "VariableDeclaration",
                    "src": "7501:20:4"
=======
                          "referencedDeclaration": 2258,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 2259,
                        "name": "UserDefinedTypeName",
                        "src": "7280:8:2"
                      }
                    ],
                    "id": 2260,
                    "name": "VariableDeclaration",
                    "src": "7280:20:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3751,
=======
                      "scope": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3729,
                        "name": "ElementaryTypeName",
                        "src": "7532:7:4"
                      }
                    ],
                    "id": 3730,
                    "name": "VariableDeclaration",
                    "src": "7532:11:4"
=======
                        "id": 2261,
                        "name": "ElementaryTypeName",
                        "src": "7310:7:2"
                      }
                    ],
                    "id": 2262,
                    "name": "VariableDeclaration",
                    "src": "7310:11:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "value",
<<<<<<< HEAD
                      "scope": 3751,
=======
                      "scope": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum EMap.Label",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Label",
<<<<<<< HEAD
                          "referencedDeclaration": 3723,
                          "type": "enum EMap.Label"
                        },
                        "id": 3731,
                        "name": "UserDefinedTypeName",
                        "src": "7554:5:4"
                      }
                    ],
                    "id": 3732,
                    "name": "VariableDeclaration",
                    "src": "7554:11:4"
                  }
                ],
                "id": 3733,
                "name": "ParameterList",
                "src": "7490:82:4"
=======
                          "referencedDeclaration": 2255,
                          "type": "enum EMap.Label"
                        },
                        "id": 2263,
                        "name": "UserDefinedTypeName",
                        "src": "7331:5:2"
                      }
                    ],
                    "id": 2264,
                    "name": "VariableDeclaration",
                    "src": "7331:11:2"
                  }
                ],
                "id": 2265,
                "name": "ParameterList",
                "src": "7270:78:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3751,
=======
                      "scope": 2283,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
<<<<<<< HEAD
                        "id": 3734,
                        "name": "ElementaryTypeName",
                        "src": "7591:4:4"
                      }
                    ],
                    "id": 3735,
                    "name": "VariableDeclaration",
                    "src": "7591:4:4"
                  }
                ],
                "id": 3736,
                "name": "ParameterList",
                "src": "7590:6:4"
=======
                        "id": 2266,
                        "name": "ElementaryTypeName",
                        "src": "7367:4:2"
                      }
                    ],
                    "id": 2267,
                    "name": "VariableDeclaration",
                    "src": "7367:4:2"
                  }
                ],
                "id": 2268,
                "name": "ParameterList",
                "src": "7366:6:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "functionReturnParameters": 3736
=======
                      "functionReturnParameters": 2268
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                  "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct EMap.Map storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3471,
                              "type": "function (struct EMap.Map storage pointer,bytes32,bytes32) returns (bool)",
                              "value": "_set"
                            },
                            "id": 3737,
                            "name": "Identifier",
                            "src": "7615:4:4"
=======
                              "referencedDeclaration": 2003,
                              "type": "function (struct EMap.Map storage pointer,bytes32,bytes32) returns (bool)",
                              "value": "_set"
                            },
                            "id": 2269,
                            "name": "Identifier",
                            "src": "7390:4:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_inner",
<<<<<<< HEAD
                              "referencedDeclaration": 3725,
=======
                              "referencedDeclaration": 2257,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.Map storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3728,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 3738,
                                "name": "Identifier",
                                "src": "7620:3:4"
                              }
                            ],
                            "id": 3739,
                            "name": "MemberAccess",
                            "src": "7620:10:4"
=======
                                  "referencedDeclaration": 2260,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 2270,
                                "name": "Identifier",
                                "src": "7395:3:2"
                              }
                            ],
                            "id": 2271,
                            "name": "MemberAccess",
                            "src": "7395:10:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
<<<<<<< HEAD
                                "id": 3740,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7632:7:4"
=======
                                "id": 2272,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7407:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3730,
                                  "type": "uint256",
                                  "value": "key"
                                },
                                "id": 3741,
                                "name": "Identifier",
                                "src": "7640:3:4"
                              }
                            ],
                            "id": 3742,
                            "name": "FunctionCall",
                            "src": "7632:12:4"
=======
                                  "referencedDeclaration": 2262,
                                  "type": "uint256",
                                  "value": "key"
                                },
                                "id": 2273,
                                "name": "Identifier",
                                "src": "7415:3:2"
                              }
                            ],
                            "id": 2274,
                            "name": "FunctionCall",
                            "src": "7407:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
<<<<<<< HEAD
                                "id": 3743,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7646:7:4"
=======
                                "id": 2275,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7421:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
<<<<<<< HEAD
                                          "typeIdentifier": "t_enum$_Label_$3723",
=======
                                          "typeIdentifier": "t_enum$_Label_$2255",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "enum EMap.Label"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint256)",
                                      "value": "uint256"
                                    },
<<<<<<< HEAD
                                    "id": 3744,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "7654:7:4"
=======
                                    "id": 2276,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "7429:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3732,
                                      "type": "enum EMap.Label",
                                      "value": "value"
                                    },
                                    "id": 3745,
                                    "name": "Identifier",
                                    "src": "7662:5:4"
                                  }
                                ],
                                "id": 3746,
                                "name": "FunctionCall",
                                "src": "7654:14:4"
                              }
                            ],
                            "id": 3747,
                            "name": "FunctionCall",
                            "src": "7646:23:4"
                          }
                        ],
                        "id": 3748,
                        "name": "FunctionCall",
                        "src": "7615:55:4"
                      }
                    ],
                    "id": 3749,
                    "name": "Return",
                    "src": "7608:62:4"
                  }
                ],
                "id": 3750,
                "name": "Block",
                "src": "7597:81:4"
              }
            ],
            "id": 3751,
            "name": "FunctionDefinition",
            "src": "7478:200:4"
          },
          {
            "attributes": {
              "documentation": "@dev Removes a value from a set. O(1).\r\n\n     * Returns true if the key was removed from the map, that is if it was present.\r",
=======
                                      "referencedDeclaration": 2264,
                                      "type": "enum EMap.Label",
                                      "value": "value"
                                    },
                                    "id": 2277,
                                    "name": "Identifier",
                                    "src": "7437:5:2"
                                  }
                                ],
                                "id": 2278,
                                "name": "FunctionCall",
                                "src": "7429:14:2"
                              }
                            ],
                            "id": 2279,
                            "name": "FunctionCall",
                            "src": "7421:23:2"
                          }
                        ],
                        "id": 2280,
                        "name": "FunctionCall",
                        "src": "7390:55:2"
                      }
                    ],
                    "id": 2281,
                    "name": "Return",
                    "src": "7383:62:2"
                  }
                ],
                "id": 2282,
                "name": "Block",
                "src": "7373:79:2"
              }
            ],
            "id": 2283,
            "name": "FunctionDefinition",
            "src": "7258:194:2"
          },
          {
            "attributes": {
              "documentation": "@dev Removes a value from a set. O(1).\n     * Returns true if the key was removed from the map, that is if it was present.",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "remove",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3769,
=======
                      "scope": 2301,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.LabelMap",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "LabelMap",
<<<<<<< HEAD
                          "referencedDeclaration": 3726,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 3752,
                        "name": "UserDefinedTypeName",
                        "src": "7860:8:4"
                      }
                    ],
                    "id": 3753,
                    "name": "VariableDeclaration",
                    "src": "7860:20:4"
=======
                          "referencedDeclaration": 2258,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 2284,
                        "name": "UserDefinedTypeName",
                        "src": "7627:8:2"
                      }
                    ],
                    "id": 2285,
                    "name": "VariableDeclaration",
                    "src": "7627:20:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3769,
=======
                      "scope": 2301,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3754,
                        "name": "ElementaryTypeName",
                        "src": "7882:7:4"
                      }
                    ],
                    "id": 3755,
                    "name": "VariableDeclaration",
                    "src": "7882:11:4"
                  }
                ],
                "id": 3756,
                "name": "ParameterList",
                "src": "7859:35:4"
=======
                        "id": 2286,
                        "name": "ElementaryTypeName",
                        "src": "7649:7:2"
                      }
                    ],
                    "id": 2287,
                    "name": "VariableDeclaration",
                    "src": "7649:11:2"
                  }
                ],
                "id": 2288,
                "name": "ParameterList",
                "src": "7626:35:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3769,
=======
                      "scope": 2301,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
<<<<<<< HEAD
                        "id": 3757,
                        "name": "ElementaryTypeName",
                        "src": "7913:4:4"
                      }
                    ],
                    "id": 3758,
                    "name": "VariableDeclaration",
                    "src": "7913:4:4"
                  }
                ],
                "id": 3759,
                "name": "ParameterList",
                "src": "7912:6:4"
=======
                        "id": 2289,
                        "name": "ElementaryTypeName",
                        "src": "7680:4:2"
                      }
                    ],
                    "id": 2290,
                    "name": "VariableDeclaration",
                    "src": "7680:4:2"
                  }
                ],
                "id": 2291,
                "name": "ParameterList",
                "src": "7679:6:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "functionReturnParameters": 3759
=======
                      "functionReturnParameters": 2291
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                  "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct EMap.Map storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3551,
                              "type": "function (struct EMap.Map storage pointer,bytes32) returns (bool)",
                              "value": "_remove"
                            },
                            "id": 3760,
                            "name": "Identifier",
                            "src": "7937:7:4"
=======
                              "referencedDeclaration": 2083,
                              "type": "function (struct EMap.Map storage pointer,bytes32) returns (bool)",
                              "value": "_remove"
                            },
                            "id": 2292,
                            "name": "Identifier",
                            "src": "7703:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_inner",
<<<<<<< HEAD
                              "referencedDeclaration": 3725,
=======
                              "referencedDeclaration": 2257,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.Map storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3753,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 3761,
                                "name": "Identifier",
                                "src": "7945:3:4"
                              }
                            ],
                            "id": 3762,
                            "name": "MemberAccess",
                            "src": "7945:10:4"
=======
                                  "referencedDeclaration": 2285,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 2293,
                                "name": "Identifier",
                                "src": "7711:3:2"
                              }
                            ],
                            "id": 2294,
                            "name": "MemberAccess",
                            "src": "7711:10:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
<<<<<<< HEAD
                                "id": 3763,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7957:7:4"
=======
                                "id": 2295,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7723:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3755,
                                  "type": "uint256",
                                  "value": "key"
                                },
                                "id": 3764,
                                "name": "Identifier",
                                "src": "7965:3:4"
                              }
                            ],
                            "id": 3765,
                            "name": "FunctionCall",
                            "src": "7957:12:4"
                          }
                        ],
                        "id": 3766,
                        "name": "FunctionCall",
                        "src": "7937:33:4"
                      }
                    ],
                    "id": 3767,
                    "name": "Return",
                    "src": "7930:40:4"
                  }
                ],
                "id": 3768,
                "name": "Block",
                "src": "7919:59:4"
              }
            ],
            "id": 3769,
            "name": "FunctionDefinition",
            "src": "7844:134:4"
          },
          {
            "attributes": {
              "documentation": "@dev Returns true if the key is in the map. O(1).\r",
=======
                                  "referencedDeclaration": 2287,
                                  "type": "uint256",
                                  "value": "key"
                                },
                                "id": 2296,
                                "name": "Identifier",
                                "src": "7731:3:2"
                              }
                            ],
                            "id": 2297,
                            "name": "FunctionCall",
                            "src": "7723:12:2"
                          }
                        ],
                        "id": 2298,
                        "name": "FunctionCall",
                        "src": "7703:33:2"
                      }
                    ],
                    "id": 2299,
                    "name": "Return",
                    "src": "7696:40:2"
                  }
                ],
                "id": 2300,
                "name": "Block",
                "src": "7686:57:2"
              }
            ],
            "id": 2301,
            "name": "FunctionDefinition",
            "src": "7611:132:2"
          },
          {
            "attributes": {
              "documentation": "@dev Returns true if the key is in the map. O(1).",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "contains",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3787,
=======
                      "scope": 2319,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.LabelMap",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "LabelMap",
<<<<<<< HEAD
                          "referencedDeclaration": 3726,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 3770,
                        "name": "UserDefinedTypeName",
                        "src": "8080:8:4"
                      }
                    ],
                    "id": 3771,
                    "name": "VariableDeclaration",
                    "src": "8080:20:4"
=======
                          "referencedDeclaration": 2258,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 2302,
                        "name": "UserDefinedTypeName",
                        "src": "7840:8:2"
                      }
                    ],
                    "id": 2303,
                    "name": "VariableDeclaration",
                    "src": "7840:20:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3787,
=======
                      "scope": 2319,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3772,
                        "name": "ElementaryTypeName",
                        "src": "8102:7:4"
                      }
                    ],
                    "id": 3773,
                    "name": "VariableDeclaration",
                    "src": "8102:11:4"
                  }
                ],
                "id": 3774,
                "name": "ParameterList",
                "src": "8079:35:4"
=======
                        "id": 2304,
                        "name": "ElementaryTypeName",
                        "src": "7862:7:2"
                      }
                    ],
                    "id": 2305,
                    "name": "VariableDeclaration",
                    "src": "7862:11:2"
                  }
                ],
                "id": 2306,
                "name": "ParameterList",
                "src": "7839:35:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3787,
=======
                      "scope": 2319,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
<<<<<<< HEAD
                        "id": 3775,
                        "name": "ElementaryTypeName",
                        "src": "8165:4:4"
                      }
                    ],
                    "id": 3776,
                    "name": "VariableDeclaration",
                    "src": "8165:4:4"
                  }
                ],
                "id": 3777,
                "name": "ParameterList",
                "src": "8164:6:4"
=======
                        "id": 2307,
                        "name": "ElementaryTypeName",
                        "src": "7922:4:2"
                      }
                    ],
                    "id": 2308,
                    "name": "VariableDeclaration",
                    "src": "7922:4:2"
                  }
                ],
                "id": 2309,
                "name": "ParameterList",
                "src": "7921:6:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "functionReturnParameters": 3777
=======
                      "functionReturnParameters": 2309
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                  "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct EMap.Map storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3568,
                              "type": "function (struct EMap.Map storage pointer,bytes32) view returns (bool)",
                              "value": "_contains"
                            },
                            "id": 3778,
                            "name": "Identifier",
                            "src": "8194:9:4"
=======
                              "referencedDeclaration": 2100,
                              "type": "function (struct EMap.Map storage pointer,bytes32) view returns (bool)",
                              "value": "_contains"
                            },
                            "id": 2310,
                            "name": "Identifier",
                            "src": "7949:9:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_inner",
<<<<<<< HEAD
                              "referencedDeclaration": 3725,
=======
                              "referencedDeclaration": 2257,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.Map storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3771,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 3779,
                                "name": "Identifier",
                                "src": "8204:3:4"
                              }
                            ],
                            "id": 3780,
                            "name": "MemberAccess",
                            "src": "8204:10:4"
=======
                                  "referencedDeclaration": 2303,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 2311,
                                "name": "Identifier",
                                "src": "7959:3:2"
                              }
                            ],
                            "id": 2312,
                            "name": "MemberAccess",
                            "src": "7959:10:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
<<<<<<< HEAD
                                "id": 3781,
                                "name": "ElementaryTypeNameExpression",
                                "src": "8216:7:4"
=======
                                "id": 2313,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7971:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3773,
                                  "type": "uint256",
                                  "value": "key"
                                },
                                "id": 3782,
                                "name": "Identifier",
                                "src": "8224:3:4"
                              }
                            ],
                            "id": 3783,
                            "name": "FunctionCall",
                            "src": "8216:12:4"
                          }
                        ],
                        "id": 3784,
                        "name": "FunctionCall",
                        "src": "8194:35:4"
                      }
                    ],
                    "id": 3785,
                    "name": "Return",
                    "src": "8187:42:4"
                  }
                ],
                "id": 3786,
                "name": "Block",
                "src": "8176:61:4"
              }
            ],
            "id": 3787,
            "name": "FunctionDefinition",
            "src": "8062:175:4"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the number of elements in the map. O(1).\r",
=======
                                  "referencedDeclaration": 2305,
                                  "type": "uint256",
                                  "value": "key"
                                },
                                "id": 2314,
                                "name": "Identifier",
                                "src": "7979:3:2"
                              }
                            ],
                            "id": 2315,
                            "name": "FunctionCall",
                            "src": "7971:12:2"
                          }
                        ],
                        "id": 2316,
                        "name": "FunctionCall",
                        "src": "7949:35:2"
                      }
                    ],
                    "id": 2317,
                    "name": "Return",
                    "src": "7942:42:2"
                  }
                ],
                "id": 2318,
                "name": "Block",
                "src": "7932:59:2"
              }
            ],
            "id": 2319,
            "name": "FunctionDefinition",
            "src": "7822:169:2"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the number of elements in the map. O(1).",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "length",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3800,
=======
                      "scope": 2332,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.LabelMap",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "LabelMap",
<<<<<<< HEAD
                          "referencedDeclaration": 3726,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 3788,
                        "name": "UserDefinedTypeName",
                        "src": "8341:8:4"
                      }
                    ],
                    "id": 3789,
                    "name": "VariableDeclaration",
                    "src": "8341:20:4"
                  }
                ],
                "id": 3790,
                "name": "ParameterList",
                "src": "8340:22:4"
=======
                          "referencedDeclaration": 2258,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 2320,
                        "name": "UserDefinedTypeName",
                        "src": "8090:8:2"
                      }
                    ],
                    "id": 2321,
                    "name": "VariableDeclaration",
                    "src": "8090:20:2"
                  }
                ],
                "id": 2322,
                "name": "ParameterList",
                "src": "8089:22:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3800,
=======
                      "scope": 2332,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3791,
                        "name": "ElementaryTypeName",
                        "src": "8386:7:4"
                      }
                    ],
                    "id": 3792,
                    "name": "VariableDeclaration",
                    "src": "8386:7:4"
                  }
                ],
                "id": 3793,
                "name": "ParameterList",
                "src": "8385:9:4"
=======
                        "id": 2323,
                        "name": "ElementaryTypeName",
                        "src": "8135:7:2"
                      }
                    ],
                    "id": 2324,
                    "name": "VariableDeclaration",
                    "src": "8135:7:2"
                  }
                ],
                "id": 2325,
                "name": "ParameterList",
                "src": "8134:9:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "functionReturnParameters": 3793
=======
                      "functionReturnParameters": 2325
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                  "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct EMap.Map storage ref"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3580,
                              "type": "function (struct EMap.Map storage pointer) view returns (uint256)",
                              "value": "_length"
                            },
                            "id": 3794,
                            "name": "Identifier",
                            "src": "8413:7:4"
=======
                              "referencedDeclaration": 2112,
                              "type": "function (struct EMap.Map storage pointer) view returns (uint256)",
                              "value": "_length"
                            },
                            "id": 2326,
                            "name": "Identifier",
                            "src": "8161:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_inner",
<<<<<<< HEAD
                              "referencedDeclaration": 3725,
=======
                              "referencedDeclaration": 2257,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.Map storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3789,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 3795,
                                "name": "Identifier",
                                "src": "8421:3:4"
                              }
                            ],
                            "id": 3796,
                            "name": "MemberAccess",
                            "src": "8421:10:4"
                          }
                        ],
                        "id": 3797,
                        "name": "FunctionCall",
                        "src": "8413:19:4"
                      }
                    ],
                    "id": 3798,
                    "name": "Return",
                    "src": "8406:26:4"
                  }
                ],
                "id": 3799,
                "name": "Block",
                "src": "8395:45:4"
              }
            ],
            "id": 3800,
            "name": "FunctionDefinition",
            "src": "8325:115:4"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the element stored at position `index` in the set. O(1).\r\nNote that there are no guarantees on the ordering of values inside the\r\narray, and it may change when more values are added or removed.\r\n\n     * Requirements:\r\n\n     * - `index` must be strictly less than {length}.\r",
=======
                                  "referencedDeclaration": 2321,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 2327,
                                "name": "Identifier",
                                "src": "8169:3:2"
                              }
                            ],
                            "id": 2328,
                            "name": "MemberAccess",
                            "src": "8169:10:2"
                          }
                        ],
                        "id": 2329,
                        "name": "FunctionCall",
                        "src": "8161:19:2"
                      }
                    ],
                    "id": 2330,
                    "name": "Return",
                    "src": "8154:26:2"
                  }
                ],
                "id": 2331,
                "name": "Block",
                "src": "8144:43:2"
              }
            ],
            "id": 2332,
            "name": "FunctionDefinition",
            "src": "8074:113:2"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the element stored at position `index` in the set. O(1).\nNote that there are no guarantees on the ordering of values inside the\narray, and it may change when more values are added or removed.\n     * Requirements:\n     * - `index` must be strictly less than {length}.",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "at",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3832,
=======
                      "scope": 2364,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.LabelMap",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "LabelMap",
<<<<<<< HEAD
                          "referencedDeclaration": 3726,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 3801,
                        "name": "UserDefinedTypeName",
                        "src": "8800:8:4"
                      }
                    ],
                    "id": 3802,
                    "name": "VariableDeclaration",
                    "src": "8800:20:4"
=======
                          "referencedDeclaration": 2258,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 2333,
                        "name": "UserDefinedTypeName",
                        "src": "8536:8:2"
                      }
                    ],
                    "id": 2334,
                    "name": "VariableDeclaration",
                    "src": "8536:20:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
<<<<<<< HEAD
                      "scope": 3832,
=======
                      "scope": 2364,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3803,
                        "name": "ElementaryTypeName",
                        "src": "8822:7:4"
                      }
                    ],
                    "id": 3804,
                    "name": "VariableDeclaration",
                    "src": "8822:13:4"
                  }
                ],
                "id": 3805,
                "name": "ParameterList",
                "src": "8799:37:4"
=======
                        "id": 2335,
                        "name": "ElementaryTypeName",
                        "src": "8558:7:2"
                      }
                    ],
                    "id": 2336,
                    "name": "VariableDeclaration",
                    "src": "8558:13:2"
                  }
                ],
                "id": 2337,
                "name": "ParameterList",
                "src": "8535:37:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3832,
=======
                      "scope": 2364,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3806,
                        "name": "ElementaryTypeName",
                        "src": "8887:7:4"
                      }
                    ],
                    "id": 3807,
                    "name": "VariableDeclaration",
                    "src": "8887:7:4"
=======
                        "id": 2338,
                        "name": "ElementaryTypeName",
                        "src": "8620:7:2"
                      }
                    ],
                    "id": 2339,
                    "name": "VariableDeclaration",
                    "src": "8620:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3832,
=======
                      "scope": 2364,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum EMap.Label",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Label",
<<<<<<< HEAD
                          "referencedDeclaration": 3723,
                          "type": "enum EMap.Label"
                        },
                        "id": 3808,
                        "name": "UserDefinedTypeName",
                        "src": "8896:5:4"
                      }
                    ],
                    "id": 3809,
                    "name": "VariableDeclaration",
                    "src": "8896:5:4"
                  }
                ],
                "id": 3810,
                "name": "ParameterList",
                "src": "8886:16:4"
=======
                          "referencedDeclaration": 2255,
                          "type": "enum EMap.Label"
                        },
                        "id": 2340,
                        "name": "UserDefinedTypeName",
                        "src": "8629:5:2"
                      }
                    ],
                    "id": 2341,
                    "name": "VariableDeclaration",
                    "src": "8629:5:2"
                  }
                ],
                "id": 2342,
                "name": "ParameterList",
                "src": "8619:16:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
<<<<<<< HEAD
                        3812,
                        3814
=======
                        2344,
                        2346
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
<<<<<<< HEAD
                          "scope": 3831,
=======
                          "scope": 2363,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
<<<<<<< HEAD
                            "id": 3811,
                            "name": "ElementaryTypeName",
                            "src": "8920:7:4"
                          }
                        ],
                        "id": 3812,
                        "name": "VariableDeclaration",
                        "src": "8920:11:4"
=======
                            "id": 2343,
                            "name": "ElementaryTypeName",
                            "src": "8651:7:2"
                          }
                        ],
                        "id": 2344,
                        "name": "VariableDeclaration",
                        "src": "8651:11:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
<<<<<<< HEAD
                          "scope": 3831,
=======
                          "scope": 2363,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
<<<<<<< HEAD
                            "id": 3813,
                            "name": "ElementaryTypeName",
                            "src": "8933:7:4"
                          }
                        ],
                        "id": 3814,
                        "name": "VariableDeclaration",
                        "src": "8933:13:4"
=======
                            "id": 2345,
                            "name": "ElementaryTypeName",
                            "src": "8664:7:2"
                          }
                        ],
                        "id": 2346,
                        "name": "VariableDeclaration",
                        "src": "8664:13:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple(bytes32,bytes32)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                  "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct EMap.Map storage ref"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3614,
                              "type": "function (struct EMap.Map storage pointer,uint256) view returns (bytes32,bytes32)",
                              "value": "_at"
                            },
                            "id": 3815,
                            "name": "Identifier",
                            "src": "8950:3:4"
=======
                              "referencedDeclaration": 2146,
                              "type": "function (struct EMap.Map storage pointer,uint256) view returns (bytes32,bytes32)",
                              "value": "_at"
                            },
                            "id": 2347,
                            "name": "Identifier",
                            "src": "8681:3:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_inner",
<<<<<<< HEAD
                              "referencedDeclaration": 3725,
=======
                              "referencedDeclaration": 2257,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.Map storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3802,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 3816,
                                "name": "Identifier",
                                "src": "8954:3:4"
                              }
                            ],
                            "id": 3817,
                            "name": "MemberAccess",
                            "src": "8954:10:4"
=======
                                  "referencedDeclaration": 2334,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 2348,
                                "name": "Identifier",
                                "src": "8685:3:2"
                              }
                            ],
                            "id": 2349,
                            "name": "MemberAccess",
                            "src": "8685:10:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3804,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 3818,
                            "name": "Identifier",
                            "src": "8966:5:4"
                          }
                        ],
                        "id": 3819,
                        "name": "FunctionCall",
                        "src": "8950:22:4"
                      }
                    ],
                    "id": 3820,
                    "name": "VariableDeclarationStatement",
                    "src": "8919:53:4"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 3810
=======
                              "referencedDeclaration": 2336,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 2350,
                            "name": "Identifier",
                            "src": "8697:5:2"
                          }
                        ],
                        "id": 2351,
                        "name": "FunctionCall",
                        "src": "8681:22:2"
                      }
                    ],
                    "id": 2352,
                    "name": "VariableDeclarationStatement",
                    "src": "8650:53:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2342
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(uint256,enum EMap.Label)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
<<<<<<< HEAD
                                "id": 3821,
                                "name": "ElementaryTypeNameExpression",
                                "src": "8991:7:4"
=======
                                "id": 2353,
                                "name": "ElementaryTypeNameExpression",
                                "src": "8721:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3812,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 3822,
                                "name": "Identifier",
                                "src": "8999:3:4"
                              }
                            ],
                            "id": 3823,
                            "name": "FunctionCall",
                            "src": "8991:12:4"
=======
                                  "referencedDeclaration": 2344,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 2354,
                                "name": "Identifier",
                                "src": "8729:3:2"
                              }
                            ],
                            "id": 2355,
                            "name": "FunctionCall",
                            "src": "8721:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "enum EMap.Label",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3723,
                                  "type": "type(enum EMap.Label)",
                                  "value": "Label"
                                },
                                "id": 3824,
                                "name": "Identifier",
                                "src": "9005:5:4"
=======
                                  "referencedDeclaration": 2255,
                                  "type": "type(enum EMap.Label)",
                                  "value": "Label"
                                },
                                "id": 2356,
                                "name": "Identifier",
                                "src": "8735:5:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint256)",
                                      "value": "uint256"
                                    },
<<<<<<< HEAD
                                    "id": 3825,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "9011:7:4"
=======
                                    "id": 2357,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "8741:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3814,
                                      "type": "bytes32",
                                      "value": "value"
                                    },
                                    "id": 3826,
                                    "name": "Identifier",
                                    "src": "9019:5:4"
                                  }
                                ],
                                "id": 3827,
                                "name": "FunctionCall",
                                "src": "9011:14:4"
                              }
                            ],
                            "id": 3828,
                            "name": "FunctionCall",
                            "src": "9005:21:4"
                          }
                        ],
                        "id": 3829,
                        "name": "TupleExpression",
                        "src": "8990:37:4"
                      }
                    ],
                    "id": 3830,
                    "name": "Return",
                    "src": "8983:44:4"
                  }
                ],
                "id": 3831,
                "name": "Block",
                "src": "8908:127:4"
              }
            ],
            "id": 3832,
            "name": "FunctionDefinition",
            "src": "8788:247:4"
          },
          {
            "attributes": {
              "documentation": "@dev Tries to returns the value associated with `key`.  O(1).\r\nDoes not revert if `key` is not in the map.\r\n\n     * _Available since v3.4._\r",
=======
                                      "referencedDeclaration": 2346,
                                      "type": "bytes32",
                                      "value": "value"
                                    },
                                    "id": 2358,
                                    "name": "Identifier",
                                    "src": "8749:5:2"
                                  }
                                ],
                                "id": 2359,
                                "name": "FunctionCall",
                                "src": "8741:14:2"
                              }
                            ],
                            "id": 2360,
                            "name": "FunctionCall",
                            "src": "8735:21:2"
                          }
                        ],
                        "id": 2361,
                        "name": "TupleExpression",
                        "src": "8720:37:2"
                      }
                    ],
                    "id": 2362,
                    "name": "Return",
                    "src": "8713:44:2"
                  }
                ],
                "id": 2363,
                "name": "Block",
                "src": "8640:124:2"
              }
            ],
            "id": 2364,
            "name": "FunctionDefinition",
            "src": "8524:240:2"
          },
          {
            "attributes": {
              "documentation": "@dev Tries to returns the value associated with `key`.  O(1).\nDoes not revert if `key` is not in the map.\n     * _Available since v3.4._",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "tryGet",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3864,
=======
                      "scope": 2396,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.LabelMap",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "LabelMap",
<<<<<<< HEAD
                          "referencedDeclaration": 3726,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 3833,
                        "name": "UserDefinedTypeName",
                        "src": "9239:8:4"
                      }
                    ],
                    "id": 3834,
                    "name": "VariableDeclaration",
                    "src": "9239:20:4"
=======
                          "referencedDeclaration": 2258,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 2365,
                        "name": "UserDefinedTypeName",
                        "src": "8960:8:2"
                      }
                    ],
                    "id": 2366,
                    "name": "VariableDeclaration",
                    "src": "8960:20:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3864,
=======
                      "scope": 2396,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3835,
                        "name": "ElementaryTypeName",
                        "src": "9261:7:4"
                      }
                    ],
                    "id": 3836,
                    "name": "VariableDeclaration",
                    "src": "9261:11:4"
                  }
                ],
                "id": 3837,
                "name": "ParameterList",
                "src": "9238:35:4"
=======
                        "id": 2367,
                        "name": "ElementaryTypeName",
                        "src": "8982:7:2"
                      }
                    ],
                    "id": 2368,
                    "name": "VariableDeclaration",
                    "src": "8982:11:2"
                  }
                ],
                "id": 2369,
                "name": "ParameterList",
                "src": "8959:35:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3864,
=======
                      "scope": 2396,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
<<<<<<< HEAD
                        "id": 3838,
                        "name": "ElementaryTypeName",
                        "src": "9324:4:4"
                      }
                    ],
                    "id": 3839,
                    "name": "VariableDeclaration",
                    "src": "9324:4:4"
=======
                        "id": 2370,
                        "name": "ElementaryTypeName",
                        "src": "9042:4:2"
                      }
                    ],
                    "id": 2371,
                    "name": "VariableDeclaration",
                    "src": "9042:4:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3864,
=======
                      "scope": 2396,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum EMap.Label",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Label",
<<<<<<< HEAD
                          "referencedDeclaration": 3723,
                          "type": "enum EMap.Label"
                        },
                        "id": 3840,
                        "name": "UserDefinedTypeName",
                        "src": "9330:5:4"
                      }
                    ],
                    "id": 3841,
                    "name": "VariableDeclaration",
                    "src": "9330:5:4"
                  }
                ],
                "id": 3842,
                "name": "ParameterList",
                "src": "9323:13:4"
=======
                          "referencedDeclaration": 2255,
                          "type": "enum EMap.Label"
                        },
                        "id": 2372,
                        "name": "UserDefinedTypeName",
                        "src": "9048:5:2"
                      }
                    ],
                    "id": 2373,
                    "name": "VariableDeclaration",
                    "src": "9048:5:2"
                  }
                ],
                "id": 2374,
                "name": "ParameterList",
                "src": "9041:13:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
<<<<<<< HEAD
                        3844,
                        3846
=======
                        2376,
                        2378
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "success",
<<<<<<< HEAD
                          "scope": 3863,
=======
                          "scope": 2395,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
<<<<<<< HEAD
                            "id": 3843,
                            "name": "ElementaryTypeName",
                            "src": "9354:4:4"
                          }
                        ],
                        "id": 3844,
                        "name": "VariableDeclaration",
                        "src": "9354:12:4"
=======
                            "id": 2375,
                            "name": "ElementaryTypeName",
                            "src": "9070:4:2"
                          }
                        ],
                        "id": 2376,
                        "name": "VariableDeclaration",
                        "src": "9070:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "value",
<<<<<<< HEAD
                          "scope": 3863,
=======
                          "scope": 2395,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
<<<<<<< HEAD
                            "id": 3845,
                            "name": "ElementaryTypeName",
                            "src": "9368:7:4"
                          }
                        ],
                        "id": 3846,
                        "name": "VariableDeclaration",
                        "src": "9368:13:4"
=======
                            "id": 2377,
                            "name": "ElementaryTypeName",
                            "src": "9084:7:2"
                          }
                        ],
                        "id": 2378,
                        "name": "VariableDeclaration",
                        "src": "9084:13:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple(bool,bytes32)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                  "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  "typeString": "struct EMap.Map storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3651,
                              "type": "function (struct EMap.Map storage pointer,bytes32) view returns (bool,bytes32)",
                              "value": "_tryGet"
                            },
                            "id": 3847,
                            "name": "Identifier",
                            "src": "9385:7:4"
=======
                              "referencedDeclaration": 2183,
                              "type": "function (struct EMap.Map storage pointer,bytes32) view returns (bool,bytes32)",
                              "value": "_tryGet"
                            },
                            "id": 2379,
                            "name": "Identifier",
                            "src": "9101:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_inner",
<<<<<<< HEAD
                              "referencedDeclaration": 3725,
=======
                              "referencedDeclaration": 2257,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              "type": "struct EMap.Map storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3834,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 3848,
                                "name": "Identifier",
                                "src": "9393:3:4"
                              }
                            ],
                            "id": 3849,
                            "name": "MemberAccess",
                            "src": "9393:10:4"
=======
                                  "referencedDeclaration": 2366,
                                  "type": "struct EMap.LabelMap storage pointer",
                                  "value": "map"
                                },
                                "id": 2380,
                                "name": "Identifier",
                                "src": "9109:3:2"
                              }
                            ],
                            "id": 2381,
                            "name": "MemberAccess",
                            "src": "9109:10:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
<<<<<<< HEAD
                                "id": 3850,
                                "name": "ElementaryTypeNameExpression",
                                "src": "9405:7:4"
=======
                                "id": 2382,
                                "name": "ElementaryTypeNameExpression",
                                "src": "9121:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3836,
                                  "type": "uint256",
                                  "value": "key"
                                },
                                "id": 3851,
                                "name": "Identifier",
                                "src": "9413:3:4"
                              }
                            ],
                            "id": 3852,
                            "name": "FunctionCall",
                            "src": "9405:12:4"
                          }
                        ],
                        "id": 3853,
                        "name": "FunctionCall",
                        "src": "9385:33:4"
                      }
                    ],
                    "id": 3854,
                    "name": "VariableDeclarationStatement",
                    "src": "9353:65:4"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 3842
=======
                                  "referencedDeclaration": 2368,
                                  "type": "uint256",
                                  "value": "key"
                                },
                                "id": 2383,
                                "name": "Identifier",
                                "src": "9129:3:2"
                              }
                            ],
                            "id": 2384,
                            "name": "FunctionCall",
                            "src": "9121:12:2"
                          }
                        ],
                        "id": 2385,
                        "name": "FunctionCall",
                        "src": "9101:33:2"
                      }
                    ],
                    "id": 2386,
                    "name": "VariableDeclarationStatement",
                    "src": "9069:65:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2374
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(bool,enum EMap.Label)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3844,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 3855,
                            "name": "Identifier",
                            "src": "9437:7:4"
=======
                              "referencedDeclaration": 2376,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 2387,
                            "name": "Identifier",
                            "src": "9152:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "enum EMap.Label",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 3723,
                                  "type": "type(enum EMap.Label)",
                                  "value": "Label"
                                },
                                "id": 3856,
                                "name": "Identifier",
                                "src": "9446:5:4"
=======
                                  "referencedDeclaration": 2255,
                                  "type": "type(enum EMap.Label)",
                                  "value": "Label"
                                },
                                "id": 2388,
                                "name": "Identifier",
                                "src": "9161:5:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(uint256)",
                                      "value": "uint256"
                                    },
<<<<<<< HEAD
                                    "id": 3857,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "9452:7:4"
=======
                                    "id": 2389,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "9167:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3846,
                                      "type": "bytes32",
                                      "value": "value"
                                    },
                                    "id": 3858,
                                    "name": "Identifier",
                                    "src": "9460:5:4"
                                  }
                                ],
                                "id": 3859,
                                "name": "FunctionCall",
                                "src": "9452:14:4"
                              }
                            ],
                            "id": 3860,
                            "name": "FunctionCall",
                            "src": "9446:21:4"
                          }
                        ],
                        "id": 3861,
                        "name": "TupleExpression",
                        "src": "9436:32:4"
                      }
                    ],
                    "id": 3862,
                    "name": "Return",
                    "src": "9429:39:4"
                  }
                ],
                "id": 3863,
                "name": "Block",
                "src": "9342:134:4"
              }
            ],
            "id": 3864,
            "name": "FunctionDefinition",
            "src": "9223:253:4"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the value associated with `key`.  O(1).\r\n\n     * Requirements:\r\n\n     * - `key` must be in the map.\r",
=======
                                      "referencedDeclaration": 2378,
                                      "type": "bytes32",
                                      "value": "value"
                                    },
                                    "id": 2390,
                                    "name": "Identifier",
                                    "src": "9175:5:2"
                                  }
                                ],
                                "id": 2391,
                                "name": "FunctionCall",
                                "src": "9167:14:2"
                              }
                            ],
                            "id": 2392,
                            "name": "FunctionCall",
                            "src": "9161:21:2"
                          }
                        ],
                        "id": 2393,
                        "name": "TupleExpression",
                        "src": "9151:32:2"
                      }
                    ],
                    "id": 2394,
                    "name": "Return",
                    "src": "9144:39:2"
                  }
                ],
                "id": 2395,
                "name": "Block",
                "src": "9059:131:2"
              }
            ],
            "id": 2396,
            "name": "FunctionDefinition",
            "src": "8944:246:2"
          },
          {
            "attributes": {
              "documentation": "@dev Returns the value associated with `key`.  O(1).\n     * Requirements:\n     * - `key` must be in the map.",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "get",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3886,
=======
                      "scope": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.LabelMap",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "LabelMap",
<<<<<<< HEAD
                          "referencedDeclaration": 3726,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 3865,
                        "name": "UserDefinedTypeName",
                        "src": "9650:8:4"
                      }
                    ],
                    "id": 3866,
                    "name": "VariableDeclaration",
                    "src": "9650:20:4"
=======
                          "referencedDeclaration": 2258,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 2397,
                        "name": "UserDefinedTypeName",
                        "src": "9355:8:2"
                      }
                    ],
                    "id": 2398,
                    "name": "VariableDeclaration",
                    "src": "9355:20:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3886,
=======
                      "scope": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3867,
                        "name": "ElementaryTypeName",
                        "src": "9672:7:4"
                      }
                    ],
                    "id": 3868,
                    "name": "VariableDeclaration",
                    "src": "9672:11:4"
                  }
                ],
                "id": 3869,
                "name": "ParameterList",
                "src": "9649:35:4"
=======
                        "id": 2399,
                        "name": "ElementaryTypeName",
                        "src": "9377:7:2"
                      }
                    ],
                    "id": 2400,
                    "name": "VariableDeclaration",
                    "src": "9377:11:2"
                  }
                ],
                "id": 2401,
                "name": "ParameterList",
                "src": "9354:35:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3886,
=======
                      "scope": 2418,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum EMap.Label",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Label",
<<<<<<< HEAD
                          "referencedDeclaration": 3723,
                          "type": "enum EMap.Label"
                        },
                        "id": 3870,
                        "name": "UserDefinedTypeName",
                        "src": "9735:5:4"
                      }
                    ],
                    "id": 3871,
                    "name": "VariableDeclaration",
                    "src": "9735:5:4"
                  }
                ],
                "id": 3872,
                "name": "ParameterList",
                "src": "9734:7:4"
=======
                          "referencedDeclaration": 2255,
                          "type": "enum EMap.Label"
                        },
                        "id": 2402,
                        "name": "UserDefinedTypeName",
                        "src": "9437:5:2"
                      }
                    ],
                    "id": 2403,
                    "name": "VariableDeclaration",
                    "src": "9437:5:2"
                  }
                ],
                "id": 2404,
                "name": "ParameterList",
                "src": "9436:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "functionReturnParameters": 3872
=======
                      "functionReturnParameters": 2404
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "enum EMap.Label",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3723,
                              "type": "type(enum EMap.Label)",
                              "value": "Label"
                            },
                            "id": 3873,
                            "name": "Identifier",
                            "src": "9765:5:4"
=======
                              "referencedDeclaration": 2255,
                              "type": "type(enum EMap.Label)",
                              "value": "Label"
                            },
                            "id": 2405,
                            "name": "Identifier",
                            "src": "9465:5:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
<<<<<<< HEAD
                                "id": 3874,
                                "name": "ElementaryTypeNameExpression",
                                "src": "9771:7:4"
=======
                                "id": 2406,
                                "name": "ElementaryTypeNameExpression",
                                "src": "9471:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
<<<<<<< HEAD
                                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct EMap.Map storage ref"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "overloadedDeclarations": [
<<<<<<< HEAD
                                        3683,
                                        3717
                                      ],
                                      "referencedDeclaration": 3683,
                                      "type": "function (struct EMap.Map storage pointer,bytes32) view returns (bytes32)",
                                      "value": "_get"
                                    },
                                    "id": 3875,
                                    "name": "Identifier",
                                    "src": "9779:4:4"
=======
                                        2215,
                                        2249
                                      ],
                                      "referencedDeclaration": 2215,
                                      "type": "function (struct EMap.Map storage pointer,bytes32) view returns (bytes32)",
                                      "value": "_get"
                                    },
                                    "id": 2407,
                                    "name": "Identifier",
                                    "src": "9479:4:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "_inner",
<<<<<<< HEAD
                                      "referencedDeclaration": 3725,
=======
                                      "referencedDeclaration": 2257,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct EMap.Map storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3866,
                                          "type": "struct EMap.LabelMap storage pointer",
                                          "value": "map"
                                        },
                                        "id": 3876,
                                        "name": "Identifier",
                                        "src": "9784:3:4"
                                      }
                                    ],
                                    "id": 3877,
                                    "name": "MemberAccess",
                                    "src": "9784:10:4"
=======
                                          "referencedDeclaration": 2398,
                                          "type": "struct EMap.LabelMap storage pointer",
                                          "value": "map"
                                        },
                                        "id": 2408,
                                        "name": "Identifier",
                                        "src": "9484:3:2"
                                      }
                                    ],
                                    "id": 2409,
                                    "name": "MemberAccess",
                                    "src": "9484:10:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes32)",
                                          "value": "bytes32"
                                        },
<<<<<<< HEAD
                                        "id": 3878,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "9796:7:4"
=======
                                        "id": 2410,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "9496:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3868,
                                          "type": "uint256",
                                          "value": "key"
                                        },
                                        "id": 3879,
                                        "name": "Identifier",
                                        "src": "9804:3:4"
                                      }
                                    ],
                                    "id": 3880,
                                    "name": "FunctionCall",
                                    "src": "9796:12:4"
                                  }
                                ],
                                "id": 3881,
                                "name": "FunctionCall",
                                "src": "9779:30:4"
                              }
                            ],
                            "id": 3882,
                            "name": "FunctionCall",
                            "src": "9771:39:4"
                          }
                        ],
                        "id": 3883,
                        "name": "FunctionCall",
                        "src": "9765:46:4"
                      }
                    ],
                    "id": 3884,
                    "name": "Return",
                    "src": "9758:53:4"
                  }
                ],
                "id": 3885,
                "name": "Block",
                "src": "9747:72:4"
              }
            ],
            "id": 3886,
            "name": "FunctionDefinition",
            "src": "9637:182:4"
          },
          {
            "attributes": {
              "documentation": "@dev Same as {get}, with a custom error message when `key` is not in the map.\r\n\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\nmessage unnecessarily. For custom revert reasons use {tryGet}.\r",
=======
                                          "referencedDeclaration": 2400,
                                          "type": "uint256",
                                          "value": "key"
                                        },
                                        "id": 2411,
                                        "name": "Identifier",
                                        "src": "9504:3:2"
                                      }
                                    ],
                                    "id": 2412,
                                    "name": "FunctionCall",
                                    "src": "9496:12:2"
                                  }
                                ],
                                "id": 2413,
                                "name": "FunctionCall",
                                "src": "9479:30:2"
                              }
                            ],
                            "id": 2414,
                            "name": "FunctionCall",
                            "src": "9471:39:2"
                          }
                        ],
                        "id": 2415,
                        "name": "FunctionCall",
                        "src": "9465:46:2"
                      }
                    ],
                    "id": 2416,
                    "name": "Return",
                    "src": "9458:53:2"
                  }
                ],
                "id": 2417,
                "name": "Block",
                "src": "9448:70:2"
              }
            ],
            "id": 2418,
            "name": "FunctionDefinition",
            "src": "9342:176:2"
          },
          {
            "attributes": {
              "documentation": "@dev Same as {get}, with a custom error message when `key` is not in the map.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryGet}.",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "get",
<<<<<<< HEAD
              "scope": 3912,
=======
              "scope": 2444,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "map",
<<<<<<< HEAD
                      "scope": 3911,
=======
                      "scope": 2443,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct EMap.LabelMap",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "LabelMap",
<<<<<<< HEAD
                          "referencedDeclaration": 3726,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 3887,
                        "name": "UserDefinedTypeName",
                        "src": "10130:8:4"
                      }
                    ],
                    "id": 3888,
                    "name": "VariableDeclaration",
                    "src": "10130:20:4"
=======
                          "referencedDeclaration": 2258,
                          "type": "struct EMap.LabelMap"
                        },
                        "id": 2419,
                        "name": "UserDefinedTypeName",
                        "src": "9820:8:2"
                      }
                    ],
                    "id": 2420,
                    "name": "VariableDeclaration",
                    "src": "9820:20:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
<<<<<<< HEAD
                      "scope": 3911,
=======
                      "scope": 2443,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 3889,
                        "name": "ElementaryTypeName",
                        "src": "10161:7:4"
                      }
                    ],
                    "id": 3890,
                    "name": "VariableDeclaration",
                    "src": "10161:11:4"
=======
                        "id": 2421,
                        "name": "ElementaryTypeName",
                        "src": "9850:7:2"
                      }
                    ],
                    "id": 2422,
                    "name": "VariableDeclaration",
                    "src": "9850:11:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "errorMessage",
<<<<<<< HEAD
                      "scope": 3911,
=======
                      "scope": 2443,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
<<<<<<< HEAD
                        "id": 3891,
                        "name": "ElementaryTypeName",
                        "src": "10183:6:4"
                      }
                    ],
                    "id": 3892,
                    "name": "VariableDeclaration",
                    "src": "10183:26:4"
                  }
                ],
                "id": 3893,
                "name": "ParameterList",
                "src": "10119:97:4"
=======
                        "id": 2423,
                        "name": "ElementaryTypeName",
                        "src": "9871:6:2"
                      }
                    ],
                    "id": 2424,
                    "name": "VariableDeclaration",
                    "src": "9871:26:2"
                  }
                ],
                "id": 2425,
                "name": "ParameterList",
                "src": "9810:93:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 3911,
=======
                      "scope": 2443,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum EMap.Label",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Label",
<<<<<<< HEAD
                          "referencedDeclaration": 3723,
                          "type": "enum EMap.Label"
                        },
                        "id": 3894,
                        "name": "UserDefinedTypeName",
                        "src": "10240:5:4"
                      }
                    ],
                    "id": 3895,
                    "name": "VariableDeclaration",
                    "src": "10240:5:4"
                  }
                ],
                "id": 3896,
                "name": "ParameterList",
                "src": "10239:7:4"
=======
                          "referencedDeclaration": 2255,
                          "type": "enum EMap.Label"
                        },
                        "id": 2426,
                        "name": "UserDefinedTypeName",
                        "src": "9927:5:2"
                      }
                    ],
                    "id": 2427,
                    "name": "VariableDeclaration",
                    "src": "9927:5:2"
                  }
                ],
                "id": 2428,
                "name": "ParameterList",
                "src": "9926:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "functionReturnParameters": 3896
=======
                      "functionReturnParameters": 2428
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "enum EMap.Label",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 3723,
                              "type": "type(enum EMap.Label)",
                              "value": "Label"
                            },
                            "id": 3897,
                            "name": "Identifier",
                            "src": "10265:5:4"
=======
                              "referencedDeclaration": 2255,
                              "type": "type(enum EMap.Label)",
                              "value": "Label"
                            },
                            "id": 2429,
                            "name": "Identifier",
                            "src": "9951:5:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint256"
                                },
<<<<<<< HEAD
                                "id": 3898,
                                "name": "ElementaryTypeNameExpression",
                                "src": "10271:7:4"
=======
                                "id": 2430,
                                "name": "ElementaryTypeNameExpression",
                                "src": "9957:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
<<<<<<< HEAD
                                          "typeIdentifier": "t_struct$_Map_$3410_storage",
=======
                                          "typeIdentifier": "t_struct$_Map_$1942_storage",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                          "typeString": "struct EMap.Map storage ref"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
<<<<<<< HEAD
                                        3683,
                                        3717
                                      ],
                                      "referencedDeclaration": 3717,
                                      "type": "function (struct EMap.Map storage pointer,bytes32,string memory) view returns (bytes32)",
                                      "value": "_get"
                                    },
                                    "id": 3899,
                                    "name": "Identifier",
                                    "src": "10279:4:4"
=======
                                        2215,
                                        2249
                                      ],
                                      "referencedDeclaration": 2249,
                                      "type": "function (struct EMap.Map storage pointer,bytes32,string memory) view returns (bytes32)",
                                      "value": "_get"
                                    },
                                    "id": 2431,
                                    "name": "Identifier",
                                    "src": "9965:4:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "_inner",
<<<<<<< HEAD
                                      "referencedDeclaration": 3725,
=======
                                      "referencedDeclaration": 2257,
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      "type": "struct EMap.Map storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3888,
                                          "type": "struct EMap.LabelMap storage pointer",
                                          "value": "map"
                                        },
                                        "id": 3900,
                                        "name": "Identifier",
                                        "src": "10284:3:4"
                                      }
                                    ],
                                    "id": 3901,
                                    "name": "MemberAccess",
                                    "src": "10284:10:4"
=======
                                          "referencedDeclaration": 2420,
                                          "type": "struct EMap.LabelMap storage pointer",
                                          "value": "map"
                                        },
                                        "id": 2432,
                                        "name": "Identifier",
                                        "src": "9970:3:2"
                                      }
                                    ],
                                    "id": 2433,
                                    "name": "MemberAccess",
                                    "src": "9970:10:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes32)",
                                          "value": "bytes32"
                                        },
<<<<<<< HEAD
                                        "id": 3902,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "10296:7:4"
=======
                                        "id": 2434,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "9982:7:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
<<<<<<< HEAD
                                          "referencedDeclaration": 3890,
                                          "type": "uint256",
                                          "value": "key"
                                        },
                                        "id": 3903,
                                        "name": "Identifier",
                                        "src": "10304:3:4"
                                      }
                                    ],
                                    "id": 3904,
                                    "name": "FunctionCall",
                                    "src": "10296:12:4"
=======
                                          "referencedDeclaration": 2422,
                                          "type": "uint256",
                                          "value": "key"
                                        },
                                        "id": 2435,
                                        "name": "Identifier",
                                        "src": "9990:3:2"
                                      }
                                    ],
                                    "id": 2436,
                                    "name": "FunctionCall",
                                    "src": "9982:12:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 3892,
                                      "type": "string memory",
                                      "value": "errorMessage"
                                    },
                                    "id": 3905,
                                    "name": "Identifier",
                                    "src": "10310:12:4"
                                  }
                                ],
                                "id": 3906,
                                "name": "FunctionCall",
                                "src": "10279:44:4"
                              }
                            ],
                            "id": 3907,
                            "name": "FunctionCall",
                            "src": "10271:53:4"
                          }
                        ],
                        "id": 3908,
                        "name": "FunctionCall",
                        "src": "10265:60:4"
                      }
                    ],
                    "id": 3909,
                    "name": "Return",
                    "src": "10258:67:4"
                  }
                ],
                "id": 3910,
                "name": "Block",
                "src": "10247:86:4"
              }
            ],
            "id": 3911,
            "name": "FunctionDefinition",
            "src": "10107:226:4"
          }
        ],
        "id": 3912,
        "name": "ContractDefinition",
        "src": "799:9537:4"
      }
    ],
    "id": 3913,
    "name": "SourceUnit",
    "src": "35:10303:4"
=======
                                      "referencedDeclaration": 2424,
                                      "type": "string memory",
                                      "value": "errorMessage"
                                    },
                                    "id": 2437,
                                    "name": "Identifier",
                                    "src": "9996:12:2"
                                  }
                                ],
                                "id": 2438,
                                "name": "FunctionCall",
                                "src": "9965:44:2"
                              }
                            ],
                            "id": 2439,
                            "name": "FunctionCall",
                            "src": "9957:53:2"
                          }
                        ],
                        "id": 2440,
                        "name": "FunctionCall",
                        "src": "9951:60:2"
                      }
                    ],
                    "id": 2441,
                    "name": "Return",
                    "src": "9944:67:2"
                  }
                ],
                "id": 2442,
                "name": "Block",
                "src": "9934:84:2"
              }
            ],
            "id": 2443,
            "name": "FunctionDefinition",
            "src": "9798:220:2"
          }
        ],
        "id": 2444,
        "name": "ContractDefinition",
        "src": "770:9250:2"
      }
    ],
    "id": 2445,
    "name": "SourceUnit",
    "src": "33:9988:2"
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
<<<<<<< HEAD
  "updatedAt": "2024-04-30T13:30:04.286Z",
  "devdoc": {
    "details": "Library for managing an enumerable variant of Solidity's\r https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\r type.\r  * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/\r contracts/utils/EnumerableMap.sol\r  * Maps have the following properties:\r  * - Entries are added, removed, and checked for existence in constant time\r (O(1)).\r - Entries are enumerated in O(n). No guarantees are made on the ordering.\r  * ```\r contract Example {\r    // Add the library methods\r    using EnumerableMap for EnumerableMap.LabelMap;\r  *     // Declare a set state variable\r    EnumerableMap.LabelMap private myMap;\r }\r ```\r  ",
=======
  "updatedAt": "2024-01-07T13:23:38.242Z",
  "devdoc": {
    "details": "Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/ contracts/utils/EnumerableMap.sol * Maps have the following properties: * - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. * ``` contract Example {    // Add the library methods    using EnumerableMap for EnumerableMap.LabelMap; *     // Declare a set state variable    EnumerableMap.LabelMap private myMap; } ``` ",
>>>>>>> bb2b6b6 (runs fine on arch. changed negotiation test split the test into two contracts.)
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}